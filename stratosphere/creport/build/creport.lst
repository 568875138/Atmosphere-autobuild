0000000000000000 b _TLS_MODULE_BASE_
0000000000000000 0000000000000401 b __fixedpath
0000000000000000 A __start__
0000000000000000 T _start
0000000000000080 t startup
00000000000000a4 t bssclr_start
00000000000000cc t bss_loop
0000000000000120 T __nx_exit
0000000000000130 T __nx_mod0
0000000000000150 T _init
00000000000001c0 0000000000000038 T exit
0000000000000200 0000000000000138 T main
0000000000000340 00000000000000ec t _GLOBAL__sub_I___nx_applet_type
0000000000000408 0000000000002000 b tmp_buffer.7237
0000000000000430 0000000000000054 t _GLOBAL__sub_I_eh_alloc.cc
0000000000000488 0000000000000054 t _GLOBAL__sub_I_eh_globals.cc
00000000000004e0 t deregister_tm_clones
0000000000000510 t register_tm_clones
0000000000000548 t __do_global_dtors_aux
0000000000000590 t frame_dummy
00000000000005d0 0000000000000194 T ThreadInfo::SaveToFile(__sFILE*)
0000000000000770 00000000000000a8 T ThreadInfo::TryGetStackInfo(unsigned int)
0000000000000820 0000000000000110 T ThreadInfo::ReadFromProcess(unsigned int, unsigned long, bool)
0000000000000930 00000000000000a0 T ThreadInfo::DumpBinary(__sFILE*)
00000000000009d0 00000000000000b4 T ThreadList::DumpBinary(__sFILE*, unsigned long)
0000000000000a90 0000000000000094 T ThreadList::SaveToFile(__sFILE*)
0000000000000b30 00000000000000e8 T ThreadList::ReadThreadsFromProcess(unsigned int, bool)
0000000000000c20 00000000000000c4 T CrashReport::GetFatalContext()
0000000000000cf0 0000000000000094 T CrashReport::IsAddressReadable(unsigned long, unsigned long, MemoryInfo*)
0000000000000d90 00000000000000c8 T CrashReport::HandleAttachProcess(DebugEventInfo&)
0000000000000e60 0000000000000130 T CrashReport::HandleException(DebugEventInfo&)
0000000000000f90 0000000000000068 t CrashReport::ProcessExceptions() [clone .part.8]
0000000000001000 000000000000008c T CrashReport::ProcessDyingMessage()
0000000000001090 0000000000000134 T CrashReport::BuildReport(unsigned long, bool)
00000000000011d0 0000000000000090 T CrashReport::GetCurrentTime(unsigned long*)
0000000000001260 00000000000000b0 T CrashReport::EnsureReportDirectories()
0000000000001310 000000000000011c T CrashReport::Memdump(__sFILE*, char const*, void const*, unsigned long)
0000000000001430 0000000000000404 T CrashReport::SaveToFile(__sFILE*)
0000000000001840 00000000000000ec T CrashReport::SaveReport()
0000000000001930 00000000000000e4 T CodeList::SaveToFile(__sFILE*)
0000000000001a20 0000000000000114 T CodeList::TryFindCodeRegion(unsigned int, unsigned long, unsigned long*)
0000000000001b40 0000000000000150 T CodeList::GetCodeInfoName(unsigned long, unsigned long, unsigned long, char*)
0000000000001c90 00000000000000ec T CodeList::GetCodeInfoBuildId(unsigned long, unsigned long, unsigned char*)
0000000000001d80 00000000000001b0 T CodeList::AddCodeRegion(unsigned long, unsigned long)
0000000000001f30 0000000000000110 T CodeList::ReadCodeRegionsFromThreadInfo(unsigned int, ThreadInfo const*)
0000000000002040 00000000000000d0 T CodeList::GetFormattedAddressString(unsigned long)
0000000000002110 0000000000000030 T __libnx_initheap
0000000000002140 000000000000003c T __appInit
0000000000002180 0000000000000018 T __appExit
00000000000021a0 0000000000000134 t _CacheValues()
00000000000022e0 0000000000000038 T SetFirmwareVersionForLibnx()
0000000000002320 000000000000017c T detectKernelVersion
0000000000002408 0000000000002000 b tmp_buffer.7261
00000000000024a0 0000000000000030 T detectDebugger
00000000000024d0 000000000000008c T mutexLock
0000000000002560 0000000000000030 T mutexUnlock
0000000000002590 000000000000004c T rmutexLock
00000000000025e0 000000000000001c T rmutexUnlock
0000000000002600 0000000000000034 t ipcCloseObjectById
0000000000002640 000000000000012c t _timeGetSession
0000000000002770 00000000000001ec T timeExit
0000000000002960 00000000000000d8 T timeInitialize
0000000000002a40 0000000000000124 T timeGetCurrentTime
0000000000002b70 0000000000000034 t ipcCloseObjectById
0000000000002bb0 000000000000003c T nsdevInitialize
0000000000002bf0 000000000000009c T nsdevExit
0000000000002c90 00000000000001a0 T nsdevTerminateProcess
0000000000002e30 0000000000000044 T smAddOverrideHandle
0000000000002e80 0000000000000060 T smGetServiceOverride
0000000000002ee0 0000000000000014 T smHasInitialized
0000000000002f00 000000000000005c T smExit
0000000000002f60 0000000000000038 T smEncodeName
0000000000002fa0 000000000000012c T smGetServiceOriginal
00000000000030d0 0000000000000158 T smInitialize
0000000000003230 0000000000000074 T smGetService
00000000000032b0 000000000000014c T smRegisterService
0000000000003400 0000000000000140 t _fatalImpl
0000000000003540 0000000000000014 T fatalWithType
0000000000003560 0000000000000014 T fatalSimple
0000000000003580 0000000000000014 T fatalWithContext
00000000000035a0 0000000000000220 t ipcPrepareHeader
00000000000037c0 000000000000022c t ipcParse
00000000000039f0 00000000000000b0 t serviceIpcParse
0000000000003aa0 0000000000000034 t ipcCloseObjectById
0000000000003ae0 0000000000000200 T fsInitialize
0000000000003ce0 000000000000009c T fsExit
0000000000003d80 00000000000001cc T fsMountSdcard
0000000000003f50 00000000000001a4 T fsFsCreateFile
0000000000004100 000000000000019c T fsFsDeleteFile
00000000000042a0 000000000000019c T fsFsCreateDirectory
0000000000004440 000000000000019c T fsFsDeleteDirectory
00000000000045e0 0000000000000214 T fsFsRenameFile
0000000000004800 0000000000000214 T fsFsRenameDirectory
0000000000004a20 00000000000001b0 T fsFsGetEntryType
0000000000004bd0 00000000000001e4 T fsFsOpenFile
0000000000004dc0 00000000000001f8 T fsFsOpenDirectory
0000000000004fc0 00000000000001b0 T fsFsGetFreeSpace
0000000000005170 00000000000001b0 T fsFsGetTotalSpace
0000000000005320 0000000000000194 T fsFsGetFileTimeStampRaw
00000000000054c0 000000000000006c T fsFsClose
0000000000005530 00000000000001f0 T fsFileRead
0000000000005720 00000000000001b8 T fsFileWrite
00000000000058e0 000000000000016c T fsFileFlush
0000000000005a50 0000000000000174 T fsFileSetSize
0000000000005bd0 0000000000000194 T fsFileGetSize
0000000000005d70 000000000000006c T fsFileClose
0000000000005de0 000000000000006c T fsDirClose
0000000000005e50 00000000000001ec T fsDirRead
0000000000006040 0000000000000010 T hosversionGet
0000000000006050 0000000000000010 T hosversionSet
0000000000006060 0000000000000010 t fsdev_link
0000000000006070 0000000000000010 t fsdev_dirreset
0000000000006080 0000000000000010 t fsdev_chmod
0000000000006090 000000000000001c t error_cmp
00000000000060b0 0000000000000058 t fsdev_translate_error
0000000000006110 0000000000000040 t fsdev_fsync
0000000000006150 0000000000000060 t fsdev_ftruncate
00000000000061b0 0000000000000020 t fsdev_dirclose
00000000000061d0 000000000000016c t fsdev_dirnext
0000000000006340 000000000000001c t fsdev_close
0000000000006360 00000000000000a4 t fsdev_fstat
0000000000006410 00000000000000b0 t fsdev_seek
00000000000064c0 0000000000000198 t fsdev_read
0000000000006660 00000000000001a0 t fsdev_write
0000000000006800 0000000000000120 t fsdevFindDevice
0000000000006920 0000000000000140 t _fsdevMountDevice
0000000000006a60 00000000000001fc t fsdev_getfspath
0000000000006c60 0000000000000070 t fsdev_rmdir
0000000000006cd0 00000000000000d4 t fsdev_statvfs
0000000000006db0 00000000000000ec t fsdev_diropen
0000000000006ea0 0000000000000070 t fsdev_mkdir
0000000000006f10 0000000000000114 t fsdev_rename
0000000000007030 00000000000000e8 t fsdev_chdir
0000000000007120 0000000000000070 t fsdev_unlink
0000000000007190 00000000000001bc t fsdev_stat
0000000000007350 000000000000019c t fsdev_open
00000000000074f0 00000000000000b8 t _fsdevUnmountDeviceStruct.part.4
00000000000075b0 0000000000000010 t fsdev_fchmod
00000000000075c0 0000000000000170 T fsdevMountSdmc
0000000000007730 0000000000000064 T fsdevUnmountAll
00000000000077a0 000000000000012c T decode_utf8
00000000000078cc T svcUnmapMemory
00000000000078d4 T svcQueryMemory
00000000000078e8 T svcExitProcess
00000000000078f0 T svcCloseHandle
00000000000078f8 T svcArbitrateLock
0000000000007900 T svcArbitrateUnlock
0000000000007908 T svcWaitProcessWideKeyAtomic
0000000000007910 T svcSignalProcessWideKey
0000000000007918 T svcGetSystemTick
0000000000007920 T svcConnectToNamedPort
0000000000007934 T svcSendSyncRequest
000000000000793c T svcBreak
0000000000007944 T svcReturnFromException
000000000000794c T svcGetInfo
0000000000007960 T svcDebugActiveProcess
0000000000007974 T svcGetDebugEvent
000000000000797c T svcGetThreadList
0000000000007990 T svcGetDebugThreadContext
0000000000007998 T svcQueryDebugProcessMemory
00000000000079ac T svcReadDebugProcessMemory
00000000000079b4 T svcGetDebugThreadParam
00000000000079cc T svcCallSecureMonitor
0000000000007a00 T __aarch64_read_tp
0000000000007a10 00000000000000a0 T __nx_dynamic
0000000000007ab0 0000000000000028 W __libnx_init
0000000000007ae0 0000000000000020 W __libnx_exit
0000000000007b00 000000000000001c T __syscall_exit
0000000000007b20 0000000000000034 T __syscall_getreent
0000000000007b60 0000000000000004 T __syscall_lock_acquire
0000000000007b70 0000000000000004 T __syscall_lock_release
0000000000007b80 0000000000000004 T __syscall_lock_acquire_recursive
0000000000007b90 0000000000000004 T __syscall_lock_release_recursive
0000000000007ba0 0000000000000040 T __syscall_cond_broadcast
0000000000007be0 000000000000003c T __syscall_cond_wait
0000000000007c20 0000000000000044 T __syscall_tls_create
0000000000007c70 0000000000000018 T __syscall_tls_set
0000000000007c90 0000000000000004 T __syscall_tls_get
0000000000007ca0 0000000000000018 T __syscall_tls_delete
0000000000007cc0 0000000000000080 T newlibSetup
0000000000007d40 0000000000000324 T argvSetup
0000000000008064 W __libnx_exception_entry
00000000000080f0 t __libnx_exception_entry_start
0000000000008218 t __libnx_exception_entry_abort
000000000000821c t __libnx_exception_entry_end
0000000000008224 T __libnx_exception_returnentry
0000000000008240 000000000000007c t _GetRegionFromInfo.isra.1
00000000000082c0 0000000000000114 T virtmemSetup
00000000000083e0 0000000000000060 T condvarWaitTimeout
0000000000008440 0000000000000010 T threadTlsGet
0000000000008450 0000000000000010 T threadTlsSet
0000000000008460 00000000000000d8 T threadTlsAlloc
0000000000008540 0000000000000048 T threadTlsFree
0000000000008590 0000000000000208 T envSetup
00000000000087a0 0000000000000020 T envGetMainThreadHandle
00000000000087c0 000000000000000c T envIsNso
00000000000087d0 0000000000000014 T envHasArgv
00000000000087f0 000000000000000c T envGetArgv
0000000000008800 000000000000000c T envGetExitFuncPtr
0000000000008810 00000000000000c4 T nxlinkSetup
00000000000088d8 0000000000000068 T operator new(unsigned long)
0000000000008940 000000000000000c T std::bad_alloc::what() const
0000000000008950 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000008950 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000008968 0000000000000028 T std::bad_alloc::~bad_alloc()
0000000000008990 0000000000000010 T std::get_new_handler()
00000000000089a0 0000000000000004 T std::exception::~exception()
00000000000089a0 0000000000000004 T std::exception::~exception()
00000000000089a8 0000000000000014 T std::bad_exception::~bad_exception()
00000000000089a8 0000000000000014 T std::bad_exception::~bad_exception()
00000000000089c0 000000000000000c T std::bad_exception::what() const
00000000000089d0 0000000000000028 T std::bad_exception::~bad_exception()
00000000000089f8 0000000000000004 T operator delete(void*, unsigned long)
0000000000008a00 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
0000000000008a68 0000000000000058 T __cxa_init_primary_exception
0000000000008ac0 0000000000000054 T __cxa_throw
0000000000008b18 0000000000000070 T __cxa_rethrow
0000000000008b88 00000000000000a0 T __cxa_begin_catch
0000000000008c28 0000000000000094 T __cxa_end_catch
0000000000008cc0 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000008cd0 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000008ce0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000008ce0 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000008cf8 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000008cf8 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000008d10 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000008d48 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000008d80 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000008db8 0000000000000160 t (anonymous namespace)::pool::free(void*) [clone .constprop.2]
0000000000008f18 0000000000000128 t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.3]
0000000000009040 0000000000000064 T __cxa_allocate_exception
00000000000090a8 0000000000000030 T __cxa_free_exception
00000000000090d8 0000000000000004 T operator delete(void*)
00000000000090e0 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000000090e0 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000000090f8 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000009120 0000000000000080 T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000000091a0 000000000000013c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000000092e0 0000000000000068 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000009348 0000000000000014 W __eh_globals_init::~__eh_globals_init()
0000000000009348 0000000000000014 W __eh_globals_init::~__eh_globals_init()
0000000000009360 0000000000000048 t eh_globals_dtor(void*)
00000000000093a8 0000000000000024 T __cxa_get_globals_fast
00000000000093d0 0000000000000074 T __cxa_get_globals
0000000000009448 000000000000003c T __cxxabiv1::__terminate(void (*)())
0000000000009488 0000000000000010 T std::get_terminate()
0000000000009498 0000000000000010 T std::terminate()
00000000000094a8 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
00000000000094b8 0000000000000010 T std::get_unexpected()
00000000000094c8 0000000000000010 T std::unexpected()
00000000000094d8 0000000000000004 T std::type_info::~type_info()
00000000000094d8 0000000000000004 T std::type_info::~type_info()
00000000000094e0 0000000000000008 T std::type_info::__is_pointer_p() const
00000000000094e0 0000000000000008 T std::type_info::__is_function_p() const
00000000000094e8 0000000000000084 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
0000000000009570 000000000000015c t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
00000000000096d0 00000000000000c0 t get_ttype_entry(lsda_header_info*, unsigned long)
0000000000009790 0000000000000094 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
0000000000009828 000000000000006c t base_of_encoded_value(unsigned char, _Unwind_Context*)
0000000000009898 0000000000000108 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000000099a0 00000000000004dc T __gxx_personality_v0
0000000000009e80 00000000000000f0 T __cxa_call_unexpected
0000000000009f70 000000000000006c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0000000000009fe0 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000009ff0 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000009ff0 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000000a008 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000000a030 00000000000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000000000000a108 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000000000000a170 00000000000000a8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
000000000000a218 0000000000000044 T __cxa_call_terminate
000000000000a260 000000000000015c t read_encoded_value_with_base
000000000000a3c0 0000000000000070 t base_of_encoded_value
000000000000a430 000000000000080c t execute_cfa_program
000000000000ac40 000000000000040c t uw_frame_state_for
000000000000b050 0000000000000158 t init_dwarf_reg_size_table
000000000000b1a8 0000000000000720 t execute_stack_op
000000000000b8c8 000000000000037c t uw_update_context_1
000000000000bc48 0000000000000244 t uw_init_context_1
000000000000be90 00000000000000b4 t uw_update_context
000000000000bf48 00000000000000e0 t _Unwind_RaiseException_Phase2
000000000000c028 0000000000000118 t _Unwind_ForcedUnwind_Phase2
000000000000c140 0000000000000164 t uw_install_context_1
000000000000c2a8 0000000000000054 t _Unwind_SetGR
000000000000c300 0000000000000014 t _Unwind_GetIPInfo
000000000000c318 0000000000000008 t _Unwind_SetIP
000000000000c320 0000000000000008 t _Unwind_GetLanguageSpecificData
000000000000c328 0000000000000008 t _Unwind_GetRegionStart
000000000000c330 0000000000000008 t _Unwind_GetDataRelBase
000000000000c338 0000000000000008 t _Unwind_GetTextRelBase
000000000000c340 0000000000000004 t _Unwind_DebugHook
000000000000c348 000000000000018c t _Unwind_RaiseException
000000000000c4d8 0000000000000114 t _Unwind_Resume
000000000000c5f0 0000000000000110 t _Unwind_Resume_or_Rethrow
000000000000c700 0000000000000018 t _Unwind_DeleteException
000000000000c718 000000000000001c t fde_unencoded_compare
000000000000c738 00000000000000f4 t frame_downheap
000000000000c830 00000000000000c0 t frame_heapsort
000000000000c8f0 0000000000000060 t size_of_encoded_value
000000000000c950 000000000000015c t read_encoded_value_with_base
000000000000cab0 0000000000000120 t get_cie_encoding
000000000000cbd0 0000000000000068 t base_from_object.isra.5
000000000000cc38 0000000000000090 t fde_single_encoding_compare
000000000000ccc8 0000000000000194 t classify_object_over_fdes
000000000000ce60 0000000000000148 t add_fdes
000000000000cfa8 0000000000000188 t linear_search_fdes
000000000000d130 00000000000000bc t fde_mixed_encoding_compare
000000000000d1f0 0000000000000698 t search_object
000000000000d888 0000000000000120 t __deregister_frame_info_bases.part.8
000000000000d9a8 0000000000000054 t __register_frame_info.part.7
000000000000da00 0000000000000014 t __register_frame_info
000000000000da18 0000000000000018 t __deregister_frame_info
000000000000da30 00000000000001c0 t _Unwind_Find_FDE
000000000000dbf0 0000000000000018 T abort
000000000000dc08 00000000000000b8 T bsearch
000000000000dcc0 0000000000000014 T __cxa_atexit
000000000000dcd8 0000000000000014 T __errno
000000000000dcf0 000000000000015c T _fclose_r
000000000000de50 000000000000001c T fclose
000000000000de70 0000000000000214 T __sflush_r
000000000000e088 00000000000000b8 T _fflush_r
000000000000e140 0000000000000040 T fflush
000000000000e180 0000000000000078 t std
000000000000e1f8 000000000000000c T _cleanup_r
000000000000e208 0000000000000060 T __sfmoreglue
000000000000e268 000000000000000c T __sfp_lock_acquire
000000000000e278 000000000000000c T __sfp_lock_release
000000000000e288 000000000000000c T __sinit_lock_acquire
000000000000e298 000000000000000c T __sinit_lock_release
000000000000e2a8 0000000000000080 T __sinit
000000000000e328 0000000000000118 T __sfp
000000000000e440 0000000000000044 T __libc_fini_array
000000000000e488 0000000000000130 T _fopen_r
000000000000e5b8 0000000000000030 T fopen
000000000000e5e8 0000000000000094 T fprintf
000000000000e680 00000000000000a4 T fputc
000000000000e728 00000000000000b4 T _fputs_r
000000000000e7e0 0000000000000030 T fputs
000000000000e810 0000000000000118 T _malloc_trim_r
000000000000e928 00000000000002f4 T _free_r
000000000000ec20 0000000000000004 T _fseek_r
000000000000ec28 00000000000004c4 T _fseeko_r
000000000000f0f0 00000000000004b8 T __sfvwrite_r
000000000000f5a8 00000000000000b8 T _fwalk
000000000000f660 00000000000000bc T _fwalk_reent
000000000000f720 00000000000000e0 T _fwrite_r
000000000000f800 0000000000000040 T fwrite
000000000000f840 000000000000008c T __libc_init_array
000000000000f8d0 00000000000000a4 T __swhatbuf_r
000000000000f978 000000000000010c T __smakebuf_r
000000000000fa88 000000000000001c T malloc
000000000000faa8 000000000000001c T free
000000000000fac8 000000000000087c T _malloc_r
0000000000010344 00000000000000d8 T memchr
0000000000010440 000000000000016c T memcpy
00000000000105c0 00000000000000ac T memmove
0000000000010680 00000000000001dc T memset
0000000000010860 000000000000000c T __malloc_lock
0000000000010870 000000000000000c T __malloc_unlock
0000000000010880 00000000000000e0 T _putc_r
0000000000010960 000000000000056c T _realloc_r
0000000000010ed0 0000000000000020 t lflush
0000000000010ef0 00000000000001d0 T __srefill_r
00000000000110c0 00000000000000b4 T _raise_r
0000000000011178 000000000000001c T raise
0000000000011198 000000000000014c T snprintf
00000000000112e8 0000000000000050 T __sread
0000000000011338 000000000000006c T __swrite
00000000000113a8 0000000000000050 T __sseek
00000000000113f8 0000000000000008 T __sclose
0000000000011400 00000000000000dc T strchr
0000000000011500 00000000000000e4 T strcmp
0000000000011600 0000000000000140 T strlen
0000000000011740 0000000000000084 T strncat
000000000001181c 00000000000001b8 T strncmp
00000000000119d8 00000000000000a8 T strncpy
0000000000011aa4 00000000000000e0 T strnlen
0000000000011b60 00000000000001ac t _strtoul_l.isra.0
0000000000011d10 0000000000000048 T strtoul
0000000000011d58 000000000000076c t get_arg
00000000000124c4 0000000000003b38 T _svfprintf_r
0000000000015ffc 000000000000076c t get_arg
0000000000016768 0000000000003c28 T _vfprintf_r
000000000001a390 00000000000000ec t __sbprintf
000000000001a480 0000000000000118 T __swbuf_r
000000000001a598 00000000000000d0 T _wcrtomb_r
000000000001a668 0000000000000010 T _wcsrtombs_r
000000000001a678 0000000000000140 T __swsetup_r
000000000001a7b8 00000000000000d0 T __register_exitproc
000000000001a888 0000000000000124 T __call_exitprocs
000000000001a9b0 00000000000001a8 t quorem
000000000001ab58 00000000000010dc T _dtoa_r
000000000001bc38 00000000000000a8 T __sflags
000000000001bce0 0000000000000008 T __localeconv_l
000000000001bce8 0000000000000028 T _localeconv_r
000000000001bd10 000000000000002c T __locale_mb_cur_max
000000000001bd40 00000000000002c8 T __utf8_mbtowc
000000000001c008 0000000000000090 T _Balloc
000000000001c098 000000000000001c T _Bfree
000000000001c0b8 00000000000000e8 T __multadd
000000000001c1a0 000000000000005c T __hi0bits
000000000001c200 00000000000000a0 T __lo0bits
000000000001c2a0 000000000000002c T __i2b
000000000001c2d0 00000000000001c8 T __multiply
000000000001c498 0000000000000104 T __pow5mult
000000000001c5a0 0000000000000134 T __lshift
000000000001c6d8 0000000000000050 T __mcmp
000000000001c728 000000000000014c T __mdiff
000000000001c878 0000000000000138 T __d2b
000000000001c9b0 000000000000007c T frexp
000000000001ca2c 00000000000001c0 T __ssprint_r
000000000001cbec 000000000000003c T __sprint_r
000000000001cc28 00000000000001dc T _wcsnrtombs_l
000000000001ce08 0000000000000054 T _wcsnrtombs_r
000000000001ce60 00000000000000e4 T __utf8_wctomb
000000000001cf48 0000000000000094 T _calloc_r
000000000001cfe0 0000000000000008 t null_write
000000000001cfe8 0000000000000018 T setDefaultDevice
000000000001d000 0000000000000108 T FindDevice
000000000001d108 0000000000000034 T RemoveDevice
000000000001d140 00000000000000d8 T AddDevice
000000000001d218 00000000000000a8 T _close_r
000000000001d2c0 0000000000000080 T _fstat_r
000000000001d340 0000000000000010 T _getpid_r
000000000001d350 0000000000000008 T _isatty_r
000000000001d358 0000000000000010 T _kill_r
000000000001d368 0000000000000094 T _lseek_r
000000000001d400 00000000000000e0 T _open_r
000000000001d4e0 00000000000000a4 T _read_r
000000000001d588 0000000000000078 T _sbrk_r
000000000001d600 00000000000000a4 T _write_r
000000000001d6a8 0000000000000020 T _exit
000000000001d6c8 0000000000000234 T _concatenate_path
000000000001d900 0000000000000178 T chdir
000000000001da78 0000000000000074 T mkdir
000000000001daf0 0000000000000014 T __libc_lock_acquire
000000000001db08 0000000000000014 T __libc_lock_release
000000000001db20 000000000000000c T __libc_lock_init_recursive
000000000001db30 0000000000000014 T __libc_lock_acquire_recursive
000000000001db48 0000000000000014 T __libc_lock_release_recursive
000000000001db60 0000000000000004 T __libc_lock_close_recursive
000000000001db68 0000000000000018 T __libc_cond_broadcast
000000000001db80 0000000000000018 T __libc_cond_wait
000000000001db98 000000000000003c T __free_handle
000000000001dbd8 0000000000000058 T __release_handle
000000000001dc30 00000000000000c0 T __alloc_handle
000000000001dcf0 0000000000000020 T __get_handle
000000000001dd10 0000000000000020 T __getreent
000000000001dd30 000000000000006c T pthread_mutex_lock
000000000001dda0 000000000000006c T pthread_mutex_unlock
000000000001de10 00000000000000dc T pthread_once
000000000001def0 0000000000000024 T pthread_key_create
000000000001df18 0000000000000018 T pthread_setspecific
000000000001df30 0000000000000018 T pthread_getspecific
000000000001df48 0000000000000018 T pthread_key_delete
000000000001df60 0000000000000348 t __trunctfdf2
000000000001e2a8 0000000000000070 t __sfp_handle_exceptions
000000000001e318 0000000000000100 T strrchr
000000000001e418 T _fini
000000000001f7d8 000000000000001c r CSWTCH.8
000000000001f828 0000000000000018 r error_table
000000000001f858 000000000000000d V typeinfo name for std::bad_alloc
000000000001f878 000000000000000d V typeinfo name for std::exception
000000000001f888 0000000000000012 V typeinfo name for std::bad_exception
000000000001f8a0 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
000000000001f8c0 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
000000000001f900 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
000000000001f928 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
000000000001f9a8 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
000000000001f9d0 000000000000000d V typeinfo name for std::type_info
000000000001f9e0 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
000000000001fc70 0000000000000008 r terminator.9403
000000000001fc78 0000000000000101 R _ctype_
000000000001ff08 0000000000000010 r blanks.6590
000000000001ff18 0000000000000010 r zeroes.6591
0000000000020078 0000000000000010 r blanks.6605
0000000000020088 0000000000000010 r zeroes.6606
0000000000020130 0000000000000028 R __mprec_bigtens
0000000000020158 00000000000000c8 R __mprec_tens
0000000000020220 000000000000000c r p05.5339
0000000000020230 000000000000006c R __action_table
00000000000202a0 0000000000000100 R __chclass
00000000000203a0 000000000000006c R __state_table
0000000000020418 0000000000000003 R DIRECTORY_PARENT
0000000000020420 r __EH_FRAME_BEGIN__
0000000000020420 R __eh_frame_hdr_end
0000000000020420 R __eh_frame_hdr_start
000000000002510c r __FRAME_END__
00000000000251c0 a _DYNAMIC
0000000000028000 t __frame_dummy_init_array_entry
0000000000028000 T __init_array_start
0000000000028000 B __preinit_array_end
0000000000028000 B __preinit_array_start
0000000000028000 D __tdata_lma
0000000000028000 D __tdata_lma_end
0000000000028020 t __do_global_dtors_aux_fini_array_entry
0000000000028020 T __fini_array_start
0000000000028020 T __init_array_end
0000000000028028 a _GLOBAL_OFFSET_TABLE_
0000000000028028 T __fini_array_end
0000000000028028 T __got_start__
00000000000282d8 D __dso_handle
00000000000282d8 D __got_end__
00000000000282e0 0000000000000008 D nx_inner_heap_size
00000000000282e8 0000000000000004 D __nx_applet_type
00000000000282f0 0000000000000401 d __cwd
00000000000286f4 0000000000000004 d fsdev_fsdevice_cwd
00000000000286f8 0000000000000004 d fsdev_fsdevice_default
0000000000028700 00000000000000e0 d fsdev_devoptab
00000000000287e0 0000000000000008 V __nx_exception_stack_size
00000000000287e8 0000000000000018 V typeinfo for std::bad_alloc
0000000000028800 0000000000000028 V vtable for std::bad_alloc
0000000000028828 0000000000000010 V typeinfo for std::exception
0000000000028838 0000000000000018 V typeinfo for std::bad_exception
0000000000028850 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
0000000000028860 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
0000000000028870 0000000000000028 V vtable for std::bad_exception
0000000000028898 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
00000000000288b0 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
00000000000288c8 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
00000000000288f0 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
0000000000028918 0000000000000008 V DW.ref.__gxx_personality_v0
0000000000028920 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
0000000000028938 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
0000000000028990 0000000000000010 V typeinfo for std::type_info
00000000000289a0 0000000000000008 D __cxxabiv1::__terminate_handler
00000000000289a8 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
00000000000289c0 0000000000000058 V vtable for __cxxabiv1::__class_type_info
0000000000028a18 0000000000000008 D __cxxabiv1::__unexpected_handler
0000000000028a20 0000000000000008 D _impure_ptr
0000000000028a28 0000000000000768 d impure_data
0000000000029190 0000000000000008 D _global_impure_ptr
0000000000029198 0000000000000008 D __malloc_sbrk_base
00000000000291a0 0000000000000008 D __malloc_trim_threshold
00000000000291a8 0000000000000810 D __malloc_av_
00000000000299b8 00000000000001a8 D __global_locale
0000000000029b60 0000000000000004 d defaultDevice
0000000000029b68 0000000000000080 D devoptab_list
0000000000029be8 00000000000000e0 D dotab_stdnull
0000000000029cc8 0000000000000400 d _current_working_directory
000000000002a0c8 0000000000000010 d __stderr_handle
000000000002a0d8 0000000000000010 d __stdin_handle
000000000002a0e8 0000000000000010 d __stdout_handle
000000000002a0f8 0000000000002000 d handles
000000000002c0f8 D __TMC_END__
000000000002c0f8 D __bss_start__
000000000002c0f8 b completed.7870
000000000002c100 b object.7875
000000000002c130 000000000001d360 b g_Creport
0000000000049490 0000000000100000 B nx_inner_heap
0000000000149490 0000000000000001 b g_HasCached
0000000000149494 0000000000000004 b g_Mutex
0000000000149498 0000000000000004 b g_firmware_version
000000000014949c 0000000000000004 b g_Version
00000000001494a0 0000000000000001 b g_VersionCached
00000000001494a4 0000000000000004 b g_VersionMutex
00000000001494a8 0000000000000008 b g_refCnt
00000000001494b0 000000000000000c b g_timeLocalSystemClock
00000000001494c0 000000000000000c b g_timeNetworkSystemClock
00000000001494d0 000000000000000c b g_timeSrv
00000000001494e0 000000000000000c b g_timeTimeZoneService
00000000001494f0 000000000000000c b g_timeUserSystemClock
0000000000149500 0000000000000008 b g_nsdevRefCnt
0000000000149508 000000000000000c b g_nsdevSrv
0000000000149518 0000000000000008 b g_refCnt
0000000000149520 0000000000000004 b g_smHandle
0000000000149528 0000000000000200 b g_smOverrides
0000000000149728 0000000000000008 b g_smOverridesNum
0000000000149730 000000000000000c b g_fsSrv
0000000000149740 0000000000000008 b g_refCnt
0000000000149748 0000000000000004 b g_hosVersion
0000000000149750 0000000000002300 b fsdev_fsdevices
000000000014ba50 0000000000000001 b fsdev_initialised
000000000014ba54 0000000000000004 V __nx_exception_ignoredebug
000000000014ba60 0000000000000400 V __nx_exception_stack
000000000014be60 0000000000000008 b g_argv_empty
000000000014be68 0000000000000010 b g_AddressSpace
000000000014be78 0000000000000030 b g_Region
000000000014bea8 0000000000000008 b g_threadList
000000000014beb0 0000000000000004 b g_threadMutex
000000000014beb8 00000000000000e0 b g_tlsDestructors
000000000014bf98 0000000000000008 b g_tlsUsageMask
000000000014bfa0 0000000000000001 b g_hasRandomSeed
000000000014bfa1 0000000000000001 b g_isNso
000000000014bfa4 0000000000000004 b g_lastLoadResult
000000000014bfa8 0000000000000008 b g_loaderRetAddr
000000000014bfb0 0000000000000004 b g_mainThreadHandle
000000000014bfb8 0000000000000008 b g_nextLoadArgv
000000000014bfc0 0000000000000008 b g_nextLoadPath
000000000014bfc8 0000000000000008 b g_overrideArgv
000000000014bfd0 0000000000000008 b g_overrideHeapAddr
000000000014bfd8 0000000000000008 b g_overrideHeapSize
000000000014bfe0 0000000000000004 b g_processHandle
000000000014bfe8 0000000000000010 b g_randomSeed
000000000014bff8 0000000000000010 b g_syscallHints
000000000014c008 0000000000000008 b (anonymous namespace)::__new_handler
000000000014c010 0000000000000028 b (anonymous namespace)::emergency_pool
000000000014c038 0000000000000010 b eh_globals
000000000014c048 0000000000000008 b init
000000000014c050 0000000000000062 b dwarf_reg_size_table
000000000014c0b8 0000000000000004 b once_regsizes.9756
000000000014c0c0 0000000000000008 b marker.9297
000000000014c0c8 0000000000000010 b object_mutex
000000000014c0d8 0000000000000008 b seen_objects
000000000014c0e0 0000000000000008 b unseen_objects
000000000014c0e8 000000000000000c b __sfp_recursive_mutex
000000000014c0f8 000000000000000c b __sinit_recursive_mutex
000000000014c108 0000000000000028 B __malloc_current_mallinfo
000000000014c130 0000000000000008 B __malloc_max_sbrked_mem
000000000014c138 0000000000000008 B __malloc_max_total_mem
000000000014c140 0000000000000008 B __malloc_top_pad
000000000014c148 000000000000000c b __malloc_recursive_mutex
000000000014c158 000000000000000c B __atexit_recursive_mutex
000000000014c168 0000000000000008 b heap_start.5295
000000000014c170 0000000000000008 B fake_heap_end
000000000014c178 0000000000000008 B fake_heap_start
000000000014c180 0000000000000400 b temp_cwd
000000000014c580 0000000000000004 b __hndl_lock
000000000014c584 0000000000000004 b __pthread_once_cv
000000000014c588 0000000000000004 b __pthread_once_lock
000000000014c590 0000000000000340 B __nx_exceptiondump
000000000014c8d0 0000000000000008 B __stack_top
000000000014c8d8 0000000000000008 B __system_argv
000000000014c8e0 0000000000000004 B __system_argc
000000000014c8e8 0000000000000004 B __nxlink_host
000000000014c8f0 B __tls_start
0000000000150cf8 B __bss_end__
0000000000150cf8 A __end__
0000000000150cf8 B __tls_end
0000000000151000 A __argdata__
