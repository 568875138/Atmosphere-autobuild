0000000000000000 b _TLS_MODULE_BASE_
0000000000000000 0000000000000401 b __component
0000000000000000 A __start__
0000000000000000 T _start
0000000000000080 t startup
00000000000000a4 t bssclr_start
00000000000000cc t bss_loop
0000000000000120 T __nx_exit
0000000000000130 T __nx_mod0
0000000000000150 T _init
00000000000001c0 000000000000000c W IWaitable::HandleDeferred()
00000000000001d0 0000000000000038 T exit
0000000000000210 000000000000007c t _GLOBAL__sub_I__ZN5Utils20InitializeThreadFuncEPv
0000000000000290 000000000000002c t _GLOBAL__sub_I__Z20LaunchAllMitmModulesv
00000000000002c0 0000000000000068 T main
0000000000000330 0000000000000044 t _GLOBAL__sub_I__ZN13FsMitmService11PostProcessEP18IMitmServiceObjectP18IpcResponseContext
0000000000000380 000000000000000c t _GLOBAL__sub_I__ZN12Boot0Storage17CanModifyBctPubksEv
0000000000000390 000000000000005c t _GLOBAL__sub_I__Z16g_settings_itemsB5cxx11
00000000000003f0 000000000000000c t _GLOBAL__sub_I__ZN14VersionManager10InitializeEv
0000000000000400 0000000000000074 t _GLOBAL__sub_I__ZN14MitmQueryUtils22GetAssociatedTidForPidEmPm
0000000000000480 0000000000000020 t _GLOBAL__sub_I__Z29RegisterMitmServerQueryHandlejO19ServiceObjectHolder
00000000000004a0 0000000000000054 t _GLOBAL__sub_I_eh_alloc.cc
00000000000004f8 0000000000000054 t _GLOBAL__sub_I_eh_globals.cc
0000000000000550 t deregister_tm_clones
0000000000000580 t register_tm_clones
00000000000005b8 t __do_global_dtors_aux
0000000000000600 t frame_dummy
0000000000000640 0000000000000010 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0000000000000640 0000000000000010 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0000000000000650 0000000000000210 t ParseOverrideKey(char const*)
0000000000000860 0000000000000088 t FsMitmTitleSpecificIniHandler(void*, char const*, char const*, char const*)
00000000000008f0 00000000000001d0 t FsMitmIniHandler(void*, char const*, char const*, char const*)
0000000000000ac0 0000000000000090 t Utils::HasGlobalFlag(char const*) [clone .part.14]
0000000000000b50 000000000000001c T Utils::IsSdInitialized()
0000000000000b70 0000000000000060 T Utils::WaitSdInitialized()
0000000000000bd0 0000000000000038 T Utils::OpenSdFile(char const*, int, FsFile*)
0000000000000c10 00000000000000bc T Utils::OpenSdFileForAtmosphere(unsigned long, char const*, int, FsFile*)
0000000000000cd0 00000000000000cc t Utils::HasTitleFlag(unsigned long, char const*) [clone .part.13]
0000000000000da0 0000000000000038 T Utils::OpenSdDir(char const*, FsDir*)
0000000000000de0 00000000000000b8 T Utils::OpenSdDirForAtmosphere(unsigned long, char const*, FsDir*)
0000000000000ea0 0000000000000098 T Utils::OpenRomFSFile(FsFileSystem*, unsigned long, char const*, int, FsFile*)
0000000000000f40 000000000000003c T Utils::OpenRomFSSdFile(unsigned long, char const*, int, FsFile*)
0000000000000f80 0000000000000090 T Utils::OpenRomFSDir(FsFileSystem*, unsigned long, char const*, FsDir*)
0000000000001010 0000000000000038 T Utils::OpenRomFSSdDir(unsigned long, char const*, FsDir*)
0000000000001050 00000000000000d8 T Utils::HasSdRomfsContent(unsigned long)
0000000000001130 0000000000000154 T Utils::SaveSdFileForAtmosphere(unsigned long, char const*, void*, unsigned long)
0000000000001290 000000000000004c T Utils::IsHblTid(unsigned long)
00000000000012e0 0000000000000024 T Utils::IsWebAppletTid(unsigned long)
0000000000001310 0000000000000024 T Utils::HasTitleFlag(unsigned long, char const*)
0000000000001340 0000000000000024 T Utils::HasGlobalFlag(char const*)
0000000000001370 0000000000000060 T Utils::HasHblFlag(char const*)
00000000000013d0 0000000000000078 T Utils::HasFlag(unsigned long, char const*)
0000000000001450 0000000000000058 T Utils::GetKeysHeld(unsigned long*)
00000000000014b0 000000000000006c t HasOverrideKey(OverrideKey*) [clone .isra.16]
0000000000001520 000000000000010c T Utils::GetTitleOverrideKey(unsigned long)
0000000000001630 00000000000000b8 T Utils::RefreshConfiguration()
00000000000016f0 00000000000000c0 T Utils::HasOverrideButton(unsigned long)
00000000000017b0 0000000000000004 T Utils::GetSettingsItemValue(char const*, char const*, void*, unsigned long, unsigned long*)
00000000000017c0 0000000000000120 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00000000000018e0 0000000000000658 T Utils::InitializeThreadFunc(void*)
0000000000001f40 0000000000000134 W __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > std::__find_if<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_equals_val<unsigned long const> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_equals_val<unsigned long const>, std::random_access_iterator_tag)
0000000000002080 00000000000000ac T Utils::HasSdMitMFlag(unsigned long)
0000000000002130 0000000000000064 T Utils::HasSdDisableMitMFlag(unsigned long)
00000000000021a0 00000000000000b0 T LaunchAllMitmModules()
0000000000002250 0000000000000048 T WaitAllMitmModules()
00000000000022a0 0000000000000004 T Reboot()
00000000000022b0 0000000000000004 T Log(void const*, int)
00000000000022c0 0000000000000030 T __libnx_initheap
00000000000022f0 000000000000009c T __appInit
0000000000002390 0000000000000014 T __appExit
00000000000023b0 0000000000000028 W IStorageInterface::~IStorageInterface()
00000000000023b0 0000000000000028 W IStorageInterface::~IStorageInterface()
00000000000023e0 000000000000002c W IStorageInterface::Read(OutBuffer<unsigned char, (BufferType)1>, unsigned long, unsigned long)
0000000000002410 000000000000002c W IStorageInterface::Write(InBuffer<unsigned char, (BufferType)1>, unsigned long, unsigned long)
0000000000002440 0000000000000010 W IStorageInterface::Flush()
0000000000002450 0000000000000010 W IStorageInterface::SetSize(unsigned long)
0000000000002460 0000000000000010 W IStorageInterface::GetSize(Out<unsigned long, void>)
0000000000002470 0000000000000028 W IStorageInterface::OperateRange(Out<FsRangeInfo, void>, unsigned int, unsigned long, unsigned long)
00000000000024a0 000000000000000c W IROStorage::Write(void*, unsigned long, unsigned long)
00000000000024b0 0000000000000008 W IROStorage::Flush()
00000000000024c0 000000000000000c W IROStorage::SetSize(unsigned long)
00000000000024d0 0000000000000010 W IFileSystemInterface::Commit()
00000000000024e0 0000000000000028 W IFileSystemInterface::~IFileSystemInterface()
00000000000024e0 0000000000000028 W IFileSystemInterface::~IFileSystemInterface()
0000000000002510 0000000000000004 W std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002510 0000000000000004 W std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002520 0000000000000018 W std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000002540 0000000000000004 W std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002540 0000000000000004 W std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002550 0000000000000018 W std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000002570 0000000000000004 W std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002570 0000000000000004 W std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002580 0000000000000018 W std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
00000000000025a0 0000000000000004 W std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000025a0 0000000000000004 W std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000025b0 0000000000000010 W std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000025c0 0000000000000018 W std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
00000000000025e0 0000000000000004 W std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000025e0 0000000000000004 W std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000025f0 0000000000000018 W std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000002610 0000000000000004 W std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002610 0000000000000004 W std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002620 0000000000000010 W std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000002630 0000000000000018 W std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000002650 0000000000000004 W std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002650 0000000000000004 W std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002660 0000000000000010 W std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000002670 0000000000000018 W std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000002690 0000000000000044 W IStorageInterface::~IStorageInterface()
00000000000026e0 0000000000000044 W IFileSystemInterface::~IFileSystemInterface()
0000000000002730 0000000000000008 W std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002740 0000000000000008 W std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002750 0000000000000008 W std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002760 0000000000000008 W std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002770 0000000000000008 W std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002780 0000000000000008 W std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000002790 0000000000000008 W std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000027a0 0000000000000048 W ProxyFileSystem::~ProxyFileSystem()
00000000000027a0 0000000000000048 W ProxyFileSystem::~ProxyFileSystem()
00000000000027f0 0000000000000014 W ProxyFileSystem::QueryEntryImpl(char*, unsigned long, char const*, unsigned long, int, FsPath const&)
0000000000002810 0000000000000014 W ProxyFileSystem::GetFileTimeStampRawImpl(FsTimeStampRaw*, FsPath const&)
0000000000002830 0000000000000008 W ProxyFileSystem::CleanDirectoryRecursivelyImpl(FsPath const&)
0000000000002840 0000000000000014 W ProxyFileSystem::GetTotalSpaceSizeImpl(unsigned long*, FsPath const&)
0000000000002860 0000000000000014 W ProxyFileSystem::GetFreeSpaceSizeImpl(unsigned long*, FsPath const&)
0000000000002880 0000000000000008 W ProxyFileSystem::CommitImpl()
0000000000002890 0000000000000008 W ProxyDirectory::GetEntryCountImpl(unsigned long*)
00000000000028a0 000000000000003c W ProxyDirectory::ReadImpl(unsigned long*, FsDirectoryEntry*, unsigned long)
00000000000028e0 0000000000000048 W ProxyDirectory::~ProxyDirectory()
00000000000028e0 0000000000000048 W ProxyDirectory::~ProxyDirectory()
0000000000002930 0000000000000008 W RomFileStorage::OperateRange(unsigned int, unsigned long, unsigned long, FsRangeInfo*)
0000000000002940 0000000000000008 W ProxyFile::OperateRangeImpl(unsigned int, unsigned long, unsigned long, FsRangeInfo*)
0000000000002950 0000000000000008 W ProxyFile::SetSizeImpl(unsigned long)
0000000000002960 0000000000000038 W ProxyFile::WriteImpl(unsigned long, void*, unsigned long, bool)
00000000000029a0 0000000000000008 W ProxyFile::FlushImpl()
00000000000029b0 0000000000000008 W RomFileStorage::GetSize(unsigned long*)
00000000000029c0 0000000000000008 W ProxyFile::GetSizeImpl(unsigned long*)
00000000000029d0 000000000000008c W RomFileStorage::Read(void*, unsigned long, unsigned long)
0000000000002a60 0000000000000044 W ProxyFile::ReadImpl(unsigned long*, unsigned long, void*, unsigned long)
0000000000002ab0 0000000000000048 W ProxyFile::~ProxyFile()
0000000000002ab0 0000000000000048 W ProxyFile::~ProxyFile()
0000000000002b00 0000000000000038 W ProxyFileSystem::GetEntryTypeImpl(DirectoryEntryType*, FsPath const&)
0000000000002b40 0000000000000008 W ProxyFileSystem::RenameDirectoryImpl(FsPath const&, FsPath const&)
0000000000002b50 0000000000000008 W ProxyFileSystem::RenameFileImpl(FsPath const&, FsPath const&)
0000000000002b60 0000000000000008 W ProxyFileSystem::DeleteDirectoryRecursivelyImpl(FsPath const&)
0000000000002b70 0000000000000008 W ProxyFileSystem::DeleteDirectoryImpl(FsPath const&)
0000000000002b80 0000000000000008 W ProxyFileSystem::CreateDirectoryImpl(FsPath const&)
0000000000002b90 0000000000000008 W ProxyFileSystem::DeleteFileImpl(FsPath const&)
0000000000002ba0 0000000000000008 W ProxyFileSystem::CreateFileImpl(FsPath const&, unsigned long, int)
0000000000002bb0 0000000000000004 W std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002bc0 0000000000000004 W std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002bd0 0000000000000004 W std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002be0 0000000000000004 W std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002bf0 0000000000000004 W std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002c00 0000000000000004 W std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002c10 0000000000000004 W std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000002c20 000000000000004c W RomFileStorage::~RomFileStorage()
0000000000002c20 000000000000004c W RomFileStorage::~RomFileStorage()
0000000000002c70 0000000000000040 W ProxyStorage::~ProxyStorage()
0000000000002c70 0000000000000040 W ProxyStorage::~ProxyStorage()
0000000000002cb0 000000000000004c W ROProxyStorage::~ROProxyStorage()
0000000000002cb0 000000000000004c W ROProxyStorage::~ROProxyStorage()
0000000000002d00 0000000000000008 W ROProxyStorage::OperateRange(unsigned int, unsigned long, unsigned long, FsRangeInfo*)
0000000000002d10 0000000000000008 W ProxyStorage::OperateRange(unsigned int, unsigned long, unsigned long, FsRangeInfo*)
0000000000002d20 0000000000000008 W ROProxyStorage::GetSize(unsigned long*)
0000000000002d30 0000000000000008 W ProxyStorage::GetSize(unsigned long*)
0000000000002d40 0000000000000018 W ROProxyStorage::Read(void*, unsigned long, unsigned long)
0000000000002d60 0000000000000018 W ProxyStorage::Read(void*, unsigned long, unsigned long)
0000000000002d80 0000000000000008 W ProxyStorage::SetSize(unsigned long)
0000000000002d90 0000000000000008 W ProxyStorage::Flush()
0000000000002da0 0000000000000018 W ProxyStorage::Write(void*, unsigned long, unsigned long)
0000000000002dc0 0000000000000078 W IFileSystemInterface::QueryEntry(OutBuffer<char, (BufferType)1>, InBuffer<char, (BufferType)1>, int, InPointer<char>)
0000000000002e40 000000000000006c W IFileSystemInterface::GetFileTimeStampRaw(Out<FsTimeStampRaw, void>, InPointer<char>)
0000000000002eb0 0000000000000048 W IFileSystemInterface::CleanDirectoryRecursively(InPointer<char>)
0000000000002f00 000000000000006c W IFileSystemInterface::GetTotalSpaceSize(Out<unsigned long, void>, InPointer<char>)
0000000000002f70 000000000000006c W IFileSystemInterface::GetFreeSpaceSize(Out<unsigned long, void>, InPointer<char>)
0000000000002fe0 0000000000000068 W IFileSystemInterface::GetEntryType(Out<unsigned int, void>, InPointer<char>)
0000000000003050 0000000000000094 W IFileSystemInterface::RenameDirectory(InPointer<char>, InPointer<char>)
00000000000030f0 0000000000000094 W IFileSystemInterface::RenameFile(InPointer<char>, InPointer<char>)
0000000000003190 0000000000000048 W IFileSystemInterface::DeleteDirectoryRecursively(InPointer<char>)
00000000000031e0 0000000000000048 W IFileSystemInterface::DeleteDirectory(InPointer<char>)
0000000000003230 0000000000000048 W IFileSystemInterface::CreateDirectory(InPointer<char>)
0000000000003280 0000000000000048 W IFileSystemInterface::DeleteFile(InPointer<char>)
00000000000032d0 0000000000000064 W IFileSystemInterface::CreateFile(InPointer<char>, unsigned long, int)
0000000000003340 0000000000000054 W IFileInterface::OperateRange(Out<FsRangeInfo, void>, unsigned int, unsigned long, unsigned long)
00000000000033a0 0000000000000028 W IFileInterface::Flush()
00000000000033d0 0000000000000028 W IFileInterface::SetSize(unsigned long)
0000000000003400 0000000000000038 W IFileInterface::GetSize(Out<unsigned long, void>)
0000000000003440 0000000000000038 W IDirectoryInterface::GetEntryCount(Out<unsigned long, void>)
0000000000003480 00000000000000b8 W std::unordered_map<unsigned long, std::weak_ptr<IStorageInterface>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, std::weak_ptr<IStorageInterface> > > >::~unordered_map()
0000000000003480 00000000000000b8 W std::unordered_map<unsigned long, std::weak_ptr<IStorageInterface>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<unsigned long const, std::weak_ptr<IStorageInterface> > > >::~unordered_map()
0000000000003540 00000000000000ac W IFileInterface::Read(OutBuffer<unsigned char, (BufferType)1>, Out<unsigned long, void>, unsigned long, unsigned long, unsigned int)
00000000000035f0 000000000000009c W IFileInterface::Write(InBuffer<unsigned char, (BufferType)1>, unsigned long, unsigned long, unsigned int)
0000000000003690 0000000000000048 W ProxyFile::~ProxyFile()
00000000000036e0 0000000000000048 W ProxyDirectory::~ProxyDirectory()
0000000000003730 000000000000004c W ProxyStorage::~ProxyStorage()
0000000000003780 0000000000000098 W IDirectoryInterface::Read(OutBuffer<FsDirectoryEntry, (BufferType)0>, Out<unsigned long, void>)
0000000000003820 000000000000004c W std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000003870 0000000000000058 W RomFileStorage::~RomFileStorage()
00000000000038d0 0000000000000058 W ROProxyStorage::~ROProxyStorage()
0000000000003930 0000000000000048 W ProxyFileSystem::~ProxyFileSystem()
0000000000003980 0000000000000078 W std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000003a00 0000000000000078 W std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000003a80 000000000000006c W std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000003af0 000000000000008c W IDirectoryInterface::~IDirectoryInterface()
0000000000003af0 000000000000008c W IDirectoryInterface::~IDirectoryInterface()
0000000000003b80 000000000000008c W IFileInterface::~IFileInterface()
0000000000003b80 000000000000008c W IFileInterface::~IFileInterface()
0000000000003c10 000000000000009c W IDirectoryInterface::~IDirectoryInterface()
0000000000003cb0 000000000000009c W IFileInterface::~IFileInterface()
0000000000003d50 0000000000000114 W ProxyFileSystem::OpenFileImpl(std::unique_ptr<IFile, std::default_delete<IFile> >&, FsPath const&, OpenMode)
0000000000003e70 0000000000000114 W ProxyFileSystem::OpenDirectoryImpl(std::unique_ptr<IDirectory, std::default_delete<IDirectory> >&, FsPath const&, DirectoryOpenMode)
0000000000003f90 00000000000000a4 W SubDirectoryFileSystem::~SubDirectoryFileSystem()
0000000000004040 00000000000001c0 W IFileSystemInterface::OpenFile(Out<std::shared_ptr<IFileInterface>, void>, InPointer<char>, unsigned int)
0000000000004200 00000000000001c0 W IFileSystemInterface::OpenDirectory(Out<std::shared_ptr<IDirectoryInterface>, void>, InPointer<char>, unsigned int)
00000000000043c0 00000000000000a0 W SubDirectoryFileSystem::~SubDirectoryFileSystem()
00000000000043c0 00000000000000a0 W SubDirectoryFileSystem::~SubDirectoryFileSystem()
0000000000004460 000000000000003c T FsMitmService::PostProcess(IMitmServiceObject*, IpcResponseContext*)
00000000000044a0 000000000000024c T FsMitmService::OpenHblWebContentFileSystem(Out<std::shared_ptr<IFileSystemInterface>, void>&)
00000000000046f0 00000000000000c8 T FsMitmService::OpenFileSystemWithPatch(Out<std::shared_ptr<IFileSystemInterface>, void>, unsigned long, unsigned int)
00000000000047c0 00000000000000dc T FsMitmService::OpenFileSystemWithId(Out<std::shared_ptr<IFileSystemInterface>, void>, InPointer<char>, unsigned long, unsigned int)
00000000000048a0 000000000000032c T FsMitmService::OpenBisStorage(Out<std::shared_ptr<IStorageInterface>, void>, unsigned int)
0000000000004bd0 00000000000001b0 W std::_Hashtable<unsigned long, std::pair<unsigned long const, std::weak_ptr<IStorageInterface> >, std::allocator<std::pair<unsigned long const, std::weak_ptr<IStorageInterface> > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long const, std::weak_ptr<IStorageInterface> >, false>*, unsigned long)
0000000000004d80 00000000000000c4 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, std::weak_ptr<IStorageInterface> >, std::allocator<std::pair<unsigned long const, std::weak_ptr<IStorageInterface> > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0000000000004e50 0000000000000238 t StorageCacheGetEntry(unsigned long, std::shared_ptr<IStorageInterface>*)
0000000000005090 0000000000000294 t StorageCacheSetEntry(unsigned long, std::shared_ptr<IStorageInterface>*)
0000000000005330 00000000000006a4 T FsMitmService::OpenDataStorageByCurrentProcess(Out<std::shared_ptr<IStorageInterface>, void>)
00000000000059e0 00000000000006a4 T FsMitmService::OpenDataStorageByDataId(Out<std::shared_ptr<IStorageInterface>, void>, unsigned long, unsigned char)
0000000000006090 0000000000000254 t ipcPrepareHeader
00000000000062f0 0000000000000234 t ipcParse
0000000000006530 0000000000000024 W IDomainObject::~IDomainObject()
0000000000006530 0000000000000024 W IDomainObject::~IDomainObject()
0000000000006560 0000000000000008 W ServiceSession::GetHandle()
0000000000006570 0000000000000004 W ServiceSession::PreProcessRequest(IpcResponseContext*)
0000000000006580 0000000000000004 W ServiceSession::PostProcessResponse(IpcResponseContext*)
0000000000006590 0000000000000004 W ServiceSession::IHipcControlService::~IHipcControlService()
0000000000006590 0000000000000004 W ServiceSession::IHipcControlService::~IHipcControlService()
00000000000065a0 0000000000000008 W IMitmServiceObject::GetTitleId()
00000000000065b0 0000000000000008 W IMitmServiceObject::GetProcessId()
00000000000065c0 0000000000000020 W MitmSession::PreProcessRequest(IpcResponseContext*)
00000000000065e0 0000000000000004 W MitmSession::IMitmHipcControlService::~IMitmHipcControlService()
00000000000065e0 0000000000000004 W MitmSession::IMitmHipcControlService::~IMitmHipcControlService()
00000000000065f0 0000000000000004 W MitmQueryService<FsMitmService>::~MitmQueryService()
00000000000065f0 0000000000000004 W MitmQueryService<FsMitmService>::~MitmQueryService()
0000000000006600 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006600 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006610 0000000000000010 W std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000006620 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000006640 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006640 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006650 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000006670 0000000000000004 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006670 0000000000000004 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006680 0000000000000018 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
00000000000066a0 0000000000000008 W MitmServer<FsMitmService>::GetHandle()
00000000000066b0 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000066b0 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000066c0 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000066d0 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
00000000000066f0 0000000000000004 W std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000066f0 0000000000000004 W std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006700 0000000000000018 W std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000006720 0000000000000004 W std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006720 0000000000000004 W std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006730 0000000000000010 W std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000006740 0000000000000018 W std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000006760 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000006760 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000006770 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000006780 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000006790 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000067a0 0000000000000004 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000067b0 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000067c0 0000000000000004 W std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000067d0 0000000000000004 W std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000067e0 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000067f0 0000000000000094 W WaitableManager<FsMitmManagerOptions>::GetObject(IDomainObject*, unsigned int)
0000000000006890 0000000000000094 W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::GetObject(IDomainObject*, unsigned int)
0000000000006930 00000000000000a8 W WaitableManager<FsMitmManagerOptions>::ReserveObject(IDomainObject*, unsigned int*)
00000000000069e0 00000000000000a8 W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::ReserveObject(IDomainObject*, unsigned int*)
0000000000006a90 00000000000000b8 W WaitableManager<FsMitmManagerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
0000000000006b50 00000000000000b8 W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
0000000000006c10 00000000000000d4 W WaitableManager<FsMitmManagerOptions>::AllocateDomain()
0000000000006cf0 00000000000000d8 W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::AllocateDomain()
0000000000006dd0 000000000000004c W ServiceSession::HandleDeferred()
0000000000006e20 0000000000000008 W MitmQueryService<FsMitmService>::~MitmQueryService()
0000000000006e30 0000000000000008 W MitmSession::IMitmHipcControlService::~IMitmHipcControlService()
0000000000006e40 0000000000000008 W ServiceSession::IHipcControlService::~IHipcControlService()
0000000000006e50 0000000000000044 W IDomainObject::~IDomainObject()
0000000000006ea0 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000006eb0 0000000000000008 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006ec0 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006ed0 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006ee0 0000000000000008 W std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006ef0 0000000000000008 W std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006f00 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000006f10 0000000000000054 t ipcCloseObjectById
0000000000006f70 000000000000007c W std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000006ff0 0000000000000078 t ipcConvertSessionToDomain
0000000000007070 00000000000000b0 W MitmSession::CleanupResponse(IpcResponseContext*)
0000000000007120 0000000000000010 W ServiceSession::CleanupResponse(IpcResponseContext*)
0000000000007130 000000000000029c W ServiceSession::HandleReceived()
00000000000073d0 0000000000000040 W WaitableManager<FsMitmManagerOptions>::CancelSynchronization()
0000000000007410 0000000000000038 t ipcQueryPointerBufferSize.part.56
0000000000007450 0000000000000050 W IWaitable::Compare(IWaitable*, IWaitable*)
00000000000074a0 0000000000000048 W MitmServer<FsMitmService>::~MitmServer()
00000000000074a0 0000000000000048 W MitmServer<FsMitmService>::~MitmServer()
00000000000074f0 0000000000000028 W MitmServer<FsMitmService>::~MitmServer()
0000000000007520 0000000000000174 W ServiceSession::GetResponse(IpcResponseContext*)
00000000000076a0 00000000000000b4 W MitmSession::PostProcessResponse(IpcResponseContext*)
0000000000007760 0000000000000114 t MitmSession::ForwardRequest(IpcResponseContext*) [clone .part.122]
0000000000007880 000000000000007c t ipcPrepareHeaderForDomain.constprop.844
0000000000007900 0000000000000084 t ipcCloneSession.constprop.845
0000000000007990 0000000000000024 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000079c0 0000000000000024 W std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000079f0 0000000000000044 W std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000007a40 000000000000006c W WaitableManager<FsMitmManagerOptions>::RequestStop()
0000000000007ab0 00000000000000c0 W WaitableManager<FsMitmManagerOptions>::NotifySignaled(IWaitable*)
0000000000007b70 00000000000001a4 W WaitableManager<FsMitmManagerOptions>::~WaitableManager()
0000000000007b70 00000000000001a4 W WaitableManager<FsMitmManagerOptions>::~WaitableManager()
0000000000007d20 00000000000001c8 W MitmSession::GetResponse(IpcResponseContext*)
0000000000007ef0 0000000000000158 W WaitableManager<FsMitmManagerOptions>::FreeDomain(IDomainObject*)
0000000000008050 000000000000015c W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::FreeDomain(IDomainObject*)
00000000000081b0 00000000000001bc W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
0000000000008370 0000000000000108 W WaitableManager<FsMitmManagerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
0000000000008480 0000000000000144 W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::ForceFreeObject(unsigned int)
00000000000085d0 0000000000000144 W WaitableManager<FsMitmManagerOptions>::ForceFreeObject(unsigned int)
0000000000008720 0000000000000120 W non-virtual thunk to WaitableManager<FsMitmManagerOptions>::FreeObject(IDomainObject*, unsigned int)
0000000000008840 0000000000000120 W WaitableManager<FsMitmManagerOptions>::FreeObject(IDomainObject*, unsigned int)
0000000000008960 0000000000000178 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::QueryPointerBufferSize>(IpcResponseContext*)
0000000000008ae0 0000000000000178 W unsigned int WrapIpcCommandImpl<&MitmSession::IMitmHipcControlService::QueryPointerBufferSize>(IpcResponseContext*)
0000000000008c60 000000000000015c W unsigned int WrapIpcCommandImpl<&MitmQueryService<FsMitmService>::AssociatePidToTid>(IpcResponseContext*)
0000000000008dc0 0000000000000218 W unsigned int WrapIpcCommandImpl<&MitmQueryService<FsMitmService>::ShouldMitm>(IpcResponseContext*)
0000000000008fe0 00000000000001f4 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::GetFileTimeStampRaw>(IpcResponseContext*)
00000000000091e0 00000000000001f0 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::GetEntryType>(IpcResponseContext*)
00000000000093d0 00000000000001dc W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::CreateFile>(IpcResponseContext*)
00000000000095b0 00000000000001e0 W MitmSession::~MitmSession()
0000000000009790 000000000000010c W ServiceSession::~ServiceSession()
00000000000098a0 0000000000000268 W unsigned int WrapIpcCommandImpl<&IDirectoryInterface::Read>(IpcResponseContext*)
0000000000009b10 0000000000000234 W unsigned int WrapIpcCommandImpl<&IStorageInterface::Write>(IpcResponseContext*)
0000000000009d50 0000000000000238 W unsigned int WrapIpcCommandImpl<&IStorageInterface::Read>(IpcResponseContext*)
0000000000009f90 0000000000000238 W unsigned int WrapIpcCommandImpl<&IFileInterface::Write>(IpcResponseContext*)
000000000000a1d0 000000000000008c W IMitmServiceObject::~IMitmServiceObject()
000000000000a1d0 000000000000008c W IMitmServiceObject::~IMitmServiceObject()
000000000000a260 000000000000008c W FsMitmService::~FsMitmService()
000000000000a260 000000000000008c W FsMitmService::~FsMitmService()
000000000000a2f0 0000000000000268 W unsigned int WrapIpcCommandImpl<&IFileInterface::Read>(IpcResponseContext*)
000000000000a560 00000000000002a0 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::QueryEntry>(IpcResponseContext*)
000000000000a800 0000000000000094 W FsMitmService::~FsMitmService()
000000000000a8a0 0000000000000094 W IMitmServiceObject::~IMitmServiceObject()
000000000000a940 00000000000001e0 W MitmSession::~MitmSession()
000000000000a940 00000000000001e0 W MitmSession::~MitmSession()
000000000000ab20 00000000000001ac W WaitableManager<FsMitmManagerOptions>::~WaitableManager()
000000000000acd0 00000000000001c4 W unsigned int WrapIpcCommandImpl<&IFileInterface::SetSize>(IpcResponseContext*)
000000000000aea0 00000000000001c4 W unsigned int WrapIpcCommandImpl<&IStorageInterface::SetSize>(IpcResponseContext*)
000000000000b070 00000000000001f0 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::GetTotalSpaceSize>(IpcResponseContext*)
000000000000b260 00000000000001f0 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::GetFreeSpaceSize>(IpcResponseContext*)
000000000000b450 0000000000000210 W unsigned int WrapIpcCommandImpl<&IStorageInterface::OperateRange>(IpcResponseContext*)
000000000000b660 00000000000001cc W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::RenameDirectory>(IpcResponseContext*)
000000000000b830 0000000000000210 W unsigned int WrapIpcCommandImpl<&IFileInterface::OperateRange>(IpcResponseContext*)
000000000000ba40 00000000000001cc W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::RenameFile>(IpcResponseContext*)
000000000000bc10 000000000000010c W ServiceSession::~ServiceSession()
000000000000bc10 000000000000010c W ServiceSession::~ServiceSession()
000000000000bd20 00000000000000c4 W ServiceSession::Receive()
000000000000bdf0 000000000000003c W ServiceSession::HandleSignaled(unsigned long)
000000000000be30 0000000000000158 W FsMitmService::FsMitmService(std::shared_ptr<Service>, unsigned long)
000000000000be30 0000000000000158 W FsMitmService::FsMitmService(std::shared_ptr<Service>, unsigned long)
000000000000bf90 0000000000000078 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
000000000000c010 00000000000001fc W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::CloneCurrentObjectEx>(IpcResponseContext*)
000000000000c210 000000000000029c W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::CopyFromCurrentDomain>(IpcResponseContext*)
000000000000c4b0 00000000000004ac W unsigned int WrapIpcCommandImpl<&FsMitmService::OpenFileSystemWithId>(IpcResponseContext*)
000000000000c960 00000000000004b4 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::OpenDirectory>(IpcResponseContext*)
000000000000ce20 00000000000004b4 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::OpenFile>(IpcResponseContext*)
000000000000d2e0 0000000000000330 W unsigned int WrapIpcCommandImpl<&MitmSession::IMitmHipcControlService::ConvertCurrentObjectToDomain>(IpcResponseContext*)
000000000000d610 0000000000000200 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::CloneCurrentObject>(IpcResponseContext*)
000000000000d810 00000000000002c8 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::ConvertCurrentObjectToDomain>(IpcResponseContext*)
000000000000dae0 0000000000000484 W unsigned int WrapIpcCommandImpl<&FsMitmService::OpenFileSystemWithPatch>(IpcResponseContext*)
000000000000df70 0000000000000128 W std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_append(unsigned long)
000000000000e0a0 00000000000004b0 W MitmSession::MitmSession(unsigned int, unsigned long, std::shared_ptr<Service>, ServiceObjectHolder&&, std::shared_ptr<MitmSession::PostProcessHandlerContext>)
000000000000e0a0 00000000000004b0 W MitmSession::MitmSession(unsigned int, unsigned long, std::shared_ptr<Service>, ServiceObjectHolder&&, std::shared_ptr<MitmSession::PostProcessHandlerContext>)
000000000000e550 0000000000000104 W Encoder<CommandMetaInfo<std::tuple<>, unsigned int>, std::tuple<> >::EncodeFailure(IpcResponseContext*, unsigned int)
000000000000e660 0000000000000164 W unsigned int WrapIpcCommandImpl<&IStorageInterface::Flush>(IpcResponseContext*)
000000000000e7d0 0000000000000164 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::Commit>(IpcResponseContext*)
000000000000e940 0000000000000164 W unsigned int WrapIpcCommandImpl<&IFileInterface::Flush>(IpcResponseContext*)
000000000000eab0 0000000000000104 W Encoder<CommandMetaInfo<std::tuple<Out<unsigned long, void> >, unsigned int>, std::tuple<Out<unsigned long, void> > >::EncodeFailure(IpcResponseContext*, unsigned int)
000000000000ebc0 00000000000001a0 W unsigned int WrapIpcCommandImpl<&IStorageInterface::GetSize>(IpcResponseContext*)
000000000000ed60 00000000000001a0 W unsigned int WrapIpcCommandImpl<&IDirectoryInterface::GetEntryCount>(IpcResponseContext*)
000000000000ef00 00000000000001a0 W unsigned int WrapIpcCommandImpl<&IFileInterface::GetSize>(IpcResponseContext*)
000000000000f0a0 0000000000000104 W Encoder<CommandMetaInfo<std::tuple<InPointer<char> >, unsigned int>, std::tuple<InPointer<char> > >::EncodeFailure(IpcResponseContext*, unsigned int)
000000000000f1b0 0000000000000178 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::CleanDirectoryRecursively>(IpcResponseContext*)
000000000000f330 0000000000000178 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::DeleteDirectoryRecursively>(IpcResponseContext*)
000000000000f4b0 0000000000000178 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::DeleteDirectory>(IpcResponseContext*)
000000000000f630 0000000000000178 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::CreateDirectory>(IpcResponseContext*)
000000000000f7b0 0000000000000178 W unsigned int WrapIpcCommandImpl<&IFileSystemInterface::DeleteFile>(IpcResponseContext*)
000000000000f930 0000000000000120 W void std::vector<IWaitable*, std::allocator<IWaitable*> >::_M_realloc_insert<IWaitable* const&>(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, IWaitable* const&)
000000000000fa50 00000000000000e4 W WaitableManager<FsMitmManagerOptions>::AddWaitable(IWaitable*)
000000000000fb40 00000000000001c8 W WaitableManager<FsMitmManagerOptions>::AddSession(unsigned int, ServiceObjectHolder&&)
000000000000fd10 0000000000000698 W MitmSession::IMitmHipcControlService::CloneCurrentObject(Out<MovedHandle, void>)
00000000000103b0 0000000000000178 W unsigned int WrapIpcCommandImpl<&MitmSession::IMitmHipcControlService::CloneCurrentObjectEx>(IpcResponseContext*)
0000000000010530 0000000000000174 W unsigned int WrapIpcCommandImpl<&MitmSession::IMitmHipcControlService::CloneCurrentObject>(IpcResponseContext*)
00000000000106b0 0000000000000484 W MitmServer<FsMitmService>::HandleSignaled(unsigned long)
0000000000010b40 000000000000030c t void EncodeArgument<CommandMetaInfo<std::tuple<Out<std::shared_ptr<IStorageInterface>, void>, unsigned int>, unsigned int>, Out<std::shared_ptr<IStorageInterface>, void> >(IpcResponseContext*, unsigned long&, Out<std::shared_ptr<IStorageInterface>, void>&) [clone .constprop.838]
0000000000010e50 00000000000003cc W unsigned int WrapIpcCommandImpl<&FsMitmService::OpenBisStorage>(IpcResponseContext*)
0000000000011220 00000000000003d4 W unsigned int WrapIpcCommandImpl<&FsMitmService::OpenDataStorageByDataId>(IpcResponseContext*)
0000000000011600 00000000000003bc W unsigned int WrapIpcCommandImpl<&FsMitmService::OpenDataStorageByCurrentProcess>(IpcResponseContext*)
00000000000119c0 0000000000000348 W MitmSession::IMitmHipcControlService::CopyFromCurrentDomain(Out<MovedHandle, void>, unsigned int)
0000000000011d10 00000000000001cc W unsigned int WrapIpcCommandImpl<&MitmSession::IMitmHipcControlService::CopyFromCurrentDomain>(IpcResponseContext*)
0000000000011ee0 0000000000000124 W std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long)
0000000000012010 0000000000000124 W std::vector<IWaitable*, std::allocator<IWaitable*> >::_M_default_append(unsigned long)
0000000000012140 000000000000016c W __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > > std::__remove_if<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_pred<WaitableManager<FsMitmManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}> >(__gnu_cxx::__ops::_Iter_pred<WaitableManager<FsMitmManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<FsMitmManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<FsMitmManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>)
00000000000122b0 0000000000000270 W void std::vector<IWaitable*, std::allocator<IWaitable*> >::_M_range_insert<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > > >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, std::forward_iterator_tag)
0000000000012520 00000000000000d0 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)> >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)>)
00000000000125f0 0000000000000184 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, IWaitable*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)> >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, long, IWaitable*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)>)
0000000000012780 0000000000000214 W void std::__introsort_loop<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)> >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)>)
00000000000129a0 00000000000006f0 W WaitableManager<FsMitmManagerOptions>::GetWaitable()
0000000000013090 0000000000000468 W WaitableManager<FsMitmManagerOptions>::ProcessLoop(void*)
0000000000013500 00000000000000c8 W WaitableManager<FsMitmManagerOptions>::Process()
00000000000135d0 00000000000005d4 T FsMitmMain(void*)
0000000000013bb0 00000000000000c4 T FsPathUtils::VerifyPath(char const*, unsigned long, unsigned long)
0000000000013c80 00000000000000c8 T FsPathUtils::ConvertPathForServiceObject(FsPath*, char const*)
0000000000013d50 00000000000000d8 T FsPathUtils::IsNormalized(bool*, char const*)
0000000000013e30 0000000000000268 T FsPathUtils::Normalize(char*, unsigned long, char const*, unsigned long*)
00000000000140a0 0000000000000050 W std::_Rb_tree<char*, std::pair<char* const, RomFSBuildDirectoryContext*>, std::_Select1st<std::pair<char* const, RomFSBuildDirectoryContext*> >, build_ctx_cmp, std::allocator<std::pair<char* const, RomFSBuildDirectoryContext*> > >::_M_erase(std::_Rb_tree_node<std::pair<char* const, RomFSBuildDirectoryContext*> >*)
00000000000140f0 0000000000000050 W std::_Rb_tree<char*, std::pair<char* const, RomFSBuildFileContext*>, std::_Select1st<std::pair<char* const, RomFSBuildFileContext*> >, build_ctx_cmp, std::allocator<std::pair<char* const, RomFSBuildFileContext*> > >::_M_erase(std::_Rb_tree_node<std::pair<char* const, RomFSBuildFileContext*> >*)
0000000000014140 0000000000000dd0 T RomFSBuildContext::Build(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)
0000000000014f10 0000000000000174 W std::pair<std::_Rb_tree_iterator<std::pair<char* const, RomFSBuildDirectoryContext*> >, bool> std::_Rb_tree<char*, std::pair<char* const, RomFSBuildDirectoryContext*>, std::_Select1st<std::pair<char* const, RomFSBuildDirectoryContext*> >, build_ctx_cmp, std::allocator<std::pair<char* const, RomFSBuildDirectoryContext*> > >::_M_insert_unique<std::pair<char* const, RomFSBuildDirectoryContext*> >(std::pair<char* const, RomFSBuildDirectoryContext*>&&)
0000000000015090 0000000000000114 T RomFSBuildContext::AddDirectory(RomFSBuildDirectoryContext*, RomFSBuildDirectoryContext*, RomFSBuildDirectoryContext**)
00000000000151b0 0000000000000120 W void std::vector<RomFSBuildDirectoryContext*, std::allocator<RomFSBuildDirectoryContext*> >::_M_realloc_insert<RomFSBuildDirectoryContext* const&>(__gnu_cxx::__normal_iterator<RomFSBuildDirectoryContext**, std::vector<RomFSBuildDirectoryContext*, std::allocator<RomFSBuildDirectoryContext*> > >, RomFSBuildDirectoryContext* const&)
00000000000152d0 0000000000000174 W std::pair<std::_Rb_tree_iterator<std::pair<char* const, RomFSBuildFileContext*> >, bool> std::_Rb_tree<char*, std::pair<char* const, RomFSBuildFileContext*>, std::_Select1st<std::pair<char* const, RomFSBuildFileContext*> >, build_ctx_cmp, std::allocator<std::pair<char* const, RomFSBuildFileContext*> > >::_M_insert_unique<std::pair<char* const, RomFSBuildFileContext*> >(std::pair<char* const, RomFSBuildFileContext*>&&)
0000000000015450 00000000000000f4 T RomFSBuildContext::AddFile(RomFSBuildDirectoryContext*, RomFSBuildFileContext*)
0000000000015550 0000000000000274 T RomFSBuildContext::VisitDirectory(RomFSBuildDirectoryContext*, unsigned int, void*, unsigned long, void*, unsigned long)
00000000000157d0 0000000000000134 T RomFSBuildContext::MergeRomStorage(IROStorage*, RomFSDataSource)
0000000000015910 00000000000002f8 T RomFSBuildContext::VisitDirectory(FsFileSystem*, RomFSBuildDirectoryContext*)
0000000000015c10 0000000000000088 T RomFSBuildContext::MergeSdFiles()
0000000000015ca0 0000000000000030 T LayeredRomFS::GetSize(unsigned long*)
0000000000015cd0 0000000000000004 t std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000015cd0 0000000000000004 t std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000015ce0 0000000000000008 t std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000015cf0 0000000000000008 t std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000015d00 0000000000000004 t std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000015d10 0000000000000020 T LayeredRomFS::OperateRange(unsigned int, unsigned long, unsigned long, FsRangeInfo*)
0000000000015d30 00000000000000bc t std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000015df0 000000000000015c W LayeredRomFS::~LayeredRomFS()
0000000000015f50 0000000000000158 W LayeredRomFS::~LayeredRomFS()
0000000000015f50 0000000000000158 W LayeredRomFS::~LayeredRomFS()
00000000000160b0 0000000000000518 T LayeredRomFS::Read(void*, unsigned long, unsigned long)
00000000000165d0 0000000000000004 T IStorage::~IStorage()
00000000000165d0 0000000000000004 T IStorage::~IStorage()
00000000000165e0 000000000000021c T LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)
00000000000165e0 000000000000021c T LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)
0000000000016800 0000000000000010 T SubDirectoryFileSystem::CommitImpl()
0000000000016810 0000000000000124 T SubDirectoryFileSystem::Initialize(char const*)
0000000000016940 00000000000000a4 T SubDirectoryFileSystem::GetFullPath(char*, unsigned long, char const*)
00000000000169f0 0000000000000068 T SubDirectoryFileSystem::CreateFileImpl(FsPath const&, unsigned long, int)
0000000000016a60 0000000000000050 T SubDirectoryFileSystem::DeleteFileImpl(FsPath const&)
0000000000016ab0 0000000000000050 T SubDirectoryFileSystem::CreateDirectoryImpl(FsPath const&)
0000000000016b00 0000000000000050 T SubDirectoryFileSystem::DeleteDirectoryImpl(FsPath const&)
0000000000016b50 0000000000000050 T SubDirectoryFileSystem::DeleteDirectoryRecursivelyImpl(FsPath const&)
0000000000016ba0 0000000000000090 T SubDirectoryFileSystem::RenameFileImpl(FsPath const&, FsPath const&)
0000000000016c30 0000000000000090 T SubDirectoryFileSystem::RenameDirectoryImpl(FsPath const&, FsPath const&)
0000000000016cc0 0000000000000070 T SubDirectoryFileSystem::GetEntryTypeImpl(DirectoryEntryType*, FsPath const&)
0000000000016d30 0000000000000094 T SubDirectoryFileSystem::OpenFileImpl(std::unique_ptr<IFile, std::default_delete<IFile> >&, FsPath const&, OpenMode)
0000000000016dd0 0000000000000094 T SubDirectoryFileSystem::OpenDirectoryImpl(std::unique_ptr<IDirectory, std::default_delete<IDirectory> >&, FsPath const&, DirectoryOpenMode)
0000000000016e70 0000000000000070 T SubDirectoryFileSystem::GetFreeSpaceSizeImpl(unsigned long*, FsPath const&)
0000000000016ee0 0000000000000070 T SubDirectoryFileSystem::GetTotalSpaceSizeImpl(unsigned long*, FsPath const&)
0000000000016f50 0000000000000050 T SubDirectoryFileSystem::CleanDirectoryRecursivelyImpl(FsPath const&)
0000000000016fa0 0000000000000070 T SubDirectoryFileSystem::GetFileTimeStampRawImpl(FsTimeStampRaw*, FsPath const&)
0000000000017010 0000000000000088 T SubDirectoryFileSystem::QueryEntryImpl(char*, unsigned long, char const*, unsigned long, int, FsPath const&)
00000000000170a0 0000000000000040 W Boot0Storage::~Boot0Storage()
00000000000170a0 0000000000000040 W Boot0Storage::~Boot0Storage()
00000000000170e0 000000000000004c W Boot0Storage::~Boot0Storage()
0000000000017130 00000000000001c8 T Boot0Storage::Read(void*, unsigned long, unsigned long)
0000000000017300 00000000000004fc T Boot0Storage::Write(void*, unsigned long, unsigned long)
0000000000017800 0000000000000074 t IsCorrectFormat(char const*, unsigned long)
0000000000017880 0000000000000028 t FatalThreadFunc(void*)
00000000000178b0 0000000000000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [clone .isra.55]
0000000000017920 000000000000008c T SettingsItemManager::ValidateName(char const*, unsigned long)
00000000000179b0 0000000000000008 T SettingsItemManager::ValidateName(char const*)
00000000000179c0 000000000000008c T SettingsItemManager::ValidateKey(char const*, unsigned long)
0000000000017a50 0000000000000008 T SettingsItemManager::ValidateKey(char const*)
0000000000017a60 0000000000000114 T SettingsItemManager::LoadConfiguration()
0000000000017b80 0000000000000068 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> >*)
0000000000017bf0 0000000000000008 W std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, SettingsItemValue, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> > >::~map()
0000000000017bf0 0000000000000008 W std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, SettingsItemValue, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> > >::~map()
0000000000017c00 0000000000000140 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000017d40 00000000000000d4 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
0000000000017e20 0000000000000130 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
0000000000017f50 00000000000000c0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
0000000000018010 0000000000000298 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
00000000000182b0 0000000000000248 T SettingsItemManager::GetValueSize(char const*, char const*, unsigned long*)
0000000000018500 0000000000000270 T SettingsItemManager::GetValue(char const*, char const*, void*, unsigned long, unsigned long*)
0000000000018770 000000000000018c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000018900 000000000000028c W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, SettingsItemValue> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000018b90 0000000000000858 t SettingsItemIniHandler(void*, char const*, char const*, char const*)
00000000000193f0 0000000000000004 T SetSysMitmService::PostProcess(IMitmServiceObject*, IpcResponseContext*)
0000000000019400 000000000000002c T SetSysMitmService::GetFirmwareVersion(OutPointerWithServerSize<SetSysFirmwareVersion, 1ul>)
0000000000019430 0000000000000008 T SetSysMitmService::GetFirmwareVersion2(OutPointerWithServerSize<SetSysFirmwareVersion, 1ul>)
0000000000019440 000000000000011c T SetSysMitmService::GetSettingsItemValueSize(Out<unsigned long, void>, InPointer<char>, InPointer<char>)
0000000000019560 0000000000000164 T SetSysMitmService::GetSettingsItemValue(Out<unsigned long, void>, OutBuffer<unsigned char, (BufferType)0>, InPointer<char>, InPointer<char>)
00000000000196d0 0000000000000008 T SetSysMitmService::GetEdid(OutPointerWithServerSize<SetSysEdid, 1ul>)
00000000000196e0 0000000000000254 t ipcPrepareHeader
0000000000019940 0000000000000234 t ipcParse
0000000000019b80 0000000000000004 W MitmQueryService<SetSysMitmService>::~MitmQueryService()
0000000000019b80 0000000000000004 W MitmQueryService<SetSysMitmService>::~MitmQueryService()
0000000000019b90 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000019b90 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000019ba0 0000000000000010 W std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000019bb0 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000019bd0 0000000000000008 W MitmServer<SetSysMitmService>::GetHandle()
0000000000019be0 0000000000000004 W std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000019be0 0000000000000004 W std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000019bf0 0000000000000010 W std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000019c00 0000000000000018 W std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000019c20 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000019c20 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000019c30 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000019c40 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000019c50 0000000000000004 W std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000019c60 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000019c70 0000000000000094 W WaitableManager<SetSysManagerOptions>::GetObject(IDomainObject*, unsigned int)
0000000000019d10 0000000000000094 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::GetObject(IDomainObject*, unsigned int)
0000000000019db0 00000000000000a8 W WaitableManager<SetSysManagerOptions>::ReserveObject(IDomainObject*, unsigned int*)
0000000000019e60 00000000000000a8 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::ReserveObject(IDomainObject*, unsigned int*)
0000000000019f10 00000000000000b8 W WaitableManager<SetSysManagerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
0000000000019fd0 00000000000000b8 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
000000000001a090 00000000000000c8 W WaitableManager<SetSysManagerOptions>::AllocateDomain()
000000000001a160 00000000000000c4 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::AllocateDomain()
000000000001a230 0000000000000008 W MitmQueryService<SetSysMitmService>::~MitmQueryService()
000000000001a240 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
000000000001a250 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001a260 0000000000000008 W std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001a270 000000000000003c W WaitableManager<SetSysManagerOptions>::CancelSynchronization()
000000000001a2b0 0000000000000048 W MitmServer<SetSysMitmService>::~MitmServer()
000000000001a2b0 0000000000000048 W MitmServer<SetSysMitmService>::~MitmServer()
000000000001a300 0000000000000028 W MitmServer<SetSysMitmService>::~MitmServer()
000000000001a330 0000000000000068 W WaitableManager<SetSysManagerOptions>::RequestStop()
000000000001a3a0 00000000000000b8 W WaitableManager<SetSysManagerOptions>::NotifySignaled(IWaitable*)
000000000001a460 0000000000000198 W WaitableManager<SetSysManagerOptions>::~WaitableManager()
000000000001a460 0000000000000198 W WaitableManager<SetSysManagerOptions>::~WaitableManager()
000000000001a600 0000000000000170 W WaitableManager<SetSysManagerOptions>::FreeDomain(IDomainObject*)
000000000001a770 0000000000000174 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::FreeDomain(IDomainObject*)
000000000001a8f0 0000000000000144 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::ForceFreeObject(unsigned int)
000000000001aa40 0000000000000144 W WaitableManager<SetSysManagerOptions>::ForceFreeObject(unsigned int)
000000000001ab90 0000000000000120 W non-virtual thunk to WaitableManager<SetSysManagerOptions>::FreeObject(IDomainObject*, unsigned int)
000000000001acb0 0000000000000120 W WaitableManager<SetSysManagerOptions>::FreeObject(IDomainObject*, unsigned int)
000000000001add0 00000000000001bc W non-virtual thunk to WaitableManager<SetSysManagerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
000000000001af90 00000000000001bc W WaitableManager<SetSysManagerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
000000000001b150 000000000000008c W SetSysMitmService::~SetSysMitmService()
000000000001b150 000000000000008c W SetSysMitmService::~SetSysMitmService()
000000000001b1e0 0000000000000094 W SetSysMitmService::~SetSysMitmService()
000000000001b280 000000000000019c W WaitableManager<SetSysManagerOptions>::~WaitableManager()
000000000001b420 0000000000000034 t ipcCloseObjectById
000000000001b460 000000000000007c W std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
000000000001b4e0 00000000000002b0 t ipcPrepareHeaderForDomain.constprop.442
000000000001b790 000000000000015c W unsigned int WrapIpcCommandImpl<&MitmQueryService<SetSysMitmService>::AssociatePidToTid>(IpcResponseContext*)
000000000001b8f0 00000000000001ec W unsigned int WrapIpcCommandImpl<&SetSysMitmService::GetEdid>(IpcResponseContext*)
000000000001bae0 0000000000000184 W unsigned int WrapIpcCommandImpl<&MitmQueryService<SetSysMitmService>::ShouldMitm>(IpcResponseContext*)
000000000001bc70 00000000000001e0 W unsigned int WrapIpcCommandImpl<&SetSysMitmService::GetSettingsItemValueSize>(IpcResponseContext*)
000000000001be50 0000000000000260 W unsigned int WrapIpcCommandImpl<&SetSysMitmService::GetSettingsItemValue>(IpcResponseContext*)
000000000001c0b0 00000000000001ec W unsigned int WrapIpcCommandImpl<&SetSysMitmService::GetFirmwareVersion2>(IpcResponseContext*)
000000000001c2a0 00000000000001ec W unsigned int WrapIpcCommandImpl<&SetSysMitmService::GetFirmwareVersion>(IpcResponseContext*)
000000000001c490 00000000000000dc W WaitableManager<SetSysManagerOptions>::AddWaitable(IWaitable*)
000000000001c570 00000000000001c4 W WaitableManager<SetSysManagerOptions>::AddSession(unsigned int, ServiceObjectHolder&&)
000000000001c740 00000000000007c4 W MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)
000000000001cf10 000000000000016c W __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > > std::__remove_if<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_pred<WaitableManager<SetSysManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}> >(__gnu_cxx::__ops::_Iter_pred<WaitableManager<SetSysManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<SetSysManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<SetSysManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>)
000000000001d080 00000000000006fc W WaitableManager<SetSysManagerOptions>::GetWaitable()
000000000001d780 000000000000046c W WaitableManager<SetSysManagerOptions>::ProcessLoop(void*)
000000000001dbf0 00000000000004e4 W WaitableManager<SetSysManagerOptions>::Process()
000000000001e0e0 00000000000009ec T SetMitmMain(void*)
000000000001ead0 0000000000000128 t VersionManager::Initialize() [clone .part.3]
000000000001ec00 0000000000000064 T VersionManager::Initialize()
000000000001ec70 0000000000000074 T VersionManager::GetFirmwareVersion(unsigned long, SetSysFirmwareVersion*)
000000000001ecf0 0000000000000254 t ipcPrepareHeader
000000000001ef50 0000000000000004 W MitmQueryService<BpcMitmService>::~MitmQueryService()
000000000001ef50 0000000000000004 W MitmQueryService<BpcMitmService>::~MitmQueryService()
000000000001ef60 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001ef60 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001ef70 0000000000000010 W std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
000000000001ef80 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
000000000001efa0 0000000000000008 W MitmServer<BpcMitmService>::GetHandle()
000000000001efb0 0000000000000004 W std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001efb0 0000000000000004 W std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001efc0 0000000000000010 W std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
000000000001efd0 0000000000000018 W std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
000000000001eff0 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
000000000001eff0 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
000000000001f000 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
000000000001f010 00000000000000f8 W WaitableManager<DefaultManagerOptions>::~WaitableManager()
000000000001f010 00000000000000f8 W WaitableManager<DefaultManagerOptions>::~WaitableManager()
000000000001f110 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
000000000001f120 0000000000000004 W std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
000000000001f130 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
000000000001f140 0000000000000028 W WaitableManager<DefaultManagerOptions>::FreeDomain(IDomainObject*)
000000000001f170 0000000000000028 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::FreeDomain(IDomainObject*)
000000000001f1a0 0000000000000034 W WaitableManager<DefaultManagerOptions>::ReserveObject(IDomainObject*, unsigned int*)
000000000001f1e0 0000000000000034 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::ReserveObject(IDomainObject*, unsigned int*)
000000000001f220 0000000000000038 W WaitableManager<DefaultManagerOptions>::AllocateDomain()
000000000001f260 0000000000000034 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::AllocateDomain()
000000000001f2a0 0000000000000044 W WaitableManager<DefaultManagerOptions>::GetObject(IDomainObject*, unsigned int)
000000000001f2f0 0000000000000044 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::GetObject(IDomainObject*, unsigned int)
000000000001f340 0000000000000048 W WaitableManager<DefaultManagerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
000000000001f390 0000000000000048 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
000000000001f3e0 0000000000000008 W MitmQueryService<BpcMitmService>::~MitmQueryService()
000000000001f3f0 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
000000000001f400 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001f410 0000000000000008 W std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
000000000001f420 0000000000000038 W WaitableManager<DefaultManagerOptions>::CancelSynchronization()
000000000001f460 0000000000000048 W MitmServer<BpcMitmService>::~MitmServer()
000000000001f460 0000000000000048 W MitmServer<BpcMitmService>::~MitmServer()
000000000001f4b0 0000000000000028 W MitmServer<BpcMitmService>::~MitmServer()
000000000001f4e0 0000000000000060 W WaitableManager<DefaultManagerOptions>::RequestStop()
000000000001f540 00000000000000b0 W WaitableManager<DefaultManagerOptions>::NotifySignaled(IWaitable*)
000000000001f5f0 0000000000000048 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::FreeObject(IDomainObject*, unsigned int)
000000000001f640 0000000000000048 W WaitableManager<DefaultManagerOptions>::FreeObject(IDomainObject*, unsigned int)
000000000001f690 0000000000000048 W non-virtual thunk to WaitableManager<DefaultManagerOptions>::ForceFreeObject(unsigned int)
000000000001f6e0 0000000000000048 W WaitableManager<DefaultManagerOptions>::ForceFreeObject(unsigned int)
000000000001f730 000000000000003c W non-virtual thunk to WaitableManager<DefaultManagerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
000000000001f770 000000000000003c W WaitableManager<DefaultManagerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
000000000001f7b0 0000000000000100 W WaitableManager<DefaultManagerOptions>::~WaitableManager()
000000000001f8b0 000000000000008c W BpcMitmService::~BpcMitmService()
000000000001f8b0 000000000000008c W BpcMitmService::~BpcMitmService()
000000000001f940 0000000000000094 W BpcMitmService::~BpcMitmService()
000000000001f9e0 0000000000000034 t ipcCloseObjectById
000000000001fa20 000000000000007c W std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
000000000001faa0 00000000000002b0 t ipcPrepareHeaderForDomain.constprop.384
000000000001fd50 000000000000015c W unsigned int WrapIpcCommandImpl<&MitmQueryService<BpcMitmService>::AssociatePidToTid>(IpcResponseContext*)
000000000001feb0 00000000000001d0 W unsigned int WrapIpcCommandImpl<&MitmQueryService<BpcMitmService>::ShouldMitm>(IpcResponseContext*)
0000000000020080 0000000000000198 W unsigned int WrapIpcCommandImpl<&BpcMitmService::RebootSystem>(IpcResponseContext*)
0000000000020220 0000000000000198 W unsigned int WrapIpcCommandImpl<&BpcMitmService::ShutdownSystem>(IpcResponseContext*)
00000000000203c0 00000000000000c8 W WaitableManager<DefaultManagerOptions>::AddWaitable(IWaitable*)
0000000000020490 0000000000000190 W WaitableManager<DefaultManagerOptions>::AddSession(unsigned int, ServiceObjectHolder&&)
0000000000020620 00000000000007f4 W MitmServer<BpcMitmService>::HandleSignaled(unsigned long)
0000000000020e20 000000000000016c W __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > > std::__remove_if<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_pred<WaitableManager<DefaultManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}> >(__gnu_cxx::__ops::_Iter_pred<WaitableManager<DefaultManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<DefaultManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<DefaultManagerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>)
0000000000020f90 00000000000006ac W WaitableManager<DefaultManagerOptions>::GetWaitable()
0000000000021640 0000000000000424 W WaitableManager<DefaultManagerOptions>::ProcessLoop(void*)
0000000000021a70 00000000000004ac W WaitableManager<DefaultManagerOptions>::Process()
0000000000021f20 0000000000000900 T BpcMitmMain(void*)
0000000000022820 0000000000000004 T BpcMitmService::PostProcess(IMitmServiceObject*, IpcResponseContext*)
0000000000022830 0000000000000040 T BpcMitmService::ShutdownSystem()
0000000000022870 0000000000000004 T BpcMitmService::RebootSystem()
0000000000022880 0000000000000154 T BpcRebootManager::Initialize()
00000000000229e0 00000000000001ac T BpcRebootManager::PerformReboot()
0000000000022b90 0000000000000004 W std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000022b90 0000000000000004 W std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000022ba0 0000000000000018 W std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000022bc0 0000000000000008 W std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000022bd0 0000000000000004 W std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000022be0 0000000000000034 t ipcCloseObjectById
0000000000022c20 0000000000000098 W NsDocumentService::~NsDocumentService()
0000000000022c20 0000000000000098 W NsDocumentService::~NsDocumentService()
0000000000022cc0 0000000000000094 W NsDocumentService::~NsDocumentService()
0000000000022d60 00000000000000c8 W std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000022e30 0000000000000004 T NsWebMitmService::PostProcess(IMitmServiceObject*, IpcResponseContext*)
0000000000022e40 0000000000000180 T NsWebMitmService::GetDocumentInterface(Out<std::shared_ptr<NsDocumentService>, void>)
0000000000022fc0 0000000000000014 T NsDocumentService::GetApplicationContentPath(OutBuffer<unsigned char, (BufferType)0>, unsigned long, unsigned char)
0000000000022fe0 0000000000000070 T NsDocumentService::ResolveApplicationContentPath(unsigned long, unsigned char)
0000000000023050 0000000000000008 T NsDocumentService::GetRunningApplicationProgramId(Out<unsigned long, void>, unsigned long)
0000000000023060 0000000000000254 t ipcPrepareHeader
00000000000232c0 0000000000000234 t ipcParse
0000000000023500 0000000000000004 W MitmQueryService<NsWebMitmService>::~MitmQueryService()
0000000000023500 0000000000000004 W MitmQueryService<NsWebMitmService>::~MitmQueryService()
0000000000023510 0000000000000004 W MitmQueryService<NsAmMitmService>::~MitmQueryService()
0000000000023510 0000000000000004 W MitmQueryService<NsAmMitmService>::~MitmQueryService()
0000000000023520 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023520 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023530 0000000000000010 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000023540 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000023560 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023560 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023570 0000000000000010 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000023580 0000000000000018 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
00000000000235a0 0000000000000008 W MitmServer<NsWebMitmService>::GetHandle()
00000000000235b0 0000000000000008 W MitmServer<NsAmMitmService>::GetHandle()
00000000000235c0 0000000000000004 W std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000235c0 0000000000000004 W std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000235d0 0000000000000010 W std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000235e0 0000000000000018 W std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000023600 0000000000000004 W std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023600 0000000000000004 W std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023610 0000000000000010 W std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000023620 0000000000000018 W std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000023640 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000023640 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000023650 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000023660 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000023660 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000023670 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000023680 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000023690 0000000000000004 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000236a0 0000000000000004 W std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000236b0 0000000000000004 W std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000236c0 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000236d0 0000000000000004 W std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000236e0 0000000000000008 W MitmQueryService<NsWebMitmService>::~MitmQueryService()
00000000000236f0 0000000000000008 W MitmQueryService<NsAmMitmService>::~MitmQueryService()
0000000000023700 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000023710 0000000000000008 W std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()
0000000000023720 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023730 0000000000000008 W std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023740 0000000000000008 W std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023750 0000000000000008 W std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000023760 0000000000000054 t ipcCloseObjectById
00000000000237c0 000000000000007c W std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000023840 0000000000000048 W MitmServer<NsWebMitmService>::~MitmServer()
0000000000023840 0000000000000048 W MitmServer<NsWebMitmService>::~MitmServer()
0000000000023890 0000000000000028 W MitmServer<NsWebMitmService>::~MitmServer()
00000000000238c0 0000000000000048 W MitmServer<NsAmMitmService>::~MitmServer()
00000000000238c0 0000000000000048 W MitmServer<NsAmMitmService>::~MitmServer()
0000000000023910 0000000000000028 W MitmServer<NsAmMitmService>::~MitmServer()
0000000000023940 000000000000007c t ipcPrepareHeaderForDomain.constprop.499
00000000000239c0 000000000000007c W std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000023a40 000000000000008c W NsWebMitmService::~NsWebMitmService()
0000000000023a40 000000000000008c W NsWebMitmService::~NsWebMitmService()
0000000000023ad0 000000000000008c W NsAmMitmService::~NsAmMitmService()
0000000000023ad0 000000000000008c W NsAmMitmService::~NsAmMitmService()
0000000000023b60 0000000000000094 W NsWebMitmService::~NsWebMitmService()
0000000000023c00 0000000000000094 W NsAmMitmService::~NsAmMitmService()
0000000000023ca0 000000000000015c W unsigned int WrapIpcCommandImpl<&MitmQueryService<NsWebMitmService>::AssociatePidToTid>(IpcResponseContext*)
0000000000023e00 00000000000001b0 W unsigned int WrapIpcCommandImpl<&NsAmMitmService::ResolveApplicationContentPath>(IpcResponseContext*)
0000000000023fb0 0000000000000188 W unsigned int WrapIpcCommandImpl<&MitmQueryService<NsWebMitmService>::ShouldMitm>(IpcResponseContext*)
0000000000024140 00000000000001d8 W unsigned int WrapIpcCommandImpl<&NsAmMitmService::GetRunningApplicationProgramId>(IpcResponseContext*)
0000000000024320 000000000000015c W unsigned int WrapIpcCommandImpl<&MitmQueryService<NsAmMitmService>::AssociatePidToTid>(IpcResponseContext*)
0000000000024480 00000000000001b0 W unsigned int WrapIpcCommandImpl<&NsDocumentService::ResolveApplicationContentPath>(IpcResponseContext*)
0000000000024630 0000000000000188 W unsigned int WrapIpcCommandImpl<&MitmQueryService<NsAmMitmService>::ShouldMitm>(IpcResponseContext*)
00000000000247c0 00000000000001d8 W unsigned int WrapIpcCommandImpl<&NsDocumentService::GetRunningApplicationProgramId>(IpcResponseContext*)
00000000000249a0 000000000000028c W unsigned int WrapIpcCommandImpl<&NsDocumentService::GetApplicationContentPath>(IpcResponseContext*)
0000000000024c30 000000000000028c W unsigned int WrapIpcCommandImpl<&NsAmMitmService::GetApplicationContentPath>(IpcResponseContext*)
0000000000024ec0 0000000000000468 W unsigned int WrapIpcCommandImpl<&NsWebMitmService::GetDocumentInterface>(IpcResponseContext*)
0000000000025330 000000000000049c W MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)
00000000000257d0 000000000000049c W MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)
0000000000025c70 0000000000000598 T NsMitmMain(void*)
0000000000026210 0000000000000004 T NsAmMitmService::PostProcess(IMitmServiceObject*, IpcResponseContext*)
0000000000026220 0000000000000014 T NsAmMitmService::GetApplicationContentPath(OutBuffer<unsigned char, (BufferType)0>, unsigned long, unsigned char)
0000000000026240 0000000000000070 T NsAmMitmService::ResolveApplicationContentPath(unsigned long, unsigned char)
00000000000262b0 0000000000000008 T NsAmMitmService::GetRunningApplicationProgramId(Out<unsigned long, void>, unsigned long)
00000000000262c0 0000000000000078 t ini_reader_string
0000000000026340 0000000000000094 t find_chars_or_comment
00000000000263e0 0000000000000068 t rstrip
0000000000026450 00000000000002a4 T ini_parse_stream
0000000000026700 000000000000003c T ini_parse_string
0000000000026740 0000000000000274 T fsOpenBisStorageFwd
00000000000269c0 000000000000026c T fsOpenDataStorageByCurrentProcessFwd
0000000000026c30 0000000000000264 T fsOpenDataStorageByDataIdFwd
0000000000026ea0 00000000000002a4 T fsOpenFileSystemWithPatchFwd
0000000000027150 00000000000002f4 T fsOpenFileSystemWithIdFwd
0000000000027450 00000000000001d0 T fsFileOperateRange
0000000000027620 00000000000001d0 T fsStorageOperateRange
00000000000277f0 00000000000001c8 T setsysGetEdidFwd
00000000000279c0 00000000000002f0 T setsysGetSettingsItemValueFwd
0000000000027cb0 000000000000026c T nsGetDocumentInterfaceFwd
0000000000027f20 00000000000001c0 T nsamGetApplicationContentPathFwd
00000000000280e0 0000000000000198 T nsamResolveApplicationContentPathFwd
0000000000028280 00000000000001dc T nsamGetRunningApplicationProgramIdFwd
0000000000028460 0000000000000004 T nswebGetApplicationContentPath
0000000000028470 0000000000000004 T nswebResolveApplicationContentPath
0000000000028480 0000000000000004 T nswebGetRunningApplicationProgramId
0000000000028490 00000000000000c4 T MitmQueryUtils::GetAssociatedTidForPid(unsigned long, unsigned long*)
0000000000028560 00000000000000a8 T MitmQueryUtils::AssociatePidToTid(unsigned long, unsigned long)
0000000000028610 0000000000000134 t _CacheValues()
0000000000028750 000000000000001c T GetRuntimeFirmwareVersion()
0000000000028770 0000000000000038 T SetFirmwareVersionForLibnx()
00000000000287b0 000000000000028c T RegisterMitmServerQueryHandle(unsigned int, ServiceObjectHolder&&)
0000000000028a40 000000000000050c t ServerQueryManagerThreadFunc(void*)
0000000000028f50 0000000000000134 T smMitMInitialize
0000000000029090 000000000000004c T smMitMExit
00000000000290e0 000000000000014c T smMitMInstall
0000000000029230 00000000000000e0 T smMitMUninstall
0000000000029310 0000000000000154 T smMitMAcknowledgeSession
0000000000029470 000000000000008c T mutexLock
0000000000029500 0000000000000030 T mutexUnlock
0000000000029530 000000000000004c T rmutexLock
0000000000029580 000000000000001c T rmutexUnlock
00000000000295a0 0000000000000060 T condvarWaitTimeout
0000000000029600 00000000000001fc T threadCreate
0000000000029800 00000000000000b0 T threadExit
00000000000298b0 0000000000000090 t _EntryWrap
0000000000029940 0000000000000008 T threadStart
0000000000029950 000000000000002c T threadWaitForExit
0000000000029980 0000000000000054 T threadClose
00000000000299e0 000000000000000c T threadGetCurHandle
00000000000299f0 0000000000000010 T threadTlsGet
0000000000029a00 0000000000000010 T threadTlsSet
0000000000029a10 00000000000000d8 T threadTlsAlloc
0000000000029af0 0000000000000048 T threadTlsFree
0000000000029b40 0000000000000034 t ipcCloseObjectById
0000000000029b80 0000000000000124 t _hidGetSharedMemoryHandle.constprop.10
0000000000029cb0 0000000000000100 t _hidCmdWithNoInput
0000000000029db0 0000000000000134 t _hidCreateAppletResource.constprop.9
0000000000029ef0 000000000000010c t _hidCmdWithInputU32
000000000002a000 0000000000000108 t _hidCmdWithInputU64.constprop.11
000000000002a110 00000000000001e0 T hidReset
000000000002a2f0 000000000000000c T hidGetSharedmemAddr
000000000002a300 000000000000006c T hidKeysHeld
000000000002a370 000000000000000c T hidTouchCount
000000000002a380 0000000000000578 T hidScanInput
000000000002a900 0000000000000198 T hidSetSupportedNpadIdType
000000000002aaa0 000000000000000c T hidSetSupportedNpadStyleSet
000000000002aab0 0000000000000008 T hidSetNpadJoyHoldType
000000000002aac0 000000000000000c T hidSetNpadJoyAssignmentModeDual
000000000002aad0 000000000000012c T hidExit
000000000002ac00 0000000000000168 T hidInitialize
000000000002ad70 0000000000000034 t ipcCloseObjectById
000000000002adb0 000000000000012c t _nsGetInterface.constprop.7
000000000002aee0 0000000000000104 T nsInitialize
000000000002aff0 00000000000000fc T nsExit
000000000002b0f0 0000000000000044 T smAddOverrideHandle
000000000002b140 0000000000000060 T smGetServiceOverride
000000000002b1a0 0000000000000014 T smHasInitialized
000000000002b1c0 000000000000005c T smExit
000000000002b220 0000000000000038 T smEncodeName
000000000002b260 000000000000012c T smGetServiceOriginal
000000000002b390 0000000000000158 T smInitialize
000000000002b4f0 0000000000000074 T smGetService
000000000002b570 0000000000000140 t _fatalImpl
000000000002b6b0 0000000000000014 T fatalWithType
000000000002b6d0 0000000000000014 T fatalSimple
000000000002b6f0 0000000000000220 t ipcPrepareHeader
000000000002b910 000000000000022c t ipcParse
000000000002bb40 00000000000000b0 t serviceIpcParse
000000000002bbf0 0000000000000034 t ipcCloseObjectById
000000000002bc30 0000000000000274 t fsFsQueryEntry.part.12
000000000002beb0 0000000000000200 T fsInitialize
000000000002c0b0 000000000000009c T fsExit
000000000002c150 00000000000001d4 T fsOpenBisStorage
000000000002c330 00000000000001cc T fsMountSdcard
000000000002c500 00000000000001d4 T fsOpenDataStorageByDataId
000000000002c6e0 00000000000001a4 T fsFsCreateFile
000000000002c890 000000000000019c T fsFsDeleteFile
000000000002ca30 000000000000019c T fsFsCreateDirectory
000000000002cbd0 000000000000019c T fsFsDeleteDirectory
000000000002cd70 000000000000019c T fsFsDeleteDirectoryRecursively
000000000002cf10 0000000000000214 T fsFsRenameFile
000000000002d130 0000000000000214 T fsFsRenameDirectory
000000000002d350 00000000000001b0 T fsFsGetEntryType
000000000002d500 00000000000001e4 T fsFsOpenFile
000000000002d6f0 00000000000001f8 T fsFsOpenDirectory
000000000002d8f0 000000000000016c T fsFsCommit
000000000002da60 00000000000001b0 T fsFsGetFreeSpace
000000000002dc10 00000000000001b0 T fsFsGetTotalSpace
000000000002ddc0 0000000000000140 T fsFsCleanDirectoryRecursively
000000000002df00 0000000000000194 T fsFsGetFileTimeStampRaw
000000000002e0a0 0000000000000060 T fsFsQueryEntry
000000000002e100 000000000000006c T fsFsClose
000000000002e170 00000000000001f0 T fsFileRead
000000000002e360 00000000000001b8 T fsFileWrite
000000000002e520 000000000000016c T fsFileFlush
000000000002e690 0000000000000174 T fsFileSetSize
000000000002e810 0000000000000194 T fsFileGetSize
000000000002e9b0 000000000000006c T fsFileClose
000000000002ea20 000000000000006c T fsDirClose
000000000002ea90 00000000000001ec T fsDirRead
000000000002ec80 0000000000000198 T fsDirGetEntryCount
000000000002ee20 00000000000001d0 T fsStorageRead
000000000002eff0 00000000000001d0 T fsStorageWrite
000000000002f1c0 000000000000016c T fsStorageFlush
000000000002f330 0000000000000174 T fsStorageSetSize
000000000002f4b0 0000000000000194 T fsStorageGetSize
000000000002f650 000000000000006c T fsStorageClose
000000000002f6c0 000000000000003c T setsysInitialize
000000000002f700 0000000000000198 T setsysGetSettingsItemValueSize
000000000002f8a0 00000000000001d8 t _sha256ProcessBlocks
000000000002fa80 0000000000000034 T sha256ContextCreate
000000000002fac0 00000000000000e8 T sha256ContextUpdate
000000000002fbb0 00000000000000e0 T sha256ContextGetHash
000000000002fc90 0000000000000044 T sha256CalculateHash
000000000002fce0 0000000000000010 T hosversionGet
000000000002fcf0 0000000000000010 T hosversionSet
000000000002fd00 0000000000000008 t romfs_close
000000000002fd10 0000000000000084 t romfs_seek
000000000002fda0 000000000000001c t romfs_dirreset
000000000002fdc0 0000000000000074 t romfs_fstat
000000000002fe40 0000000000000054 t _romfsResetMount
000000000002fea0 00000000000000b8 t romfsFindMount
000000000002ff60 0000000000000234 t romfs_dirnext
00000000000301a0 00000000000000f0 t searchForDir
0000000000030290 00000000000000f4 t searchForFile
0000000000030390 0000000000000074 t _romfs_read
0000000000030410 000000000000007c t romfs_read
0000000000030490 0000000000000044 t romfs_free
00000000000304e0 000000000000005c t romfs_mountclose
0000000000030540 000000000000013c t romfsMountCommon
0000000000030680 00000000000001c4 t navigateToDir.constprop.5
0000000000030850 0000000000000104 t romfs_open
0000000000030960 0000000000000218 t romfs_stat
0000000000030b80 0000000000000054 t romfs_chdir
0000000000030be0 0000000000000088 t romfs_diropen
0000000000030c70 0000000000000008 t romfs_dirclose
0000000000030c80 0000000000000060 T romfsMountFromStorage
0000000000030ce0 0000000000000044 T romfsMountFromDataArchive
0000000000030d30 000000000000002c T romfsUnmount
0000000000030d60 0000000000000044 t consoleDrawChar
0000000000030db0 0000000000000028 t debug_write
0000000000030de0 0000000000000140 t consoleClearLine
0000000000030f20 000000000000004c t consoleNewRow
0000000000030f70 0000000000000118 t consolePrintChar
0000000000031090 000000000000015c t consoleCls
00000000000311f0 00000000000007e0 t con_write
00000000000319d0 00000000000000c8 T consoleDebugInit
0000000000031a98 T svcMapMemory
0000000000031aa0 T svcUnmapMemory
0000000000031aa8 T svcQueryMemory
0000000000031abc T svcExitProcess
0000000000031ac4 T svcCreateThread
0000000000031ad8 T svcStartThread
0000000000031ae0 T svcExitThread
0000000000031ae8 T svcSleepThread
0000000000031af0 T svcGetThreadPriority
0000000000031b04 T svcMapSharedMemory
0000000000031b0c T svcUnmapSharedMemory
0000000000031b14 T svcCloseHandle
0000000000031b1c T svcWaitSynchronization
0000000000031b30 T svcCancelSynchronization
0000000000031b38 T svcArbitrateLock
0000000000031b40 T svcArbitrateUnlock
0000000000031b48 T svcWaitProcessWideKeyAtomic
0000000000031b50 T svcSignalProcessWideKey
0000000000031b58 T svcConnectToNamedPort
0000000000031b6c T svcSendSyncRequest
0000000000031b74 T svcBreak
0000000000031b7c T svcOutputDebugString
0000000000031b84 T svcReturnFromException
0000000000031b8c T svcGetInfo
0000000000031ba0 T svcCreateSession
0000000000031bb8 T svcAcceptSession
0000000000031bcc T svcReplyAndReceive
0000000000031be0 T svcCallSecureMonitor
0000000000031c14 T __aarch64_read_tp
0000000000031c20 000000000000017c T detectKernelVersion
0000000000031da0 0000000000000030 T detectDebugger
0000000000031dd0 0000000000000104 t _waitLoop
0000000000031ee0 000000000000000c T waitHandles
0000000000031ef0 0000000000000058 T rwlockReadLock
0000000000031f50 000000000000005c T rwlockReadUnlock
0000000000031fb0 0000000000000084 T rwlockWriteLock
0000000000032040 000000000000003c T rwlockWriteUnlock
0000000000032080 0000000000000014 T shmemLoadRemote
00000000000320a0 0000000000000084 T shmemMap
0000000000032130 0000000000000058 T shmemUnmap
0000000000032190 0000000000000044 T shmemClose
00000000000321e0 000000000000007c t _GetRegionFromInfo.isra.1
0000000000032260 0000000000000114 T virtmemSetup
0000000000032380 000000000000013c T virtmemReserve
00000000000324c0 0000000000000004 T virtmemFree
00000000000324d0 00000000000000c8 T virtmemReserveStack
00000000000325a0 0000000000000004 T virtmemFreeStack
00000000000325b0 0000000000000028 T appletGetAppletResourceUserId
00000000000325e0 00000000000000a0 T __nx_dynamic
0000000000032680 0000000000000208 T envSetup
0000000000032890 0000000000000020 T envGetMainThreadHandle
00000000000328b0 000000000000000c T envIsNso
00000000000328c0 0000000000000014 T envHasArgv
00000000000328e0 000000000000000c T envGetArgv
00000000000328f0 000000000000000c T envGetExitFuncPtr
0000000000032900 0000000000000028 W __libnx_init
0000000000032930 0000000000000020 W __libnx_exit
0000000000032950 000000000000001c T __syscall_exit
0000000000032970 0000000000000034 T __syscall_getreent
00000000000329b0 0000000000000004 T __syscall_lock_acquire
00000000000329c0 0000000000000004 T __syscall_lock_release
00000000000329d0 0000000000000004 T __syscall_lock_acquire_recursive
00000000000329e0 0000000000000004 T __syscall_lock_release_recursive
00000000000329f0 0000000000000040 T __syscall_cond_broadcast
0000000000032a30 000000000000003c T __syscall_cond_wait
0000000000032a70 0000000000000044 T __syscall_tls_create
0000000000032ac0 0000000000000018 T __syscall_tls_set
0000000000032ae0 0000000000000004 T __syscall_tls_get
0000000000032af0 0000000000000018 T __syscall_tls_delete
0000000000032b10 0000000000000080 T newlibSetup
0000000000032b90 0000000000000324 T argvSetup
0000000000032eb4 W __libnx_exception_entry
0000000000032f40 t __libnx_exception_entry_start
0000000000033068 t __libnx_exception_entry_abort
000000000003306c t __libnx_exception_entry_end
0000000000033074 T __libnx_exception_returnentry
0000000000033090 00000000000000c4 T nxlinkSetup
0000000000033158 000000000000000c T __cxa_pure_virtual
0000000000033168 0000000000000004 T operator new[](unsigned long)
0000000000033170 0000000000000068 T operator new(unsigned long)
00000000000331d8 000000000000003c T __cxxabiv1::__terminate(void (*)())
0000000000033218 0000000000000010 T std::get_terminate()
0000000000033228 0000000000000010 T std::terminate()
0000000000033238 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
0000000000033248 0000000000000010 T std::get_unexpected()
0000000000033258 0000000000000010 T std::unexpected()
0000000000033268 000000000000000c T std::bad_alloc::what() const
0000000000033278 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000033278 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000033290 0000000000000028 T std::bad_alloc::~bad_alloc()
00000000000332b8 0000000000000084 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
0000000000033340 000000000000015c t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
00000000000334a0 00000000000000c0 t get_ttype_entry(lsda_header_info*, unsigned long)
0000000000033560 0000000000000094 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
00000000000335f8 000000000000006c t base_of_encoded_value(unsigned char, _Unwind_Context*)
0000000000033668 0000000000000108 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0000000000033770 00000000000004dc T __gxx_personality_v0
0000000000033c50 00000000000000f0 T __cxa_call_unexpected
0000000000033d40 0000000000000004 T operator delete[](void*)
0000000000033d48 0000000000000010 T std::get_new_handler()
0000000000033d58 0000000000000004 T std::exception::~exception()
0000000000033d58 0000000000000004 T std::exception::~exception()
0000000000033d60 0000000000000014 T std::bad_exception::~bad_exception()
0000000000033d60 0000000000000014 T std::bad_exception::~bad_exception()
0000000000033d78 000000000000000c T std::bad_exception::what() const
0000000000033d88 0000000000000028 T std::bad_exception::~bad_exception()
0000000000033db0 0000000000000004 T operator delete(void*, unsigned long)
0000000000033db8 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
0000000000033e20 0000000000000058 T __cxa_init_primary_exception
0000000000033e78 0000000000000054 T __cxa_throw
0000000000033ed0 0000000000000070 T __cxa_rethrow
0000000000033f40 00000000000000a0 T __cxa_begin_catch
0000000000033fe0 0000000000000094 T __cxa_end_catch
0000000000034078 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000034088 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000034098 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000034098 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00000000000340b0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000000340b0 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000000340c8 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000034100 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000034138 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000034170 0000000000000160 t (anonymous namespace)::pool::free(void*) [clone .constprop.2]
00000000000342d0 0000000000000128 t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.3]
00000000000343f8 0000000000000064 T __cxa_allocate_exception
0000000000034460 0000000000000030 T __cxa_free_exception
0000000000034490 0000000000000004 T operator delete(void*)
0000000000034498 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000034498 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000000344b0 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000000000344d8 0000000000000080 T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000034558 000000000000013c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000034698 0000000000000068 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000034700 0000000000000070 t std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)
0000000000034770 0000000000000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0000000000034770 0000000000000058 t std::_Rb_tree_increment(std::_Rb_tree_node_base*) [clone .localalias.2]
00000000000347c8 0000000000000004 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
00000000000347d0 0000000000000298 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0000000000034a68 0000000000000034 T std::__throw_bad_alloc()
0000000000034aa0 0000000000000054 T std::__throw_logic_error(char const*)
0000000000034af8 0000000000000054 T std::__throw_length_error(char const*)
0000000000034b50 0000000000000118 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
0000000000034c68 0000000000000100 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
0000000000034d68 0000000000000044 T __cxa_call_terminate
0000000000034db0 0000000000000014 W __eh_globals_init::~__eh_globals_init()
0000000000034db0 0000000000000014 W __eh_globals_init::~__eh_globals_init()
0000000000034dc8 0000000000000048 t eh_globals_dtor(void*)
0000000000034e10 0000000000000024 T __cxa_get_globals_fast
0000000000034e38 0000000000000074 T __cxa_get_globals
0000000000034eb0 0000000000000004 T std::type_info::~type_info()
0000000000034eb0 0000000000000004 T std::type_info::~type_info()
0000000000034eb8 0000000000000008 T std::type_info::__is_pointer_p() const
0000000000034eb8 0000000000000008 T std::type_info::__is_function_p() const
0000000000034ec0 000000000000006c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0000000000034f30 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000034f40 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000034f40 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000034f58 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000034f80 00000000000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000035058 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000000350c0 00000000000000a8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0000000000035168 0000000000000008 T std::logic_error::what() const
0000000000035170 0000000000000074 T std::logic_error::~logic_error()
0000000000035170 0000000000000074 T std::logic_error::~logic_error()
00000000000351e8 0000000000000024 T std::logic_error::~logic_error()
0000000000035210 0000000000000014 T std::length_error::~length_error()
0000000000035210 0000000000000014 T std::length_error::~length_error()
0000000000035228 0000000000000024 T std::length_error::~length_error()
0000000000035250 0000000000000048 T std::logic_error::logic_error(char const*)
0000000000035250 0000000000000048 T std::logic_error::logic_error(char const*)
0000000000035298 0000000000000030 T std::length_error::length_error(char const*)
0000000000035298 0000000000000030 T std::length_error::length_error(char const*)
00000000000352c8 0000000000000084 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
0000000000035350 0000000000000098 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.25]
0000000000035350 0000000000000098 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.22]
00000000000353e8 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00000000000353f0 0000000000000034 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
0000000000035428 000000000000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0000000000035428 000000000000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
0000000000035478 00000000000009e4 t __divtf3
0000000000035e60 0000000000000148 t __letf2
0000000000035e60 0000000000000148 T __lttf2
0000000000035fa8 00000000000007b0 t __multf3
0000000000036758 000000000000007c t __floatsitf
00000000000367d8 00000000000000ac t __floatunditf
0000000000036888 000000000000013c t __extendsftf2
00000000000369c8 0000000000000348 t __trunctfdf2
0000000000036d10 000000000000015c t read_encoded_value_with_base
0000000000036e70 0000000000000070 t base_of_encoded_value
0000000000036ee0 000000000000080c t execute_cfa_program
00000000000376f0 000000000000040c t uw_frame_state_for
0000000000037b00 0000000000000158 t init_dwarf_reg_size_table
0000000000037c58 0000000000000720 t execute_stack_op
0000000000038378 000000000000037c t uw_update_context_1
00000000000386f8 0000000000000244 t uw_init_context_1
0000000000038940 00000000000000b4 t uw_update_context
00000000000389f8 00000000000000e0 t _Unwind_RaiseException_Phase2
0000000000038ad8 0000000000000118 t _Unwind_ForcedUnwind_Phase2
0000000000038bf0 0000000000000164 t uw_install_context_1
0000000000038d58 0000000000000054 t _Unwind_SetGR
0000000000038db0 0000000000000014 t _Unwind_GetIPInfo
0000000000038dc8 0000000000000008 t _Unwind_SetIP
0000000000038dd0 0000000000000008 t _Unwind_GetLanguageSpecificData
0000000000038dd8 0000000000000008 t _Unwind_GetRegionStart
0000000000038de0 0000000000000008 t _Unwind_GetDataRelBase
0000000000038de8 0000000000000008 t _Unwind_GetTextRelBase
0000000000038df0 0000000000000004 t _Unwind_DebugHook
0000000000038df8 000000000000018c t _Unwind_RaiseException
0000000000038f88 0000000000000114 t _Unwind_Resume
00000000000390a0 0000000000000110 t _Unwind_Resume_or_Rethrow
00000000000391b0 0000000000000018 t _Unwind_DeleteException
00000000000391c8 000000000000001c t fde_unencoded_compare
00000000000391e8 00000000000000f4 t frame_downheap
00000000000392e0 00000000000000c0 t frame_heapsort
00000000000393a0 0000000000000060 t size_of_encoded_value
0000000000039400 000000000000015c t read_encoded_value_with_base
0000000000039560 0000000000000120 t get_cie_encoding
0000000000039680 0000000000000068 t base_from_object.isra.5
00000000000396e8 0000000000000090 t fde_single_encoding_compare
0000000000039778 0000000000000194 t classify_object_over_fdes
0000000000039910 0000000000000148 t add_fdes
0000000000039a58 0000000000000188 t linear_search_fdes
0000000000039be0 00000000000000bc t fde_mixed_encoding_compare
0000000000039ca0 0000000000000698 t search_object
000000000003a338 0000000000000120 t __deregister_frame_info_bases.part.8
000000000003a458 0000000000000054 t __register_frame_info.part.7
000000000003a4b0 0000000000000014 t __register_frame_info
000000000003a4c8 0000000000000018 t __deregister_frame_info
000000000003a4e0 00000000000001c0 t _Unwind_Find_FDE
000000000003a6a0 0000000000000070 t __sfp_handle_exceptions
000000000003a710 0000000000000018 T abort
000000000003a728 0000000000000030 T calloc
000000000003a758 0000000000000094 T _calloc_r
000000000003a7f0 0000000000000014 T __cxa_atexit
000000000003a808 0000000000000014 T __errno
000000000003a820 000000000000015c T _fclose_r
000000000003a980 000000000000001c T fclose
000000000003a9a0 0000000000000214 T __sflush_r
000000000003abb8 00000000000000b8 T _fflush_r
000000000003ac70 0000000000000040 T fflush
000000000003acb0 0000000000000078 t std
000000000003ad28 000000000000000c T _cleanup_r
000000000003ad38 0000000000000060 T __sfmoreglue
000000000003ad98 000000000000000c T __sfp_lock_acquire
000000000003ada8 000000000000000c T __sfp_lock_release
000000000003adb8 000000000000000c T __sinit_lock_acquire
000000000003adc8 000000000000000c T __sinit_lock_release
000000000003add8 0000000000000080 T __sinit
000000000003ae58 0000000000000118 T __sfp
000000000003af70 0000000000000044 T __libc_fini_array
000000000003afb8 0000000000000130 T _fopen_r
000000000003b0e8 0000000000000030 T fopen
000000000003b118 0000000000000328 T _fread_r
000000000003b440 0000000000000040 T fread
000000000003b480 0000000000000118 T _malloc_trim_r
000000000003b598 00000000000002f4 T _free_r
000000000003b890 0000000000000004 T _fseek_r
000000000003b898 00000000000004c4 T _fseeko_r
000000000003bd60 00000000000000b8 T _fwalk
000000000003be18 00000000000000bc T _fwalk_reent
000000000003bed8 000000000000008c T __libc_init_array
000000000003bf68 0000000000000018 T isspace
000000000003bf80 000000000000001c T isxdigit
000000000003bfa0 00000000000000a4 T __swhatbuf_r
000000000003c048 000000000000010c T __smakebuf_r
000000000003c158 0000000000000030 T memalign
000000000003c188 0000000000000198 T _memalign_r
000000000003c320 000000000000001c T malloc
000000000003c340 000000000000001c T free
000000000003c360 000000000000087c T _malloc_r
000000000003cbdc 00000000000000d8 T memchr
000000000003ccc0 0000000000000110 T memcmp
000000000003ce00 000000000000016c T memcpy
000000000003cf80 00000000000000ac T memmove
000000000003d040 00000000000001dc T memset
000000000003d220 000000000000000c T __malloc_lock
000000000003d230 000000000000000c T __malloc_unlock
000000000003d240 0000000000000020 t lflush
000000000003d260 00000000000001d0 T __srefill_r
000000000003d430 000000000000025c T setvbuf
000000000003d690 00000000000000b4 T _raise_r
000000000003d748 000000000000001c T raise
000000000003d768 000000000000014c T snprintf
000000000003d8b8 00000000000000bc T sscanf
000000000003d978 0000000000000050 T __sread
000000000003d9c8 0000000000000008 T __seofread
000000000003d9d0 000000000000006c T __swrite
000000000003da40 0000000000000050 T __sseek
000000000003da90 0000000000000008 T __sclose
000000000003dac0 00000000000001bc T stpcpy
000000000003dc80 0000000000000078 T strcasecmp
000000000003dcf8 0000000000000074 T strcat
000000000003dd6c 00000000000000dc T strchr
000000000003de80 00000000000000e4 T strcmp
000000000003df80 00000000000001b8 T strcpy
000000000003e138 000000000000001c T strdup
000000000003e158 0000000000000058 T _strdup_r
000000000003e1c0 0000000000000140 T strlen
000000000003e300 000000000000008c T strncasecmp
000000000003e390 0000000000000084 T strncat
000000000003e45c 00000000000001b8 T strncmp
000000000003e618 00000000000000a8 T strncpy
000000000003e6e4 00000000000000e0 T strnlen
000000000003e7a0 00000000000001ac t _strtoul_l.isra.0
000000000003e950 0000000000000034 T _strtoul_r
000000000003e988 0000000000000048 T strtoul
000000000003e9d0 000000000000076c t get_arg
000000000003f13c 0000000000003b38 T _svfprintf_r
0000000000042c74 000000000000005c t get_arg
0000000000042cd0 0000000000002fd8 T __ssvfscanf_r
0000000000045ca8 00000000000000d0 T _wcrtomb_r
0000000000045d78 0000000000000010 T _wcsrtombs_r
0000000000045d88 00000000000000d0 T __register_exitproc
0000000000045e58 0000000000000124 T __call_exitprocs
0000000000045f80 00000000000001a8 t quorem
0000000000046128 00000000000010dc T _dtoa_r
0000000000047208 00000000000000a8 T __sflags
00000000000472b0 0000000000000008 T iswspace
00000000000472b8 0000000000000008 T __localeconv_l
00000000000472c0 0000000000000028 T _localeconv_r
00000000000472e8 000000000000002c T __locale_mb_cur_max
0000000000047318 00000000000000d8 T _mbrtowc_r
00000000000473f0 00000000000002c8 T __utf8_mbtowc
00000000000476b8 0000000000000090 T _Balloc
0000000000047748 000000000000001c T _Bfree
0000000000047768 00000000000000e8 T __multadd
0000000000047850 0000000000000120 T __s2b
0000000000047970 000000000000005c T __hi0bits
00000000000479d0 00000000000000a0 T __lo0bits
0000000000047a70 000000000000002c T __i2b
0000000000047aa0 00000000000001c8 T __multiply
0000000000047c68 0000000000000104 T __pow5mult
0000000000047d70 0000000000000134 T __lshift
0000000000047ea8 0000000000000050 T __mcmp
0000000000047ef8 000000000000014c T __mdiff
0000000000048048 0000000000000068 T __ulp
00000000000480b0 0000000000000150 T __b2d
0000000000048200 0000000000000138 T __d2b
0000000000048338 00000000000000a0 T __ratio
00000000000483d8 0000000000000068 T __copybits
0000000000048440 0000000000000084 T __any_on
00000000000484c8 0000000000000030 T realloc
00000000000484f8 000000000000056c T _realloc_r
0000000000048a68 00000000000000bc T __sccl
0000000000048b28 000000000000000c T nanf
0000000000048b38 000000000000007c T frexp
0000000000048bb8 00000000000000a8 T sprintf
0000000000048c60 00000000000000c8 T stpncpy
0000000000048d28 0000000000000054 t sulp
0000000000048d80 00000000000010e8 T _strtod_l
0000000000049e68 0000000000000040 T _strtod_r
0000000000049ea8 00000000000001a0 t _strtoll_l.isra.0
000000000004a048 0000000000000034 T _strtoll_r
000000000004a080 00000000000001a0 t _strtol_l.isra.0
000000000004a220 0000000000000034 T _strtol_r
000000000004a258 00000000000001ac t _strtoull_l.isra.0
000000000004a408 0000000000000034 T _strtoull_r
000000000004a43c 00000000000001c0 T __ssprint_r
000000000004a5fc 00000000000000f4 T _sungetc_r
000000000004a6f0 0000000000000070 T __ssrefill_r
000000000004a760 00000000000000e0 T _sfread_r
000000000004a840 00000000000000c8 T __submore
000000000004a908 00000000000001dc T _wcsnrtombs_l
000000000004aae8 0000000000000054 T _wcsnrtombs_r
000000000004ab40 00000000000000e4 T __utf8_wctomb
000000000004ac28 0000000000000114 t rshift
000000000004ad40 00000000000007e8 T __gethex
000000000004b528 0000000000000048 T __match
000000000004b570 000000000000022c T __hexnan
000000000004b7a0 000000000000004c T iswspace_l
000000000004b7f0 0000000000000244 t __jp2uc
000000000004ba38 00000000000000bc T _jp2uc_l
000000000004baf8 000000000000000c T nan
000000000004bb08 0000000000000088 T category
000000000004bb90 0000000000000008 t null_write
000000000004bb98 0000000000000108 T FindDevice
000000000004bca0 00000000000000d8 T AddDevice
000000000004bd78 00000000000000a8 T _close_r
000000000004be20 0000000000000080 T _fstat_r
000000000004bea0 0000000000000010 T _getpid_r
000000000004beb0 0000000000000008 T _isatty_r
000000000004beb8 0000000000000010 T _kill_r
000000000004bec8 0000000000000094 T _lseek_r
000000000004bf60 00000000000000e0 T _open_r
000000000004c040 00000000000000a4 T _read_r
000000000004c0e8 0000000000000078 T _sbrk_r
000000000004c160 00000000000000a4 T _write_r
000000000004c208 0000000000000020 T _exit
000000000004c228 0000000000000014 T __libc_lock_acquire
000000000004c240 0000000000000014 T __libc_lock_release
000000000004c258 000000000000000c T __libc_lock_init_recursive
000000000004c268 0000000000000014 T __libc_lock_acquire_recursive
000000000004c280 0000000000000014 T __libc_lock_release_recursive
000000000004c298 0000000000000004 T __libc_lock_close_recursive
000000000004c2a0 0000000000000018 T __libc_cond_broadcast
000000000004c2b8 0000000000000018 T __libc_cond_wait
000000000004c2d0 000000000000003c T __free_handle
000000000004c310 0000000000000058 T __release_handle
000000000004c368 00000000000000c0 T __alloc_handle
000000000004c428 0000000000000020 T __get_handle
000000000004c448 0000000000000020 T __getreent
000000000004c468 000000000000006c T pthread_mutex_lock
000000000004c4d8 000000000000006c T pthread_mutex_unlock
000000000004c548 00000000000000dc T pthread_once
000000000004c628 0000000000000024 T pthread_key_create
000000000004c650 0000000000000018 T pthread_setspecific
000000000004c668 0000000000000018 T pthread_getspecific
000000000004c680 0000000000000018 T pthread_key_delete
000000000004c698 0000000000000150 t __extenddftf2
000000000004c7e8 T _fini
000000000004d3b8 0000000000000010 V std::_Sp_make_shared_tag::_S_ti()::__tag
000000000004d400 V IDomainObject::s_DispatchTable
000000000004d630 000000000000001c r CSWTCH.8
000000000004d6b0 0000000000000020 r H_0.21904
000000000004d700 0000000000000100 r s_roundConstants
000000000004d8e8 000000000000000d V typeinfo name for std::bad_alloc
000000000004d908 000000000000000d V typeinfo name for std::exception
000000000004d918 0000000000000012 V typeinfo name for std::bad_exception
000000000004d930 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
000000000004d950 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
000000000004d990 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
000000000004d9b8 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
000000000004da38 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
000000000004da60 0000000000000988 R std::__detail::__prime_list
000000000004e3e8 000000000000000d r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
000000000004e3f8 000000000000000d V typeinfo name for std::type_info
000000000004e408 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
000000000004e430 0000000000000010 V typeinfo name for std::logic_error
000000000004e440 0000000000000011 V typeinfo name for std::length_error
000000000004e710 0000000000000008 r terminator.9403
000000000004e718 0000000000000101 R _ctype_
000000000004e9a8 0000000000000010 r blanks.6590
000000000004e9b8 0000000000000010 r zeroes.6591
000000000004ea88 0000000000000022 r basefix.6623
000000000004eb40 0000000000000028 R __mprec_bigtens
000000000004eb68 00000000000000c8 R __mprec_tens
000000000004ec30 000000000000000c r p05.5339
000000000004ec70 0000000000000014 r fpi.5419
000000000004ec88 0000000000000014 r fpinan.5455
000000000004eca0 0000000000000028 r tinytens
000000000004ecc8 000000000000006c R __action_table
000000000004ed38 0000000000000100 R __chclass
000000000004ee38 000000000000006c R __state_table
000000000004eea8 0000000000000100 R __hexdig
000000000004efc0 00000000000000bc r a1
000000000004f080 00000000000000bc r a2
000000000004f140 000000000000005b r a3
000000000004f1a0 0000000000000070 r a6
000000000004f210 00000000000000a2 r a7
000000000004f2b8 0000000000000040 r a8
000000000004f2f8 000000000000172a r b02cf
0000000000050a28 0000000000001a7c r d02f4
00000000000524a8 000000000000309c r categories
0000000000055550 r __EH_FRAME_BEGIN__
0000000000055550 R __eh_frame_hdr_end
0000000000055550 R __eh_frame_hdr_start
00000000000628a8 r __FRAME_END__
0000000000062980 a _DYNAMIC
0000000000069000 t __frame_dummy_init_array_entry
0000000000069000 T __init_array_start
0000000000069000 B __preinit_array_end
0000000000069000 B __preinit_array_start
0000000000069000 D __tdata_lma
0000000000069000 D __tdata_lma_end
0000000000069058 t __do_global_dtors_aux_fini_array_entry
0000000000069058 T __fini_array_start
0000000000069058 T __init_array_end
0000000000069060 a _GLOBAL_OFFSET_TABLE_
0000000000069060 T __fini_array_end
0000000000069060 T __got_start__
00000000000693c0 D __dso_handle
00000000000693c0 D __got_end__
00000000000693c8 0000000000000020 d g_hbl_override_config
00000000000693e8 0000000000000010 d g_default_override_key
00000000000693f8 0000000000000020 d Utils::InitializeThreadFunc(void*)::required_active_services
0000000000069418 0000000000000040 d g_module_definitions
0000000000069458 0000000000000008 D nx_inner_heap_size
0000000000069460 0000000000000004 D __nx_applet_type
0000000000069468 0000000000000050 V vtable for IStorageInterface
00000000000694b8 0000000000000050 V vtable for IROStorage
0000000000069508 0000000000000050 V vtable for ProxyStorage
0000000000069558 0000000000000050 V vtable for ROProxyStorage
00000000000695a8 0000000000000050 V vtable for IFileInterface
00000000000695f8 0000000000000050 V vtable for ProxyFile
0000000000069648 0000000000000030 V vtable for IDirectoryInterface
0000000000069678 0000000000000030 V vtable for ProxyDirectory
00000000000696a8 00000000000000a0 V vtable for IFileSystemInterface
0000000000069748 00000000000000a0 V vtable for ProxyFileSystem
00000000000697e8 0000000000000050 V vtable for RomFileStorage
0000000000069838 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<IFileInterface, std::allocator<IFileInterface>, (__gnu_cxx::_Lock_policy)2>
0000000000069870 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<IDirectoryInterface, std::allocator<IDirectoryInterface>, (__gnu_cxx::_Lock_policy)2>
00000000000698a8 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<ProxyFileSystem, std::allocator<ProxyFileSystem>, (__gnu_cxx::_Lock_policy)2>
00000000000698e0 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<IFileSystemInterface, std::allocator<IFileSystemInterface>, (__gnu_cxx::_Lock_policy)2>
0000000000069918 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<IStorageInterface, std::allocator<IStorageInterface>, (__gnu_cxx::_Lock_policy)2>
0000000000069950 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<ROProxyStorage, std::allocator<ROProxyStorage>, (__gnu_cxx::_Lock_policy)2>
0000000000069988 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<RomFileStorage, std::allocator<RomFileStorage>, (__gnu_cxx::_Lock_policy)2>
00000000000699c0 0000000000000038 V vtable for std::_Sp_counted_deleter<Service*, MitmServer<FsMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
00000000000699f8 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<FsMitmService, std::allocator<FsMitmService>, (__gnu_cxx::_Lock_policy)2>
0000000000069a30 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<IDomainObject, std::allocator<IDomainObject>, (__gnu_cxx::_Lock_policy)2>
0000000000069a68 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmSession::PostProcessHandlerContext, std::allocator<MitmSession::PostProcessHandlerContext>, (__gnu_cxx::_Lock_policy)2>
0000000000069aa0 0000000000000020 V vtable for IDomainObject
0000000000069ac0 0000000000000020 V vtable for ServiceSession::IHipcControlService
0000000000069ae0 0000000000000060 V vtable for ServiceSession
0000000000069b40 0000000000000030 V vtable for IMitmServiceObject
0000000000069b70 0000000000000020 V vtable for MitmSession::IMitmHipcControlService
0000000000069b90 0000000000000060 V vtable for MitmSession
0000000000069bf0 0000000000000030 V vtable for FsMitmService
0000000000069c20 00000000000000e0 V vtable for WaitableManager<FsMitmManagerOptions>
0000000000069d00 0000000000000038 V vtable for MitmServer<FsMitmService>
0000000000069d38 0000000000000020 V vtable for MitmQueryService<FsMitmService>
0000000000069d58 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>
0000000000069d90 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmSession::IMitmHipcControlService, std::allocator<MitmSession::IMitmHipcControlService>, (__gnu_cxx::_Lock_policy)2>
0000000000069dc8 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmQueryService<FsMitmService>, std::allocator<MitmQueryService<FsMitmService> >, (__gnu_cxx::_Lock_policy)2>
0000000000069e00 0000000000000030 V MitmQueryService<FsMitmService>::s_DispatchTable
0000000000069e30 0000000000000078 V FsMitmService::s_DispatchTable
0000000000069ea8 0000000000000180 V IFileSystemInterface::s_DispatchTable
000000000006a028 0000000000000030 V IDirectoryInterface::s_DispatchTable
000000000006a058 0000000000000090 V IFileInterface::s_DispatchTable
000000000006a0e8 0000000000000090 V IStorageInterface::s_DispatchTable
000000000006a178 0000000000000078 V MitmSession::IMitmHipcControlService::s_DispatchTable
000000000006a1f0 0000000000000078 V ServiceSession::IHipcControlService::s_DispatchTable
000000000006a268 0000000000000050 V vtable for LayeredRomFS
000000000006a2b8 0000000000000038 d vtable for std::_Sp_counted_deleter<std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*, LayeredRomFS::LayeredRomFS(std::shared_ptr<ROProxyStorage>, std::shared_ptr<RomFileStorage>, unsigned long)::{lambda(std::vector<RomFSSourceInfo, std::allocator<RomFSSourceInfo> >*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
000000000006a2f0 00000000000000a0 V vtable for SubDirectoryFileSystem
000000000006a390 0000000000000050 V vtable for Boot0Storage
000000000006a3e0 0000000000000038 V vtable for std::_Sp_counted_deleter<Service*, MitmServer<SetSysMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
000000000006a418 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<SetSysMitmService, std::allocator<SetSysMitmService>, (__gnu_cxx::_Lock_policy)2>
000000000006a450 0000000000000030 V vtable for SetSysMitmService
000000000006a480 00000000000000e0 V vtable for WaitableManager<SetSysManagerOptions>
000000000006a560 0000000000000038 V vtable for MitmServer<SetSysMitmService>
000000000006a598 0000000000000020 V vtable for MitmQueryService<SetSysMitmService>
000000000006a5b8 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmQueryService<SetSysMitmService>, std::allocator<MitmQueryService<SetSysMitmService> >, (__gnu_cxx::_Lock_policy)2>
000000000006a5f0 0000000000000030 V MitmQueryService<SetSysMitmService>::s_DispatchTable
000000000006a620 0000000000000078 V SetSysMitmService::s_DispatchTable
000000000006a698 0000000000000038 V vtable for std::_Sp_counted_deleter<Service*, MitmServer<BpcMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
000000000006a6d0 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<BpcMitmService, std::allocator<BpcMitmService>, (__gnu_cxx::_Lock_policy)2>
000000000006a708 0000000000000030 V vtable for BpcMitmService
000000000006a738 00000000000000e0 V vtable for WaitableManager<DefaultManagerOptions>
000000000006a818 0000000000000038 V vtable for MitmServer<BpcMitmService>
000000000006a850 0000000000000020 V vtable for MitmQueryService<BpcMitmService>
000000000006a870 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmQueryService<BpcMitmService>, std::allocator<MitmQueryService<BpcMitmService> >, (__gnu_cxx::_Lock_policy)2>
000000000006a8a8 0000000000000030 V MitmQueryService<BpcMitmService>::s_DispatchTable
000000000006a8d8 0000000000000030 V BpcMitmService::s_DispatchTable
000000000006a908 0000000000000004 d g_reboot_type
000000000006a910 0000000000000020 V vtable for NsDocumentService
000000000006a930 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<NsDocumentService, std::allocator<NsDocumentService>, (__gnu_cxx::_Lock_policy)2>
000000000006a968 0000000000000038 V vtable for std::_Sp_counted_deleter<Service*, MitmServer<NsWebMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
000000000006a9a0 0000000000000038 V vtable for std::_Sp_counted_deleter<Service*, MitmServer<NsAmMitmService>::HandleSignaled(unsigned long)::{lambda(Service*)#1}, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
000000000006a9d8 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<NsWebMitmService, std::allocator<NsWebMitmService>, (__gnu_cxx::_Lock_policy)2>
000000000006aa10 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<NsAmMitmService, std::allocator<NsAmMitmService>, (__gnu_cxx::_Lock_policy)2>
000000000006aa48 0000000000000030 V vtable for NsAmMitmService
000000000006aa78 0000000000000030 V vtable for NsWebMitmService
000000000006aaa8 0000000000000038 V vtable for MitmServer<NsAmMitmService>
000000000006aae0 0000000000000038 V vtable for MitmServer<NsWebMitmService>
000000000006ab18 0000000000000020 V vtable for MitmQueryService<NsAmMitmService>
000000000006ab38 0000000000000020 V vtable for MitmQueryService<NsWebMitmService>
000000000006ab58 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmQueryService<NsAmMitmService>, std::allocator<MitmQueryService<NsAmMitmService> >, (__gnu_cxx::_Lock_policy)2>
000000000006ab90 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<MitmQueryService<NsWebMitmService>, std::allocator<MitmQueryService<NsWebMitmService> >, (__gnu_cxx::_Lock_policy)2>
000000000006abc8 0000000000000030 V MitmQueryService<NsWebMitmService>::s_DispatchTable
000000000006abf8 0000000000000030 V MitmQueryService<NsAmMitmService>::s_DispatchTable
000000000006ac28 0000000000000018 V NsWebMitmService::s_DispatchTable
000000000006ac40 0000000000000048 V NsDocumentService::s_DispatchTable
000000000006ac88 0000000000000048 V NsAmMitmService::s_DispatchTable
000000000006acd0 00000000000000e0 d romFS_devoptab
000000000006adb0 0000000000000008 d currentConsole
000000000006adb8 00000000000000e0 d dotab_null
000000000006ae98 00000000000000e0 d dotab_stdout
000000000006af78 00000000000000e0 d dotab_svc
000000000006b058 0000000000000008 V __nx_exception_stack_size
000000000006b060 0000000000000008 V DW.ref.__gxx_personality_v0
000000000006b068 0000000000000008 D __cxxabiv1::__terminate_handler
000000000006b070 0000000000000018 V typeinfo for std::bad_alloc
000000000006b088 0000000000000028 V vtable for std::bad_alloc
000000000006b0b0 0000000000000010 V typeinfo for std::exception
000000000006b0c0 0000000000000018 V typeinfo for std::bad_exception
000000000006b0d8 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
000000000006b0e8 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
000000000006b0f8 0000000000000028 V vtable for std::bad_exception
000000000006b120 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
000000000006b138 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
000000000006b150 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
000000000006b178 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
000000000006b1a0 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
000000000006b1b8 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
000000000006b210 0000000000000008 D __cxxabiv1::__unexpected_handler
000000000006b218 0000000000000010 V typeinfo for std::type_info
000000000006b228 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
000000000006b240 0000000000000058 V vtable for __cxxabiv1::__class_type_info
000000000006b298 0000000000000018 V typeinfo for std::logic_error
000000000006b2b0 0000000000000018 V typeinfo for std::length_error
000000000006b2c8 0000000000000028 V vtable for std::logic_error
000000000006b2f0 0000000000000028 V vtable for std::length_error
000000000006b318 0000000000000008 D _impure_ptr
000000000006b320 0000000000000768 d impure_data
000000000006ba88 0000000000000008 D _global_impure_ptr
000000000006ba90 0000000000000008 D __malloc_sbrk_base
000000000006ba98 0000000000000008 D __malloc_trim_threshold
000000000006baa0 0000000000000810 D __malloc_av_
000000000006c2b0 00000000000001a8 D __global_locale
000000000006c458 0000000000000002 d numempty
000000000006c460 0000000000000018 D _C_numeric_locale
000000000006c478 0000000000000004 d defaultDevice
000000000006c480 0000000000000080 D devoptab_list
000000000006c500 00000000000000e0 D dotab_stdnull
000000000006c5e0 0000000000000010 d __stderr_handle
000000000006c5f0 0000000000000010 d __stdin_handle
000000000006c600 0000000000000010 d __stdout_handle
000000000006c610 0000000000002000 d handles
000000000006e610 D __TMC_END__
000000000006e610 D __bss_start__
000000000006e610 b completed.7870
000000000006e618 b object.7875
000000000006e648 000000000000000c b g_sd_filesystem
000000000006e658 0000000000000001 b g_has_initialized
000000000006e660 000000000000000c b g_sd_signal
000000000006e670 0000000000000001 b g_has_hid_session
000000000006e678 0000000000000800 b g_config_ini_data
000000000006ee78 000000000000000c b g_cal0_file
000000000006ee88 0000000000000018 b g_mitm_flagged_tids
000000000006eea0 0000000000000018 b g_disable_mitm_flagged_tids
000000000006eeb8 0000000000008000 b g_cal0_backup
0000000000076eb8 0000000000008000 b g_cal0_storage_backup
000000000007eeb8 00000000000000e0 b g_module_threads
000000000007ef98 0000000001000000 B nx_inner_heap
000000000107ef98 0000000000000004 b g_StorageCacheLock
000000000107efa0 0000000000000038 b g_StorageCache
000000000107efd8 0000000000000001 V FsMitmService::ShouldMitm(unsigned long, unsigned long)::has_launched_qlaunch
000000000107efe0 0000000000000004 b g_boot0_mutex
000000000107efe8 00000000000fc000 b g_boot0_bct_buffer
000000000117afe8 0000000000000001 b g_threw_fatal
000000000117aff0 0000000000000038 b g_fatal_thread
000000000117b028 0000000000000030 B g_settings_items[abi:cxx11]
000000000117b058 0000000000000100 b g_fw_version
000000000117b158 0000000000000100 b g_ams_fw_version
000000000117b258 0000000000000001 b g_got_version
000000000117b260 0000000000000004 b g_version_mutex
000000000117c000 0000000000000001 b g_payload_loaded
000000000117d000 0000000000001000 b g_work_page
000000000117e000 000000000002f000 b g_reboot_payload
00000000011ad000 0000000000000004 b g_pid_tid_mutex
00000000011ad008 0000000000000018 b g_known_pids
00000000011ad020 0000000000000018 b g_known_tids
00000000011ad038 0000000000000001 b g_HasCached
00000000011ad03c 0000000000000004 b g_Mutex
00000000011ad040 0000000000000004 b g_firmware_version
00000000011ad048 0000000000000004 b g_server_query_mutex
00000000011ad050 0000000000000008 b g_server_query_manager
00000000011ad058 0000000000000038 b g_server_query_manager_thread
00000000011ad090 0000000000000008 b g_refCnt
00000000011ad098 0000000000000004 b g_smMitmHandle
00000000011ad0a0 0000000000000008 b g_threadList
00000000011ad0a8 0000000000000004 b g_threadMutex
00000000011ad0b0 00000000000000e0 b g_tlsDestructors
00000000011ad190 0000000000000008 b g_tlsUsageMask
00000000011ad198 0000000000000050 b g_controllerDown
00000000011ad1e8 00000000000001e0 b g_controllerEntries
00000000011ad3c8 0000000000000190 b g_controllerHeaders
00000000011ad558 0000000000000050 b g_controllerHeld
00000000011ad5a8 0000000000000028 b g_controllerLayout
00000000011ad5d0 0000000000000050 b g_controllerOld
00000000011ad620 0000000000000004 b g_controllerP1AutoID
00000000011ad628 0000000000000050 b g_controllerTimestamps
00000000011ad678 0000000000000050 b g_controllerUp
00000000011ad6c8 000000000000000c b g_hidIAppletResource
00000000011ad6d8 0000000000000010 b g_hidLock
00000000011ad6e8 0000000000000020 b g_hidSharedmem
00000000011ad708 000000000000000c b g_hidSrv
00000000011ad718 0000000000000020 b g_keyboardDown
00000000011ad738 0000000000000038 b g_keyboardEntry
00000000011ad770 0000000000000020 b g_keyboardHeld
00000000011ad790 0000000000000008 b g_keyboardModDown
00000000011ad798 0000000000000008 b g_keyboardModHeld
00000000011ad7a0 0000000000000008 b g_keyboardModOld
00000000011ad7a8 0000000000000008 b g_keyboardModUp
00000000011ad7b0 0000000000000020 b g_keyboardOld
00000000011ad7d0 0000000000000008 b g_keyboardTimestamp
00000000011ad7d8 0000000000000020 b g_keyboardUp
00000000011ad7f8 0000000000000400 b g_mouse
00000000011adbf8 0000000000000008 b g_mouseDown
00000000011adc00 0000000000000008 b g_mouseEntry
00000000011adc08 0000000000000008 b g_mouseHeld
00000000011adc10 0000000000000008 b g_mouseOld
00000000011adc18 0000000000000008 b g_mouseTimestamp
00000000011adc20 0000000000000008 b g_mouseUp
00000000011adc28 0000000000000008 b g_refCnt
00000000011adc30 000000000000000a b g_sixaxisEnabled
00000000011adc40 0000000000004650 b g_sixaxisLayouts
00000000011b2290 0000000000000298 b g_touchEntry
00000000011b2528 0000000000000008 b g_touchTimestamp
00000000011b2530 000000000000000c b g_nsAppManSrv
00000000011b2540 000000000000000c b g_nsGetterSrv
00000000011b2550 0000000000000008 b g_nsRefCnt
00000000011b2558 0000000000000008 b g_refCnt
00000000011b2560 0000000000000004 b g_smHandle
00000000011b2568 0000000000000200 b g_smOverrides
00000000011b2768 0000000000000008 b g_smOverridesNum
00000000011b2770 000000000000000c b g_fsSrv
00000000011b2780 0000000000000008 b g_refCnt
00000000011b2788 0000000000000008 b g_refCntSys
00000000011b2790 000000000000000c b g_setsysSrv
00000000011b279c 0000000000000004 b g_hosVersion
00000000011b27a0 0000000000000001 b romfs_initialised
00000000011b27a8 0000000000003600 b romfs_mounts
00000000011b5da8 0000000000000058 b currentCopy
00000000011b5e00 0000000000000004 b g_Version
00000000011b5e04 0000000000000001 b g_VersionCached
00000000011b5e08 0000000000000004 b g_VersionMutex
00000000011b5e10 0000000000000010 b g_AddressSpace
00000000011b5e20 0000000000000008 b g_CurrentAddr
00000000011b5e28 0000000000000008 b g_CurrentMapAddr
00000000011b5e30 0000000000000030 b g_Region
00000000011b5e60 0000000000000004 b g_VirtMemMutex
00000000011b5e68 0000000000000008 b g_appletResourceUserId
00000000011b5e70 000000000000000c b g_appletSrv
00000000011b5e7c 0000000000000001 b g_hasRandomSeed
00000000011b5e7d 0000000000000001 b g_isNso
00000000011b5e80 0000000000000004 b g_lastLoadResult
00000000011b5e88 0000000000000008 b g_loaderRetAddr
00000000011b5e90 0000000000000004 b g_mainThreadHandle
00000000011b5e98 0000000000000008 b g_nextLoadArgv
00000000011b5ea0 0000000000000008 b g_nextLoadPath
00000000011b5ea8 0000000000000008 b g_overrideArgv
00000000011b5eb0 0000000000000008 b g_overrideHeapAddr
00000000011b5eb8 0000000000000008 b g_overrideHeapSize
00000000011b5ec0 0000000000000004 b g_processHandle
00000000011b5ec8 0000000000000010 b g_randomSeed
00000000011b5ed8 0000000000000010 b g_syscallHints
00000000011b5ee8 0000000000000004 V __nx_exception_ignoredebug
00000000011b5ef0 0000000000000400 V __nx_exception_stack
00000000011b62f0 0000000000000008 b g_argv_empty
00000000011b62f8 0000000000000008 b (anonymous namespace)::__new_handler
00000000011b6300 0000000000000028 b (anonymous namespace)::emergency_pool
00000000011b6328 0000000000000010 b eh_globals
00000000011b6338 0000000000000008 b init
00000000011b6340 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
00000000011b6360 0000000000000062 b dwarf_reg_size_table
00000000011b63c8 0000000000000004 b once_regsizes.9756
00000000011b63d0 0000000000000008 b marker.9297
00000000011b63d8 0000000000000010 b object_mutex
00000000011b63e8 0000000000000008 b seen_objects
00000000011b63f0 0000000000000008 b unseen_objects
00000000011b63f8 000000000000000c b __sfp_recursive_mutex
00000000011b6408 000000000000000c b __sinit_recursive_mutex
00000000011b6418 0000000000000028 B __malloc_current_mallinfo
00000000011b6440 0000000000000008 B __malloc_max_sbrked_mem
00000000011b6448 0000000000000008 B __malloc_max_total_mem
00000000011b6450 0000000000000008 B __malloc_top_pad
00000000011b6458 000000000000000c b __malloc_recursive_mutex
00000000011b6468 000000000000000c B __atexit_recursive_mutex
00000000011b6478 0000000000000008 b heap_start.5295
00000000011b6480 0000000000000008 B fake_heap_end
00000000011b6488 0000000000000008 B fake_heap_start
00000000011b6490 0000000000000004 b __hndl_lock
00000000011b6494 0000000000000004 b __pthread_once_cv
00000000011b6498 0000000000000004 b __pthread_once_lock
00000000011b64a0 0000000000000340 B __nx_exceptiondump
00000000011b67e0 0000000000000008 B __stack_top
00000000011b67e8 0000000000000008 B __system_argv
00000000011b67f0 0000000000000004 B __system_argc
00000000011b67f8 0000000000000004 B __nxlink_host
00000000011b6800 B __tls_start
00000000011b6c08 B __bss_end__
00000000011b6c08 A __end__
00000000011b6c08 B __tls_end
00000000011b7000 A __argdata__
