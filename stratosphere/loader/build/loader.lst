0000000000000000 b _TLS_MODULE_BASE_
0000000000000000 0000000000000401 b __fixedpath
0000000000000000 A __start__
0000000000000000 T _start
0000000000000080 t startup
00000000000000a4 t bssclr_start
00000000000000cc t bss_loop
0000000000000120 T __nx_exit
0000000000000130 T __nx_mod0
0000000000000150 T _init
00000000000001c0 000000000000000c W IWaitable::HandleDeferred()
00000000000001d0 0000000000000038 T exit
0000000000000210 000000000000006c t _GLOBAL__sub_I__ZN17ContentManagement9MountCodeEm11FsStorageId
0000000000000280 0000000000000218 T main
0000000000000408 0000000000002000 b tmp_buffer.7237
0000000000000498 0000000000000054 t _GLOBAL__sub_I_eh_alloc.cc
00000000000004f0 0000000000000054 t _GLOBAL__sub_I_eh_globals.cc
0000000000000548 t deregister_tm_clones
0000000000000578 t register_tm_clones
00000000000005b0 t __do_global_dtors_aux
00000000000005f8 t frame_dummy
0000000000000630 00000000000000cc T MapUtils::LocateSpaceForMapDeprecated(unsigned long*, unsigned long)
0000000000000700 00000000000000ec T MapUtils::MapCodeMemoryForProcessDeprecated(unsigned int, bool, unsigned long, unsigned long, unsigned long*)
00000000000007f0 00000000000000d8 T MapUtils::GetAddressSpaceInfo(MapUtils::AddressSpaceInfo*, unsigned int)
00000000000008d0 000000000000015c T MapUtils::LocateSpaceForMapModern(unsigned long*, unsigned long)
0000000000000a30 0000000000000040 T MapUtils::LocateSpaceForMap(unsigned long*, unsigned long)
0000000000000a70 0000000000000130 T MapUtils::MapCodeMemoryForProcessModern(unsigned int, unsigned long, unsigned long, unsigned long*)
0000000000000ba0 0000000000000074 T MapUtils::MapCodeMemoryForProcess(unsigned int, bool, unsigned long, unsigned long, unsigned long*)
0000000000000c20 000000000000001c T ShellService::AddTitleToLaunchQueue(unsigned long, InPointer<char>, unsigned int)
0000000000000c40 0000000000000004 T ShellService::ClearLaunchQueue()
0000000000000c50 0000000000000070 T ShellService::SetExternalContentSource(Out<MovedHandle, void>, unsigned long)
0000000000000cc0 0000000000000008 T ShellService::ClearExternalContentSource(unsigned long)
0000000000000cd0 000000000000005c T NpdmUtils::OpenNpdmFromECS(ContentManagement::ExternalContentSource*)
0000000000000d30 0000000000000044 T NpdmUtils::OpenNpdmFromHBL()
0000000000000d80 000000000000003c T NpdmUtils::OpenNpdmFromExeFS()
0000000000000dc0 000000000000005c T NpdmUtils::OpenNpdmFromSdCard(unsigned long)
0000000000000e20 0000000000000074 T NpdmUtils::OpenNpdm(unsigned long)
0000000000000ea0 000000000000027c T NpdmUtils::LoadNpdmInternal(__sFILE*, NpdmUtils::NpdmCache*)
0000000000001120 0000000000000220 T NpdmUtils::LoadNpdm(unsigned long, NpdmUtils::NpdmInfo*)
0000000000001340 0000000000000048 T NpdmUtils::LoadNpdmFromCache(unsigned long, NpdmUtils::NpdmInfo*)
0000000000001390 00000000000004a0 T NpdmUtils::ValidateCapabilityAgainstRestrictions(unsigned int*, unsigned long, unsigned int*&, unsigned long&)
0000000000001830 0000000000000050 T NpdmUtils::ValidateCapabilities(unsigned int*, unsigned long, unsigned int*, unsigned long)
0000000000001880 00000000000000dc T NpdmUtils::GetApplicationType(unsigned int*, unsigned long)
0000000000001960 0000000000000030 T NpdmUtils::InvalidateCache(unsigned long)
0000000000001990 0000000000000290 t ApplyIpsPatch(unsigned char*, unsigned long, bool, __sFILE*)
0000000000001c20 000000000000039c T PatchUtils::ApplyPatches(NsoUtils::NsoHeader const*, unsigned char*, unsigned long)
0000000000001fc0 0000000000000010 W MappedCodeMemory::IsActive()
0000000000001fd0 0000000000000050 T Registration::GetProcess(unsigned long)
0000000000002020 0000000000000050 T Registration::GetProcessByProcessId(unsigned long)
0000000000002070 000000000000007c T Registration::UnregisterIndex(unsigned long)
00000000000020f0 000000000000005c T Registration::GetRegisteredTidSid(unsigned long, Registration::TidSid*)
0000000000002150 0000000000000054 T Registration::SetProcessIdTidAndIs64BitAddressSpace(unsigned long, unsigned long, unsigned long, bool)
00000000000021b0 00000000000001c0 T Registration::AddNsoInfo(unsigned long, unsigned long, unsigned long, unsigned char const*)
0000000000002370 0000000000000118 T Registration::CloseRoService(void*, unsigned int)
0000000000002408 0000000000002000 b tmp_buffer.7261
0000000000002490 0000000000000120 T Registration::RemoveNrrInfo(unsigned long, unsigned long)
00000000000025b0 0000000000000134 T Registration::IsNroHashPresent(unsigned long, unsigned char*)
00000000000026f0 00000000000000bc T Registration::IsNroAlreadyLoaded(unsigned long, unsigned char*)
00000000000027b0 00000000000001f8 T Registration::AddNroToProcess(unsigned long, MappedCodeMemory*, MappedCodeMemory*, unsigned int, unsigned int, unsigned int, unsigned char*)
00000000000029b0 000000000000015c T Registration::RemoveNroInfo(unsigned long, unsigned int, unsigned long)
0000000000002b10 00000000000000b8 T Registration::GetNsoInfosForProcessId(Registration::NsoInfo*, unsigned int, unsigned long, unsigned int*)
0000000000002bd0 000000000000018c T Registration::AssociatePidTidForMitM(unsigned long)
0000000000002d60 0000000000000154 W Registration::Process* std::__find_if<Registration::Process*, __gnu_cxx::__ops::_Iter_negate<std::_Mem_fn<bool Registration::Process::*> > >(Registration::Process*, Registration::Process*, __gnu_cxx::__ops::_Iter_negate<std::_Mem_fn<bool Registration::Process::*> >, std::random_access_iterator_tag)
0000000000002ec0 00000000000000a4 T Registration::RegisterTidSid(Registration::TidSid const*, unsigned long*)
0000000000002f70 0000000000000258 W MappedCodeMemory* std::__find_if<MappedCodeMemory*, __gnu_cxx::__ops::_Iter_negate<std::_Mem_fn<bool (MappedCodeMemory::*)()> > >(MappedCodeMemory*, MappedCodeMemory*, __gnu_cxx::__ops::_Iter_negate<std::_Mem_fn<bool (MappedCodeMemory::*)()> >, std::random_access_iterator_tag)
00000000000031d0 00000000000000c0 T Registration::AddNrrInfo(unsigned long, MappedCodeMemory*)
0000000000003290 0000000000000160 T NsoUtils::OpenNsoFromECS(unsigned int, ContentManagement::ExternalContentSource*)
00000000000033f0 000000000000015c T NsoUtils::OpenNsoFromHBL(unsigned int)
0000000000003550 000000000000015c T NsoUtils::OpenNsoFromExeFS(unsigned int)
00000000000036b0 0000000000000160 T NsoUtils::OpenNsoFromSdCard(unsigned int, unsigned long)
0000000000003810 0000000000000178 T NsoUtils::CheckNsoStubbed(unsigned int, unsigned long)
0000000000003990 00000000000000b8 T NsoUtils::OpenNso(unsigned int, unsigned long)
0000000000003a50 0000000000000014 T NsoUtils::IsNsoPresent(unsigned int)
0000000000003a70 000000000000002c T NsoUtils::GetNsoBuildId(unsigned int)
0000000000003aa0 0000000000000118 T NsoUtils::LoadNsoHeaders(unsigned long)
0000000000003bc0 0000000000000094 T NsoUtils::ValidateNsoLoadSet()
0000000000003c60 00000000000001fc T NsoUtils::CalculateNsoLoadExtents(unsigned int, unsigned int, NsoUtils::NsoLoadExtents*)
0000000000003e60 00000000000001d4 T NsoUtils::LoadNsoSegment(unsigned long, unsigned int, unsigned int, __sFILE*, unsigned char*, unsigned char*)
0000000000004040 0000000000000340 T NsoUtils::LoadNsosIntoProcessMemory(unsigned int, unsigned long, NsoUtils::NsoLoadExtents*, unsigned char*, unsigned int)
0000000000004380 00000000000000f4 T ProcessManagerService::CreateProcess(Out<MovedHandle, void>, unsigned long, unsigned int, CopiedHandle)
0000000000004480 0000000000000028 T ProcessManagerService::RegisterTitle(Out<unsigned long, void>, Registration::TidSid)
00000000000044b0 0000000000000024 T ProcessManagerService::UnregisterTitle(unsigned long)
00000000000044e0 00000000000001a0 T ProcessManagerService::PopulateProgramInfoBuffer(ProcessManagerService::ProgramInfo*, Registration::TidSid*)
0000000000004680 00000000000000bc T ProcessManagerService::GetProgramInfo(OutPointerWithServerSize<ProcessManagerService::ProgramInfo, 1ul>, Registration::TidSid)
0000000000004740 00000000000001f8 T ProcessCreation::InitializeProcessInfo(NpdmUtils::NpdmInfo*, unsigned int, unsigned long, ProcessCreation::ProcessInfo*)
0000000000004940 0000000000000384 T ProcessCreation::CreateProcess(unsigned int*, unsigned long, char*, LaunchQueue::LaunchItem*, unsigned long, unsigned int)
0000000000004cd0 0000000000000070 T HidManagement::GetKeysHeld(unsigned long*)
0000000000004d40 0000000000000010 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0000000000004d40 0000000000000010 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0000000000004d50 0000000000000210 t ParseOverrideKey(char const*)
0000000000004f60 0000000000000088 t LoaderTitleSpecificIniHandler(void*, char const*, char const*, char const*)
0000000000004ff0 0000000000000250 t LoaderIniHandler(void*, char const*, char const*, char const*)
0000000000005240 000000000000005c t ShouldOverrideContents(OverrideKey*) [clone .isra.8]
00000000000052a0 0000000000000034 t ipcCloseObjectById
00000000000052e0 0000000000000064 T ContentManagement::UnmountCode()
0000000000005350 00000000000000c0 T ContentManagement::TryMountHblNspOnSd()
0000000000005410 00000000000000b4 T ContentManagement::MountCodeNspOnSd(unsigned long)
00000000000054d0 00000000000001ec T ContentManagement::ResolveContentPath(char*, unsigned long, FsStorageId)
00000000000056c0 0000000000000010 T ContentManagement::ResolveContentPathForTidSid(char*, Registration::TidSid*)
00000000000056d0 00000000000000bc T ContentManagement::RedirectContentPath(char const*, unsigned long, FsStorageId)
0000000000005790 0000000000000130 T ContentManagement::RedirectHtmlDocumentPathForHbl(unsigned long, FsStorageId)
00000000000058c0 0000000000000150 T ContentManagement::HasCreatedTitle(unsigned long)
0000000000005a10 000000000000008c T ContentManagement::RefreshConfigurationData()
0000000000005aa0 00000000000000e4 T ContentManagement::TryMountSdCard()
0000000000005b90 0000000000000098 T ContentManagement::GetTitleOverrideKey(unsigned long)
0000000000005c30 00000000000000a8 T ContentManagement::ShouldOverrideContentsWithHBL(unsigned long)
0000000000005ce0 000000000000007c T ContentManagement::ShouldOverrideContentsWithSD(unsigned long)
0000000000005d60 000000000000013c T ContentManagement::MountCode(unsigned long, FsStorageId)
0000000000005ea0 0000000000000010 T ContentManagement::MountCodeForTidSid(Registration::TidSid*)
0000000000005eb0 0000000000000064 T ContentManagement::GetExternalContentSource(unsigned long)
0000000000005f20 00000000000000a8 T ContentManagement::ClearExternalContentSource(unsigned long)
0000000000005fd0 0000000000000058 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, ContentManagement::ExternalContentSource>, std::_Select1st<std::pair<unsigned long const, ContentManagement::ExternalContentSource> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ContentManagement::ExternalContentSource> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ContentManagement::ExternalContentSource> >*)
0000000000006030 0000000000000008 W std::map<unsigned long, ContentManagement::ExternalContentSource, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ContentManagement::ExternalContentSource> > >::~map()
0000000000006030 0000000000000008 W std::map<unsigned long, ContentManagement::ExternalContentSource, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ContentManagement::ExternalContentSource> > >::~map()
0000000000006040 0000000000000120 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0000000000006160 0000000000000058 T ContentManagement::SetCreatedTitle(unsigned long)
00000000000061c0 0000000000000180 W std::pair<std::_Rb_tree_iterator<std::pair<unsigned long const, ContentManagement::ExternalContentSource> >, bool> std::_Rb_tree<unsigned long, std::pair<unsigned long const, ContentManagement::ExternalContentSource>, std::_Select1st<std::pair<unsigned long const, ContentManagement::ExternalContentSource> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ContentManagement::ExternalContentSource> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<unsigned long>, std::tuple<unsigned long, char*> >(std::piecewise_construct_t const&, std::tuple<unsigned long>&&, std::tuple<unsigned long, char*>&&)
0000000000006340 00000000000000c4 T ContentManagement::SetExternalContentSource(unsigned long, FsFileSystem)
0000000000006410 00000000000000a4 T RandomUtils::GetNext()
00000000000064c0 0000000000000034 T RandomUtils::GetRandomU64(unsigned long)
0000000000006500 0000000000000044 T NroUtils::ValidateNrrHeader(NroUtils::NrrHeader*, unsigned long, unsigned long)
0000000000006550 0000000000000568 T NroUtils::LoadNro(Registration::Process*, unsigned int, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long*)
0000000000006ac0 0000000000000084 t LaunchQueue::Add(unsigned long, char const*, unsigned long) [clone .part.1]
0000000000006b50 0000000000000014 T LaunchQueue::Add(unsigned long, char const*, unsigned long)
0000000000006b70 000000000000015c T LaunchQueue::GetIndex(unsigned long)
0000000000006cd0 000000000000006c T LaunchQueue::AddCopy(unsigned long, unsigned long)
0000000000006d40 000000000000002c T LaunchQueue::Clear()
0000000000006d70 0000000000000034 T LaunchQueue::GetItem(unsigned long)
0000000000006db0 000000000000001c T DebugMonitorService::AddTitleToLaunchQueue(unsigned long, InPointer<char>, unsigned int)
0000000000006dd0 0000000000000004 T DebugMonitorService::ClearLaunchQueue()
0000000000006de0 000000000000006c T DebugMonitorService::GetNsoInfo(Out<unsigned int, void>, OutPointerWithClientSize<Registration::NsoInfo>, unsigned long)
0000000000006e50 0000000000000254 t ipcPrepareHeader
00000000000070b0 0000000000000008 W ServiceSession::GetHandle()
00000000000070c0 0000000000000004 W ServiceSession::PreProcessRequest(IpcResponseContext*)
00000000000070d0 0000000000000004 W ServiceSession::PostProcessResponse(IpcResponseContext*)
00000000000070e0 0000000000000004 W ServiceSession::IHipcControlService::~IHipcControlService()
00000000000070e0 0000000000000004 W ServiceSession::IHipcControlService::~IHipcControlService()
00000000000070f0 0000000000000004 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000070f0 0000000000000004 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007100 0000000000000018 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000007120 0000000000000008 W IServer<RelocatableObjectsService>::GetHandle()
0000000000007130 0000000000000008 W IServer<DebugMonitorService>::GetHandle()
0000000000007140 0000000000000008 W IServer<ShellService>::GetHandle()
0000000000007150 0000000000000008 W IServer<ProcessManagerService>::GetHandle()
0000000000007160 0000000000000004 W ShellService::~ShellService()
0000000000007160 0000000000000004 W ShellService::~ShellService()
0000000000007170 0000000000000004 W DebugMonitorService::~DebugMonitorService()
0000000000007170 0000000000000004 W DebugMonitorService::~DebugMonitorService()
0000000000007180 0000000000000004 W ProcessManagerService::~ProcessManagerService()
0000000000007180 0000000000000004 W ProcessManagerService::~ProcessManagerService()
0000000000007190 0000000000000004 W std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007190 0000000000000004 W std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000071a0 0000000000000004 W std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000071b0 0000000000000018 W std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
00000000000071d0 0000000000000004 W std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000071d0 0000000000000004 W std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
00000000000071e0 0000000000000004 W std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
00000000000071f0 0000000000000018 W std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000007210 0000000000000004 W std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007210 0000000000000004 W std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007220 0000000000000004 W std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000007230 0000000000000018 W std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000007250 0000000000000004 W std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007250 0000000000000004 W std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007260 0000000000000018 W std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
0000000000007280 00000000000000f8 W WaitableManager<LoaderServerOptions>::~WaitableManager()
0000000000007280 00000000000000f8 W WaitableManager<LoaderServerOptions>::~WaitableManager()
0000000000007380 0000000000000004 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
0000000000007390 0000000000000004 W std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000073a0 0000000000000004 W std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000073b0 0000000000000004 W std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000073c0 0000000000000004 W std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
00000000000073d0 0000000000000028 W WaitableManager<LoaderServerOptions>::FreeDomain(IDomainObject*)
0000000000007400 0000000000000028 W non-virtual thunk to WaitableManager<LoaderServerOptions>::FreeDomain(IDomainObject*)
0000000000007430 0000000000000034 W WaitableManager<LoaderServerOptions>::ReserveObject(IDomainObject*, unsigned int*)
0000000000007470 0000000000000034 W non-virtual thunk to WaitableManager<LoaderServerOptions>::ReserveObject(IDomainObject*, unsigned int*)
00000000000074b0 0000000000000038 W WaitableManager<LoaderServerOptions>::CancelSynchronization()
00000000000074f0 0000000000000038 W WaitableManager<LoaderServerOptions>::AllocateDomain()
0000000000007530 0000000000000034 W non-virtual thunk to WaitableManager<LoaderServerOptions>::AllocateDomain()
0000000000007570 0000000000000044 W WaitableManager<LoaderServerOptions>::GetObject(IDomainObject*, unsigned int)
00000000000075c0 0000000000000044 W non-virtual thunk to WaitableManager<LoaderServerOptions>::GetObject(IDomainObject*, unsigned int)
0000000000007610 0000000000000048 W WaitableManager<LoaderServerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
0000000000007660 0000000000000048 W non-virtual thunk to WaitableManager<LoaderServerOptions>::ReserveSpecificObject(IDomainObject*, unsigned int)
00000000000076b0 000000000000004c W ServiceSession::HandleDeferred()
0000000000007700 0000000000000008 W ServiceSession::IHipcControlService::~IHipcControlService()
0000000000007710 0000000000000008 W ProcessManagerService::~ProcessManagerService()
0000000000007720 0000000000000008 W ShellService::~ShellService()
0000000000007730 0000000000000008 W DebugMonitorService::~DebugMonitorService()
0000000000007740 0000000000000008 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007750 0000000000000008 W std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007760 0000000000000008 W std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007770 0000000000000008 W std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007780 0000000000000008 W std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0000000000007790 0000000000000048 W RelocatableObjectsService::~RelocatableObjectsService()
0000000000007790 0000000000000048 W RelocatableObjectsService::~RelocatableObjectsService()
00000000000077e0 0000000000000020 W IServer<RelocatableObjectsService>::~IServer()
00000000000077e0 0000000000000020 W IServer<RelocatableObjectsService>::~IServer()
0000000000007800 0000000000000050 W IServer<RelocatableObjectsService>::~IServer()
0000000000007850 0000000000000020 W ServiceServer<RelocatableObjectsService>::~ServiceServer()
0000000000007850 0000000000000020 W ServiceServer<RelocatableObjectsService>::~ServiceServer()
0000000000007870 0000000000000050 W ServiceServer<RelocatableObjectsService>::~ServiceServer()
00000000000078c0 0000000000000020 W IServer<DebugMonitorService>::~IServer()
00000000000078c0 0000000000000020 W IServer<DebugMonitorService>::~IServer()
00000000000078e0 0000000000000050 W IServer<DebugMonitorService>::~IServer()
0000000000007930 0000000000000020 W ServiceServer<DebugMonitorService>::~ServiceServer()
0000000000007930 0000000000000020 W ServiceServer<DebugMonitorService>::~ServiceServer()
0000000000007950 0000000000000050 W ServiceServer<DebugMonitorService>::~ServiceServer()
00000000000079a0 0000000000000020 W IServer<ShellService>::~IServer()
00000000000079a0 0000000000000020 W IServer<ShellService>::~IServer()
00000000000079c0 0000000000000050 W IServer<ShellService>::~IServer()
0000000000007a10 0000000000000020 W ServiceServer<ShellService>::~ServiceServer()
0000000000007a10 0000000000000020 W ServiceServer<ShellService>::~ServiceServer()
0000000000007a30 0000000000000050 W ServiceServer<ShellService>::~ServiceServer()
0000000000007a80 0000000000000020 W IServer<ProcessManagerService>::~IServer()
0000000000007a80 0000000000000020 W IServer<ProcessManagerService>::~IServer()
0000000000007aa0 0000000000000050 W IServer<ProcessManagerService>::~IServer()
0000000000007af0 0000000000000020 W ServiceServer<ProcessManagerService>::~ServiceServer()
0000000000007af0 0000000000000020 W ServiceServer<ProcessManagerService>::~ServiceServer()
0000000000007b10 0000000000000050 W ServiceServer<ProcessManagerService>::~ServiceServer()
0000000000007b60 0000000000000010 W ServiceSession::CleanupResponse(IpcResponseContext*)
0000000000007b70 0000000000000050 W IWaitable::Compare(IWaitable*, IWaitable*)
0000000000007bc0 0000000000000174 W ServiceSession::GetResponse(IpcResponseContext*)
0000000000007d40 0000000000000024 W std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000007d70 0000000000000050 W std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
0000000000007dc0 000000000000005c W RelocatableObjectsService::~RelocatableObjectsService()
0000000000007e20 0000000000000060 W WaitableManager<LoaderServerOptions>::RequestStop()
0000000000007e80 00000000000000b0 W WaitableManager<LoaderServerOptions>::NotifySignaled(IWaitable*)
0000000000007f30 0000000000000048 W non-virtual thunk to WaitableManager<LoaderServerOptions>::FreeObject(IDomainObject*, unsigned int)
0000000000007f80 0000000000000048 W WaitableManager<LoaderServerOptions>::FreeObject(IDomainObject*, unsigned int)
0000000000007fd0 000000000000003c W non-virtual thunk to WaitableManager<LoaderServerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
0000000000008010 000000000000003c W WaitableManager<LoaderServerOptions>::SetObject(IDomainObject*, unsigned int, ServiceObjectHolder&&)
0000000000008050 0000000000000048 W non-virtual thunk to WaitableManager<LoaderServerOptions>::ForceFreeObject(unsigned int)
00000000000080a0 0000000000000048 W WaitableManager<LoaderServerOptions>::ForceFreeObject(unsigned int)
00000000000080f0 000000000000010c W ServiceSession::~ServiceSession()
0000000000008200 0000000000000100 W WaitableManager<LoaderServerOptions>::~WaitableManager()
0000000000008300 000000000000010c W ServiceSession::~ServiceSession()
0000000000008300 000000000000010c W ServiceSession::~ServiceSession()
0000000000008410 00000000000002b0 t ipcPrepareHeaderForDomain.constprop.524
00000000000086c0 00000000000003c8 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::ConvertCurrentObjectToDomain>(IpcResponseContext*)
0000000000008a90 00000000000001cc W unsigned int WrapIpcCommandImpl<&ShellService::SetExternalContentSource>(IpcResponseContext*)
0000000000008c60 00000000000001c4 W unsigned int WrapIpcCommandImpl<&RelocatableObjectsService::Initialize>(IpcResponseContext*)
0000000000008e30 00000000000001bc W unsigned int WrapIpcCommandImpl<&RelocatableObjectsService::LoadNrr>(IpcResponseContext*)
0000000000008ff0 00000000000001dc W unsigned int WrapIpcCommandImpl<&ProcessManagerService::RegisterTitle>(IpcResponseContext*)
00000000000091d0 0000000000000254 W unsigned int WrapIpcCommandImpl<&DebugMonitorService::GetNsoInfo>(IpcResponseContext*)
0000000000009430 00000000000001ec W unsigned int WrapIpcCommandImpl<&ProcessManagerService::GetProgramInfo>(IpcResponseContext*)
0000000000009620 00000000000001e0 W unsigned int WrapIpcCommandImpl<&ProcessManagerService::CreateProcess>(IpcResponseContext*)
0000000000009800 00000000000001ec W unsigned int WrapIpcCommandImpl<&RelocatableObjectsService::LoadNro>(IpcResponseContext*)
00000000000099f0 00000000000001bc W unsigned int WrapIpcCommandImpl<&RelocatableObjectsService::UnloadNro>(IpcResponseContext*)
0000000000009bb0 0000000000000254 W unsigned int WrapIpcCommandImpl<&DebugMonitorService::AddTitleToLaunchQueue>(IpcResponseContext*)
0000000000009e10 0000000000000254 W unsigned int WrapIpcCommandImpl<&ShellService::AddTitleToLaunchQueue>(IpcResponseContext*)
000000000000a070 00000000000001bc W unsigned int WrapIpcCommandImpl<&RelocatableObjectsService::UnloadNrr>(IpcResponseContext*)
000000000000a230 0000000000000af8 W ServiceSession::HandleReceived()
000000000000ad30 0000000000000148 W unsigned int WrapIpcCommandImpl<&DebugMonitorService::ClearLaunchQueue>(IpcResponseContext*)
000000000000ae80 0000000000000148 W unsigned int WrapIpcCommandImpl<&ShellService::ClearLaunchQueue>(IpcResponseContext*)
000000000000afd0 00000000000003e0 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::QueryPointerBufferSize>(IpcResponseContext*)
000000000000b3b0 000000000000015c W unsigned int WrapIpcCommandImpl<&ShellService::ClearExternalContentSource>(IpcResponseContext*)
000000000000b510 00000000000001ac W unsigned int WrapIpcCommandImpl<&ProcessManagerService::UnregisterTitle>(IpcResponseContext*)
000000000000b6c0 00000000000000ac W ServiceSession::Receive()
000000000000b770 000000000000003c W ServiceSession::HandleSignaled(unsigned long)
000000000000b7b0 0000000000000030 T __libnx_initheap
000000000000b7e0 00000000000000a0 T __appInit
000000000000b880 0000000000000020 T __appExit
000000000000b8a0 0000000000000120 W void std::vector<IWaitable*, std::allocator<IWaitable*> >::_M_realloc_insert<IWaitable* const&>(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, IWaitable* const&)
000000000000b9c0 00000000000000c8 W WaitableManager<LoaderServerOptions>::AddWaitable(IWaitable*)
000000000000ba90 00000000000001b0 W WaitableManager<LoaderServerOptions>::AddSession(unsigned int, ServiceObjectHolder&&)
000000000000bc40 00000000000003e8 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::CloneCurrentObjectEx>(IpcResponseContext*)
000000000000c030 00000000000002ac W IServer<ShellService>::HandleSignaled(unsigned long)
000000000000c2e0 00000000000002ac W IServer<DebugMonitorService>::HandleSignaled(unsigned long)
000000000000c590 00000000000002ac W IServer<ProcessManagerService>::HandleSignaled(unsigned long)
000000000000c840 00000000000002bc W IServer<RelocatableObjectsService>::HandleSignaled(unsigned long)
000000000000cb00 00000000000003ec W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::CloneCurrentObject>(IpcResponseContext*)
000000000000cef0 0000000000000484 W unsigned int WrapIpcCommandImpl<&ServiceSession::IHipcControlService::CopyFromCurrentDomain>(IpcResponseContext*)
000000000000d380 0000000000000124 W std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long)
000000000000d4b0 0000000000000124 W std::vector<IWaitable*, std::allocator<IWaitable*> >::_M_default_append(unsigned long)
000000000000d5e0 000000000000016c W __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > > std::__remove_if<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_pred<WaitableManager<LoaderServerOptions>::GetWaitable()::{lambda(IWaitable*)#2}> >(__gnu_cxx::__ops::_Iter_pred<WaitableManager<LoaderServerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<LoaderServerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>, __gnu_cxx::__ops::_Iter_pred<WaitableManager<LoaderServerOptions>::GetWaitable()::{lambda(IWaitable*)#2}>)
000000000000d750 0000000000000270 W void std::vector<IWaitable*, std::allocator<IWaitable*> >::_M_range_insert<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > > >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, std::forward_iterator_tag)
000000000000d9c0 00000000000000d0 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)> >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)>)
000000000000da90 0000000000000184 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, IWaitable*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)> >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, long, IWaitable*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)>)
000000000000dc20 0000000000000214 W void std::__introsort_loop<__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)> >(__gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, __gnu_cxx::__normal_iterator<IWaitable**, std::vector<IWaitable*, std::allocator<IWaitable*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(IWaitable*, IWaitable*)>)
000000000000de40 00000000000006ac W WaitableManager<LoaderServerOptions>::GetWaitable()
000000000000e4f0 00000000000004ac W WaitableManager<LoaderServerOptions>::Process()
000000000000e9a0 0000000000000110 T RelocatableObjectsService::LoadNro(Out<unsigned long, void>, PidDescriptor, unsigned long, unsigned long, unsigned long, unsigned long)
000000000000eab0 0000000000000088 T RelocatableObjectsService::UnloadNro(PidDescriptor, unsigned long)
000000000000eb40 0000000000000210 T RelocatableObjectsService::LoadNrr(PidDescriptor, unsigned long, unsigned long)
000000000000ed50 0000000000000084 T RelocatableObjectsService::UnloadNrr(PidDescriptor, unsigned long)
000000000000ede0 0000000000000090 T RelocatableObjectsService::Initialize(PidDescriptor, CopiedHandle)
000000000000ee70 0000000000000338 T LZ4_decompress_safe
000000000000f1b0 0000000000000078 t ini_reader_string
000000000000f230 0000000000000094 t find_chars_or_comment
000000000000f2d0 0000000000000068 t rstrip
000000000000f340 000000000000029c T ini_parse_stream
000000000000f5e0 0000000000000018 T ini_parse_file
000000000000f600 000000000000003c T ini_parse_string
000000000000f640 0000000000000134 t _CacheValues()
000000000000f780 000000000000001c T GetRuntimeFirmwareVersion()
000000000000f7a0 0000000000000038 T SetFirmwareVersionForLibnx()
000000000000f7e0 000000000000017c T detectKernelVersion
000000000000f960 0000000000000030 T detectDebugger
000000000000f990 000000000000008c T mutexLock
000000000000fa20 0000000000000030 T mutexUnlock
000000000000fa50 000000000000004c T rmutexLock
000000000000faa0 000000000000001c T rmutexUnlock
000000000000fac0 0000000000000008 T threadStart
000000000000fad0 000000000000002c T threadWaitForExit
000000000000fb00 0000000000000054 T threadClose
000000000000fb60 000000000000000c T threadGetCurHandle
000000000000fb70 0000000000000010 T threadTlsGet
000000000000fb80 0000000000000010 T threadTlsSet
000000000000fb90 00000000000000d8 T threadTlsAlloc
000000000000fc70 0000000000000048 T threadTlsFree
000000000000fcc0 0000000000000034 t ipcCloseObjectById
000000000000fd00 0000000000000124 t _hidGetSharedMemoryHandle.constprop.10
000000000000fe30 0000000000000100 t _hidCmdWithNoInput
000000000000ff30 0000000000000134 t _hidCreateAppletResource.constprop.9
0000000000010070 000000000000010c t _hidCmdWithInputU32
0000000000010180 0000000000000108 t _hidCmdWithInputU64.constprop.11
0000000000010290 00000000000001e0 T hidReset
0000000000010470 000000000000000c T hidGetSessionService
0000000000010480 000000000000000c T hidGetSharedmemAddr
0000000000010490 000000000000006c T hidKeysHeld
0000000000010500 000000000000000c T hidTouchCount
0000000000010510 0000000000000578 T hidScanInput
0000000000010a90 0000000000000198 T hidSetSupportedNpadIdType
0000000000010c30 000000000000000c T hidSetSupportedNpadStyleSet
0000000000010c40 0000000000000008 T hidSetNpadJoyHoldType
0000000000010c50 000000000000000c T hidSetNpadJoyAssignmentModeDual
0000000000010c60 000000000000012c T hidExit
0000000000010d90 0000000000000168 T hidInitialize
0000000000010f00 0000000000000034 t ipcCloseObjectById
0000000000010f40 00000000000000c4 t ipcConvertSessionToDomain
0000000000011010 000000000000010c t ipcCloneSession.constprop.14
0000000000011120 000000000000009c T fsldrExit
00000000000111c0 00000000000002cc T fsldrOpenCodeFileSystem
0000000000011490 00000000000001b4 T fsldrSetCurrentProcess
0000000000011650 00000000000000c4 T fsldrInitialize
0000000000011720 0000000000000044 T smAddOverrideHandle
0000000000011770 0000000000000060 T smGetServiceOverride
00000000000117d0 0000000000000014 T smHasInitialized
00000000000117f0 000000000000005c T smExit
0000000000011850 0000000000000038 T smEncodeName
0000000000011890 000000000000012c T smGetServiceOriginal
00000000000119c0 0000000000000158 T smInitialize
0000000000011b20 0000000000000074 T smGetService
0000000000011ba0 000000000000014c T smRegisterService
0000000000011cf0 0000000000000140 t _fatalImpl
0000000000011e30 0000000000000014 T fatalWithType
0000000000011e50 0000000000000014 T fatalSimple
0000000000011e70 0000000000000158 t _lrResolvePath
0000000000011fd0 0000000000000034 t ipcCloseObjectById
0000000000012010 0000000000000140 t _lrRedirectPath
0000000000012150 000000000000003c T lrInitialize
0000000000012190 000000000000009c T lrExit
0000000000012230 0000000000000134 T lrOpenLocationResolver
0000000000012370 0000000000000134 T lrOpenRegisteredLocationResolver
00000000000124b0 0000000000000010 T lrLrResolveProgramPath
00000000000124c0 0000000000000010 T lrLrRedirectProgramPath
00000000000124d0 0000000000000010 T lrLrResolveApplicationHtmlDocumentPath
00000000000124e0 0000000000000010 T lrLrRedirectApplicationHtmlDocumentPath
00000000000124f0 0000000000000010 T lrRegLrResolveProgramPath
0000000000012500 0000000000000220 t ipcPrepareHeader
0000000000012720 000000000000022c t ipcParse
0000000000012950 00000000000000b0 t serviceIpcParse
0000000000012a00 0000000000000034 t ipcCloseObjectById
0000000000012a40 0000000000000200 T fsInitialize
0000000000012c40 000000000000009c T fsExit
0000000000012ce0 00000000000001cc T fsMountSdcard
0000000000012eb0 0000000000000248 T fsOpenFileSystemWithId
0000000000013100 00000000000001a4 T fsFsCreateFile
00000000000132b0 000000000000019c T fsFsDeleteFile
0000000000013450 000000000000019c T fsFsCreateDirectory
00000000000135f0 000000000000019c T fsFsDeleteDirectory
0000000000013790 0000000000000214 T fsFsRenameFile
00000000000139b0 0000000000000214 T fsFsRenameDirectory
0000000000013bd0 00000000000001b0 T fsFsGetEntryType
0000000000013d80 00000000000001e4 T fsFsOpenFile
0000000000013f70 00000000000001f8 T fsFsOpenDirectory
0000000000014170 00000000000001b0 T fsFsGetFreeSpace
0000000000014320 00000000000001b0 T fsFsGetTotalSpace
00000000000144d0 0000000000000194 T fsFsGetFileTimeStampRaw
0000000000014670 000000000000006c T fsFsClose
00000000000146e0 00000000000001f0 T fsFileRead
00000000000148d0 00000000000001b8 T fsFileWrite
0000000000014a90 000000000000016c T fsFileFlush
0000000000014c00 0000000000000174 T fsFileSetSize
0000000000014d80 0000000000000194 T fsFileGetSize
0000000000014f20 000000000000006c T fsFileClose
0000000000014f90 000000000000006c T fsDirClose
0000000000015000 00000000000001ec T fsDirRead
00000000000151f0 00000000000001d8 t _sha256ProcessBlocks
00000000000153d0 0000000000000034 T sha256ContextCreate
0000000000015410 00000000000000e8 T sha256ContextUpdate
0000000000015500 00000000000000e0 T sha256ContextGetHash
00000000000155e0 0000000000000044 T sha256CalculateHash
0000000000015630 0000000000000010 T hosversionGet
0000000000015640 0000000000000010 T hosversionSet
0000000000015650 0000000000000044 t consoleDrawChar
00000000000156a0 0000000000000028 t debug_write
00000000000156d0 0000000000000140 t consoleClearLine
0000000000015810 000000000000004c t consoleNewRow
0000000000015860 0000000000000118 t consolePrintChar
0000000000015980 000000000000015c t consoleCls
0000000000015ae0 00000000000007e0 t con_write
00000000000162c0 00000000000000c8 T consoleDebugInit
0000000000016390 0000000000000010 t fsdev_link
00000000000163a0 0000000000000010 t fsdev_dirreset
00000000000163b0 0000000000000010 t fsdev_chmod
00000000000163c0 000000000000001c t error_cmp
00000000000163e0 0000000000000058 t fsdev_translate_error
0000000000016440 0000000000000040 t fsdev_fsync
0000000000016480 0000000000000060 t fsdev_ftruncate
00000000000164e0 0000000000000020 t fsdev_dirclose
0000000000016500 000000000000016c t fsdev_dirnext
0000000000016670 000000000000001c t fsdev_close
0000000000016690 00000000000000a4 t fsdev_fstat
0000000000016740 00000000000000b0 t fsdev_seek
00000000000167f0 0000000000000198 t fsdev_read
0000000000016990 00000000000001a0 t fsdev_write
0000000000016b30 0000000000000120 t fsdevFindDevice
0000000000016c50 0000000000000140 t _fsdevMountDevice
0000000000016d90 00000000000001fc t fsdev_getfspath
0000000000016f90 0000000000000070 t fsdev_rmdir
0000000000017000 00000000000000d4 t fsdev_statvfs
00000000000170e0 00000000000000ec t fsdev_diropen
00000000000171d0 0000000000000070 t fsdev_mkdir
0000000000017240 0000000000000114 t fsdev_rename
0000000000017360 00000000000000e8 t fsdev_chdir
0000000000017450 0000000000000070 t fsdev_unlink
00000000000174c0 00000000000001bc t fsdev_stat
0000000000017680 000000000000019c t fsdev_open
0000000000017820 00000000000000b8 t _fsdevUnmountDeviceStruct.part.4
00000000000178e0 0000000000000010 t fsdev_fchmod
00000000000178f0 0000000000000014 T fsdevMountDevice
0000000000017910 000000000000003c T fsdevUnmountDevice
0000000000017950 0000000000000170 T fsdevMountSdmc
0000000000017ac0 0000000000000064 T fsdevUnmountAll
0000000000017b30 000000000000012c T decode_utf8
0000000000017c5c T svcUnmapMemory
0000000000017c64 T svcQueryMemory
0000000000017c78 T svcExitProcess
0000000000017c80 T svcStartThread
0000000000017c88 T svcMapSharedMemory
0000000000017c90 T svcUnmapSharedMemory
0000000000017c98 T svcCloseHandle
0000000000017ca0 T svcWaitSynchronization
0000000000017cb4 T svcCancelSynchronization
0000000000017cbc T svcArbitrateLock
0000000000017cc4 T svcArbitrateUnlock
0000000000017ccc T svcWaitProcessWideKeyAtomic
0000000000017cd4 T svcSignalProcessWideKey
0000000000017cdc T svcConnectToNamedPort
0000000000017cf0 T svcSendSyncRequest
0000000000017cf8 T svcGetProcessId
0000000000017d0c T svcBreak
0000000000017d14 T svcOutputDebugString
0000000000017d1c T svcReturnFromException
0000000000017d24 T svcGetInfo
0000000000017d38 T svcCreateSession
0000000000017d50 T svcAcceptSession
0000000000017d64 T svcReplyAndReceive
0000000000017d78 T svcSetProcessMemoryPermission
0000000000017d80 T svcMapProcessMemory
0000000000017d88 T svcUnmapProcessMemory
0000000000017d90 T svcMapProcessCodeMemory
0000000000017d98 T svcUnmapProcessCodeMemory
0000000000017da0 T svcCreateProcess
0000000000017db4 T svcCallSecureMonitor
0000000000017de8 T __aarch64_read_tp
0000000000017e00 0000000000000104 t _waitLoop
0000000000017f10 000000000000000c T waitHandles
0000000000017f20 0000000000000058 T rwlockReadLock
0000000000017f80 000000000000005c T rwlockReadUnlock
0000000000017fe0 0000000000000084 T rwlockWriteLock
0000000000018070 000000000000003c T rwlockWriteUnlock
00000000000180b0 0000000000000014 T shmemLoadRemote
00000000000180d0 0000000000000084 T shmemMap
0000000000018160 0000000000000058 T shmemUnmap
00000000000181c0 0000000000000044 T shmemClose
0000000000018210 000000000000007c t _GetRegionFromInfo.isra.1
0000000000018290 0000000000000114 T virtmemSetup
00000000000183b0 000000000000013c T virtmemReserve
00000000000184f0 0000000000000004 T virtmemFree
0000000000018500 0000000000000004 T virtmemFreeStack
0000000000018510 0000000000000060 T condvarWaitTimeout
0000000000018570 0000000000000028 T appletGetAppletResourceUserId
00000000000185a0 00000000000000a0 T __nx_dynamic
0000000000018640 0000000000000208 T envSetup
0000000000018850 0000000000000020 T envGetMainThreadHandle
0000000000018870 000000000000000c T envIsNso
0000000000018880 0000000000000014 T envHasArgv
00000000000188a0 000000000000000c T envGetArgv
00000000000188b0 000000000000000c T envGetExitFuncPtr
00000000000188c0 0000000000000028 W __libnx_init
00000000000188f0 0000000000000020 W __libnx_exit
0000000000018910 000000000000001c T __syscall_exit
0000000000018930 0000000000000034 T __syscall_getreent
0000000000018970 0000000000000004 T __syscall_lock_acquire
0000000000018980 0000000000000004 T __syscall_lock_release
0000000000018990 0000000000000004 T __syscall_lock_acquire_recursive
00000000000189a0 0000000000000004 T __syscall_lock_release_recursive
00000000000189b0 0000000000000040 T __syscall_cond_broadcast
00000000000189f0 000000000000003c T __syscall_cond_wait
0000000000018a30 0000000000000044 T __syscall_tls_create
0000000000018a80 0000000000000018 T __syscall_tls_set
0000000000018aa0 0000000000000004 T __syscall_tls_get
0000000000018ab0 0000000000000018 T __syscall_tls_delete
0000000000018ad0 0000000000000080 T newlibSetup
0000000000018b50 0000000000000324 T argvSetup
0000000000018e74 W __libnx_exception_entry
0000000000018f00 t __libnx_exception_entry_start
0000000000019028 t __libnx_exception_entry_abort
000000000001902c t __libnx_exception_entry_end
0000000000019034 T __libnx_exception_returnentry
0000000000019050 00000000000000c4 T nxlinkSetup
0000000000019118 0000000000000068 T operator new(unsigned long)
0000000000019180 000000000000000c T std::bad_alloc::what() const
0000000000019190 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000019190 0000000000000014 T std::bad_alloc::~bad_alloc()
00000000000191a8 0000000000000028 T std::bad_alloc::~bad_alloc()
00000000000191d0 0000000000000010 T std::get_new_handler()
00000000000191e0 0000000000000004 T std::exception::~exception()
00000000000191e0 0000000000000004 T std::exception::~exception()
00000000000191e8 0000000000000014 T std::bad_exception::~bad_exception()
00000000000191e8 0000000000000014 T std::bad_exception::~bad_exception()
0000000000019200 000000000000000c T std::bad_exception::what() const
0000000000019210 0000000000000028 T std::bad_exception::~bad_exception()
0000000000019238 0000000000000004 T operator delete(void*, unsigned long)
0000000000019240 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
00000000000192a8 0000000000000058 T __cxa_init_primary_exception
0000000000019300 0000000000000054 T __cxa_throw
0000000000019358 0000000000000070 T __cxa_rethrow
00000000000193c8 00000000000000a0 T __cxa_begin_catch
0000000000019468 0000000000000094 T __cxa_end_catch
0000000000019500 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
0000000000019510 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000019520 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000019520 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000019538 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000019538 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000019550 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000019588 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
00000000000195c0 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
00000000000195f8 0000000000000160 t (anonymous namespace)::pool::free(void*) [clone .constprop.2]
0000000000019758 0000000000000128 t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.3]
0000000000019880 0000000000000064 T __cxa_allocate_exception
00000000000198e8 0000000000000030 T __cxa_free_exception
0000000000019918 0000000000000004 T operator delete(void*)
0000000000019920 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000019920 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000019938 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000019960 0000000000000080 T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00000000000199e0 000000000000013c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000019b20 0000000000000068 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000019b88 0000000000000070 t std::local_Rb_tree_decrement(std::_Rb_tree_node_base*)
0000000000019bf8 0000000000000004 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0000000000019c00 0000000000000298 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0000000000019e98 00000000000004f4 T std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
000000000001a390 0000000000000054 T std::__throw_logic_error(char const*)
000000000001a3e8 0000000000000054 T std::__throw_length_error(char const*)
000000000001a440 0000000000000014 W __eh_globals_init::~__eh_globals_init()
000000000001a440 0000000000000014 W __eh_globals_init::~__eh_globals_init()
000000000001a458 0000000000000048 t eh_globals_dtor(void*)
000000000001a4a0 0000000000000024 T __cxa_get_globals_fast
000000000001a4c8 0000000000000074 T __cxa_get_globals
000000000001a540 000000000000003c T __cxxabiv1::__terminate(void (*)())
000000000001a580 0000000000000010 T std::get_terminate()
000000000001a590 0000000000000010 T std::terminate()
000000000001a5a0 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
000000000001a5b0 0000000000000010 T std::get_unexpected()
000000000001a5c0 0000000000000010 T std::unexpected()
000000000001a5d0 0000000000000004 T std::type_info::~type_info()
000000000001a5d0 0000000000000004 T std::type_info::~type_info()
000000000001a5d8 0000000000000008 T std::type_info::__is_pointer_p() const
000000000001a5d8 0000000000000008 T std::type_info::__is_function_p() const
000000000001a5e0 0000000000000084 t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
000000000001a668 000000000000015c t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
000000000001a7c8 00000000000000c0 t get_ttype_entry(lsda_header_info*, unsigned long)
000000000001a888 0000000000000094 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
000000000001a920 000000000000006c t base_of_encoded_value(unsigned char, _Unwind_Context*)
000000000001a990 0000000000000108 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
000000000001aa98 00000000000004dc T __gxx_personality_v0
000000000001af78 00000000000000f0 T __cxa_call_unexpected
000000000001b068 000000000000006c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
000000000001b0d8 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
000000000001b0e8 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000001b0e8 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000001b100 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
000000000001b128 00000000000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
000000000001b200 0000000000000068 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000000000001b268 00000000000000a8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
000000000001b310 0000000000000008 T std::logic_error::what() const
000000000001b318 0000000000000074 T std::logic_error::~logic_error()
000000000001b318 0000000000000074 T std::logic_error::~logic_error()
000000000001b390 0000000000000024 T std::logic_error::~logic_error()
000000000001b3b8 0000000000000014 T std::length_error::~length_error()
000000000001b3b8 0000000000000014 T std::length_error::~length_error()
000000000001b3d0 0000000000000024 T std::length_error::~length_error()
000000000001b3f8 0000000000000048 T std::logic_error::logic_error(char const*)
000000000001b3f8 0000000000000048 T std::logic_error::logic_error(char const*)
000000000001b440 0000000000000030 T std::length_error::length_error(char const*)
000000000001b440 0000000000000030 T std::length_error::length_error(char const*)
000000000001b470 0000000000000084 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
000000000001b4f8 0000000000000098 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.25]
000000000001b4f8 0000000000000098 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.22]
000000000001b590 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
000000000001b598 0000000000000034 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
000000000001b5d0 000000000000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
000000000001b5d0 000000000000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
000000000001b620 0000000000000044 T __cxa_call_terminate
000000000001b668 000000000000015c t read_encoded_value_with_base
000000000001b7c8 0000000000000070 t base_of_encoded_value
000000000001b838 000000000000080c t execute_cfa_program
000000000001c048 000000000000040c t uw_frame_state_for
000000000001c458 0000000000000158 t init_dwarf_reg_size_table
000000000001c5b0 0000000000000720 t execute_stack_op
000000000001ccd0 000000000000037c t uw_update_context_1
000000000001d050 0000000000000244 t uw_init_context_1
000000000001d298 00000000000000b4 t uw_update_context
000000000001d350 00000000000000e0 t _Unwind_RaiseException_Phase2
000000000001d430 0000000000000118 t _Unwind_ForcedUnwind_Phase2
000000000001d548 0000000000000164 t uw_install_context_1
000000000001d6b0 0000000000000054 t _Unwind_SetGR
000000000001d708 0000000000000014 t _Unwind_GetIPInfo
000000000001d720 0000000000000008 t _Unwind_SetIP
000000000001d728 0000000000000008 t _Unwind_GetLanguageSpecificData
000000000001d730 0000000000000008 t _Unwind_GetRegionStart
000000000001d738 0000000000000008 t _Unwind_GetDataRelBase
000000000001d740 0000000000000008 t _Unwind_GetTextRelBase
000000000001d748 0000000000000004 t _Unwind_DebugHook
000000000001d750 000000000000018c t _Unwind_RaiseException
000000000001d8e0 0000000000000114 t _Unwind_Resume
000000000001d9f8 0000000000000110 t _Unwind_Resume_or_Rethrow
000000000001db08 0000000000000018 t _Unwind_DeleteException
000000000001db20 000000000000001c t fde_unencoded_compare
000000000001db40 00000000000000f4 t frame_downheap
000000000001dc38 00000000000000c0 t frame_heapsort
000000000001dcf8 0000000000000060 t size_of_encoded_value
000000000001dd58 000000000000015c t read_encoded_value_with_base
000000000001deb8 0000000000000120 t get_cie_encoding
000000000001dfd8 0000000000000068 t base_from_object.isra.5
000000000001e040 0000000000000090 t fde_single_encoding_compare
000000000001e0d0 0000000000000194 t classify_object_over_fdes
000000000001e268 0000000000000148 t add_fdes
000000000001e3b0 0000000000000188 t linear_search_fdes
000000000001e538 00000000000000bc t fde_mixed_encoding_compare
000000000001e5f8 0000000000000698 t search_object
000000000001ec90 0000000000000120 t __deregister_frame_info_bases.part.8
000000000001edb0 0000000000000054 t __register_frame_info.part.7
000000000001ee08 0000000000000014 t __register_frame_info
000000000001ee20 0000000000000018 t __deregister_frame_info
000000000001ee38 00000000000001c0 t _Unwind_Find_FDE
000000000001eff8 0000000000000018 T abort
000000000001f010 00000000000000b8 T bsearch
000000000001f0c8 0000000000000094 T _calloc_r
000000000001f160 0000000000000014 T __cxa_atexit
000000000001f178 0000000000000014 T __errno
000000000001f190 000000000000015c T _fclose_r
000000000001f2f0 000000000000001c T fclose
000000000001f310 0000000000000214 T __sflush_r
000000000001f528 00000000000000b8 T _fflush_r
000000000001f5e0 0000000000000040 T fflush
000000000001f620 00000000000001b0 T _fgets_r
000000000001f7d0 000000000000003c T fgets
000000000001f810 0000000000000078 t std
000000000001f888 000000000000000c T _cleanup_r
000000000001f898 0000000000000060 T __sfmoreglue
000000000001f8f8 000000000000000c T __sfp_lock_acquire
000000000001f908 000000000000000c T __sfp_lock_release
000000000001f918 000000000000000c T __sinit_lock_acquire
000000000001f928 000000000000000c T __sinit_lock_release
000000000001f938 0000000000000080 T __sinit
000000000001f9b8 0000000000000118 T __sfp
000000000001fad0 0000000000000044 T __libc_fini_array
000000000001fb18 0000000000000130 T _fopen_r
000000000001fc48 0000000000000030 T fopen
000000000001fc78 0000000000000094 T fprintf
000000000001fd10 0000000000000328 T _fread_r
0000000000020038 0000000000000040 T fread
0000000000020078 0000000000000118 T _malloc_trim_r
0000000000020190 00000000000002f4 T _free_r
0000000000020488 0000000000000004 T _fseek_r
0000000000020490 000000000000003c T fseek
00000000000204d0 00000000000004c4 T _fseeko_r
0000000000020998 0000000000000004 T _ftell_r
00000000000209a0 000000000000001c T ftell
00000000000209c0 0000000000000164 T _ftello_r
0000000000020b28 00000000000000b8 T _fwalk
0000000000020be0 00000000000000bc T _fwalk_reent
0000000000020ca0 000000000000008c T __libc_init_array
0000000000020d30 000000000000001c T isxdigit
0000000000020d50 00000000000000a4 T __swhatbuf_r
0000000000020df8 000000000000010c T __smakebuf_r
0000000000020f08 000000000000001c T malloc
0000000000020f28 000000000000001c T free
0000000000020f48 000000000000087c T _malloc_r
00000000000217c4 00000000000000d8 T memchr
00000000000218c0 0000000000000110 T memcmp
0000000000021a00 000000000000016c T memcpy
0000000000021b80 00000000000000ac T memmove
0000000000021c40 00000000000001dc T memset
0000000000021e20 000000000000000c T __malloc_lock
0000000000021e30 000000000000000c T __malloc_unlock
0000000000021e40 0000000000000020 t lflush
0000000000021e60 00000000000001d0 T __srefill_r
0000000000022030 000000000000025c T setvbuf
0000000000022290 00000000000000b4 T _raise_r
0000000000022348 000000000000001c T raise
0000000000022368 000000000000014c T snprintf
00000000000224b8 00000000000000bc T sscanf
0000000000022578 0000000000000050 T __sread
00000000000225c8 0000000000000008 T __seofread
00000000000225d0 000000000000006c T __swrite
0000000000022640 0000000000000050 T __sseek
0000000000022690 0000000000000008 T __sclose
0000000000022698 0000000000000078 T strcasecmp
0000000000022710 00000000000000dc T strchr
0000000000022800 00000000000000e4 T strcmp
0000000000022900 0000000000000140 T strlen
0000000000022a40 0000000000000084 T strncat
0000000000022b1c 00000000000001b8 T strncmp
0000000000022cd8 00000000000000a8 T strncpy
0000000000022da4 00000000000000e0 T strnlen
0000000000022e60 00000000000001ac t _strtoul_l.isra.0
0000000000023010 0000000000000034 T _strtoul_r
0000000000023048 0000000000000048 T strtoul
0000000000023090 000000000000076c t get_arg
00000000000237fc 0000000000003b38 T _svfprintf_r
0000000000027334 000000000000005c t get_arg
0000000000027390 0000000000002fd8 T __ssvfscanf_r
000000000002a368 000000000000076c t get_arg
000000000002aad4 0000000000003c28 T _vfprintf_r
000000000002e6fc 00000000000000ec t __sbprintf
000000000002e7e8 00000000000000d0 T _wcrtomb_r
000000000002e8b8 0000000000000010 T _wcsrtombs_r
000000000002e8c8 0000000000000140 T __swsetup_r
000000000002ea08 00000000000000d0 T __register_exitproc
000000000002ead8 0000000000000124 T __call_exitprocs
000000000002ec00 00000000000001a8 t quorem
000000000002eda8 00000000000010dc T _dtoa_r
000000000002fe88 00000000000000a8 T __sflags
000000000002ff30 0000000000000008 T iswspace
000000000002ff38 0000000000000008 T __localeconv_l
000000000002ff40 0000000000000028 T _localeconv_r
000000000002ff68 000000000000002c T __locale_mb_cur_max
000000000002ff98 00000000000000d8 T _mbrtowc_r
0000000000030070 00000000000002c8 T __utf8_mbtowc
0000000000030338 0000000000000090 T _Balloc
00000000000303c8 000000000000001c T _Bfree
00000000000303e8 00000000000000e8 T __multadd
00000000000304d0 0000000000000120 T __s2b
00000000000305f0 000000000000005c T __hi0bits
0000000000030650 00000000000000a0 T __lo0bits
00000000000306f0 000000000000002c T __i2b
0000000000030720 00000000000001c8 T __multiply
00000000000308e8 0000000000000104 T __pow5mult
00000000000309f0 0000000000000134 T __lshift
0000000000030b28 0000000000000050 T __mcmp
0000000000030b78 000000000000014c T __mdiff
0000000000030cc8 0000000000000068 T __ulp
0000000000030d30 0000000000000150 T __b2d
0000000000030e80 0000000000000138 T __d2b
0000000000030fb8 00000000000000a0 T __ratio
0000000000031058 0000000000000068 T __copybits
00000000000310c0 0000000000000084 T __any_on
0000000000031148 0000000000000030 T realloc
0000000000031178 000000000000056c T _realloc_r
00000000000316e8 00000000000000bc T __sccl
00000000000317a8 000000000000000c T nanf
00000000000317b8 000000000000007c T frexp
0000000000031838 00000000000000a8 T sprintf
00000000000318e0 00000000000000c8 T stpncpy
00000000000319a8 0000000000000054 t sulp
0000000000031a00 00000000000010e8 T _strtod_l
0000000000032ae8 0000000000000040 T _strtod_r
0000000000032b28 00000000000001a0 t _strtoll_l.isra.0
0000000000032cc8 0000000000000034 T _strtoll_r
0000000000032d00 00000000000001a0 t _strtol_l.isra.0
0000000000032ea0 0000000000000034 T _strtol_r
0000000000032ed8 00000000000001ac t _strtoull_l.isra.0
0000000000033088 0000000000000034 T _strtoull_r
00000000000330bc 00000000000001c0 T __ssprint_r
000000000003327c 00000000000000f4 T _sungetc_r
0000000000033370 0000000000000070 T __ssrefill_r
00000000000333e0 00000000000000e0 T _sfread_r
00000000000334c0 00000000000000c8 T __submore
0000000000033588 000000000000003c T __sprint_r
00000000000335c8 00000000000001dc T _wcsnrtombs_l
00000000000337a8 0000000000000054 T _wcsnrtombs_r
0000000000033800 00000000000000e4 T __utf8_wctomb
00000000000338e8 00000000000004b8 T __sfvwrite_r
0000000000033da0 0000000000000114 t rshift
0000000000033eb8 00000000000007e8 T __gethex
00000000000346a0 0000000000000048 T __match
00000000000346e8 000000000000022c T __hexnan
0000000000034918 000000000000004c T iswspace_l
0000000000034968 0000000000000244 t __jp2uc
0000000000034bb0 00000000000000bc T _jp2uc_l
0000000000034c70 000000000000000c T nan
0000000000034c80 0000000000000088 T category
0000000000034d08 0000000000000008 t null_write
0000000000034d10 0000000000000018 T setDefaultDevice
0000000000034d28 0000000000000108 T FindDevice
0000000000034e30 0000000000000034 T RemoveDevice
0000000000034e68 00000000000000d8 T AddDevice
0000000000034f40 00000000000000a8 T _close_r
0000000000034fe8 0000000000000080 T _fstat_r
0000000000035068 0000000000000010 T _getpid_r
0000000000035078 0000000000000008 T _isatty_r
0000000000035080 0000000000000010 T _kill_r
0000000000035090 0000000000000094 T _lseek_r
0000000000035128 00000000000000e0 T _open_r
0000000000035208 00000000000000a4 T _read_r
00000000000352b0 0000000000000078 T _sbrk_r
0000000000035328 00000000000000a4 T _write_r
00000000000353d0 0000000000000020 T _exit
00000000000353f0 0000000000000234 T _concatenate_path
0000000000035628 0000000000000178 T chdir
00000000000357a0 0000000000000014 T __libc_lock_acquire
00000000000357b8 0000000000000014 T __libc_lock_release
00000000000357d0 000000000000000c T __libc_lock_init_recursive
00000000000357e0 0000000000000014 T __libc_lock_acquire_recursive
00000000000357f8 0000000000000014 T __libc_lock_release_recursive
0000000000035810 0000000000000004 T __libc_lock_close_recursive
0000000000035818 0000000000000018 T __libc_cond_broadcast
0000000000035830 0000000000000018 T __libc_cond_wait
0000000000035848 000000000000003c T __free_handle
0000000000035888 0000000000000058 T __release_handle
00000000000358e0 00000000000000c0 T __alloc_handle
00000000000359a0 0000000000000020 T __get_handle
00000000000359c0 0000000000000074 t __dirnext
0000000000035a38 0000000000000110 T opendir
0000000000035b48 00000000000000a4 T closedir
0000000000035bf0 00000000000000fc T readdir
0000000000035cf0 0000000000000020 T __getreent
0000000000035d10 000000000000006c T pthread_mutex_lock
0000000000035d80 000000000000006c T pthread_mutex_unlock
0000000000035df0 00000000000000dc T pthread_once
0000000000035ed0 0000000000000024 T pthread_key_create
0000000000035ef8 0000000000000018 T pthread_setspecific
0000000000035f10 0000000000000018 T pthread_getspecific
0000000000035f28 0000000000000018 T pthread_key_delete
0000000000035f40 0000000000000150 t __extenddftf2
0000000000036090 0000000000000348 t __trunctfdf2
00000000000363d8 0000000000000070 t __sfp_handle_exceptions
0000000000036448 0000000000000100 T strrchr
0000000000036548 T _fini
0000000000037150 000000000000000c r NsoUtils::LoadNsosIntoProcessMemory(unsigned int, unsigned long, NsoUtils::NsoLoadExtents*, unsigned char*, unsigned int)::segment_perms
0000000000037270 0000000000000001 V std::piecewise_construct
0000000000037478 V IDomainObject::s_DispatchTable
0000000000037478 0000000000000010 V std::_Sp_make_shared_tag::_S_ti()::__tag
0000000000037550 000000000000001c r CSWTCH.8
00000000000375c0 0000000000000020 r H_0.21904
0000000000037600 0000000000000100 r s_roundConstants
00000000000377e0 0000000000000018 r error_table
0000000000037810 000000000000000d V typeinfo name for std::bad_alloc
0000000000037830 000000000000000d V typeinfo name for std::exception
0000000000037840 0000000000000012 V typeinfo name for std::bad_exception
0000000000037858 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
0000000000037878 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
00000000000378b8 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00000000000378e0 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
0000000000037960 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
0000000000037988 000000000000000d V typeinfo name for std::type_info
0000000000037998 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
00000000000379c0 0000000000000010 V typeinfo name for std::logic_error
00000000000379d0 0000000000000011 V typeinfo name for std::length_error
0000000000037ca0 0000000000000008 r terminator.9403
0000000000037ca8 0000000000000101 R _ctype_
0000000000037f38 0000000000000010 r blanks.6590
0000000000037f48 0000000000000010 r zeroes.6591
0000000000038018 0000000000000022 r basefix.6623
0000000000038188 0000000000000010 r blanks.6605
0000000000038198 0000000000000010 r zeroes.6606
0000000000038230 0000000000000028 R __mprec_bigtens
0000000000038258 00000000000000c8 R __mprec_tens
0000000000038320 000000000000000c r p05.5339
0000000000038360 0000000000000014 r fpi.5419
0000000000038378 0000000000000014 r fpinan.5455
0000000000038390 0000000000000028 r tinytens
00000000000383b8 000000000000006c R __action_table
0000000000038428 0000000000000100 R __chclass
0000000000038528 000000000000006c R __state_table
0000000000038598 0000000000000100 R __hexdig
00000000000386b0 00000000000000bc r a1
0000000000038770 00000000000000bc r a2
0000000000038830 000000000000005b r a3
0000000000038890 0000000000000070 r a6
0000000000038900 00000000000000a2 r a7
00000000000389a8 0000000000000040 r a8
00000000000389e8 000000000000172a r b02cf
000000000003a118 0000000000001a7c r d02f4
000000000003bb98 000000000000309c r categories
000000000003ec40 0000000000000003 R DIRECTORY_PARENT
000000000003ec48 r __EH_FRAME_BEGIN__
000000000003ec48 R __eh_frame_hdr_end
000000000003ec48 R __eh_frame_hdr_start
0000000000047754 r __FRAME_END__
0000000000047830 a _DYNAMIC
000000000004c000 t __frame_dummy_init_array_entry
000000000004c000 T __init_array_start
000000000004c000 B __preinit_array_end
000000000004c000 B __preinit_array_start
000000000004c000 D __tdata_lma
000000000004c000 D __tdata_lma_end
000000000004c020 t __do_global_dtors_aux_fini_array_entry
000000000004c020 T __fini_array_start
000000000004c020 T __init_array_end
000000000004c028 a _GLOBAL_OFFSET_TABLE_
000000000004c028 T __fini_array_end
000000000004c028 T __got_start__
000000000004c348 D __dso_handle
000000000004c348 D __got_end__
000000000004c350 0000000000000008 d g_num_registered
000000000004c358 0000000000000020 d g_hbl_override_config
000000000004c378 0000000000000302 d g_hbl_sd_path
000000000004c680 0000000000000010 d g_default_override_key
000000000004c690 0000000000000020 d ContentManagement::TryMountSdCard()::required_active_services
000000000004c6b0 0000000000000008 D nx_inner_heap_size
000000000004c6b8 0000000000000004 D __nx_applet_type
000000000004c6c0 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<RelocatableObjectsService, std::allocator<RelocatableObjectsService>, (__gnu_cxx::_Lock_policy)2>
000000000004c6f8 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<DebugMonitorService, std::allocator<DebugMonitorService>, (__gnu_cxx::_Lock_policy)2>
000000000004c730 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<ShellService, std::allocator<ShellService>, (__gnu_cxx::_Lock_policy)2>
000000000004c768 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<ProcessManagerService, std::allocator<ProcessManagerService>, (__gnu_cxx::_Lock_policy)2>
000000000004c7a0 0000000000000020 V vtable for ServiceSession::IHipcControlService
000000000004c7c0 0000000000000060 V vtable for ServiceSession
000000000004c820 0000000000000020 V vtable for ProcessManagerService
000000000004c840 0000000000000020 V vtable for DebugMonitorService
000000000004c860 0000000000000020 V vtable for ShellService
000000000004c880 0000000000000020 V vtable for RelocatableObjectsService
000000000004c8a0 00000000000000e0 V vtable for WaitableManager<LoaderServerOptions>
000000000004c980 0000000000000038 V vtable for IServer<ProcessManagerService>
000000000004c9b8 0000000000000038 V vtable for ServiceServer<ProcessManagerService>
000000000004c9f0 0000000000000038 V vtable for IServer<ShellService>
000000000004ca28 0000000000000038 V vtable for ServiceServer<ShellService>
000000000004ca60 0000000000000038 V vtable for IServer<DebugMonitorService>
000000000004ca98 0000000000000038 V vtable for ServiceServer<DebugMonitorService>
000000000004cad0 0000000000000038 V vtable for IServer<RelocatableObjectsService>
000000000004cb08 0000000000000038 V vtable for ServiceServer<RelocatableObjectsService>
000000000004cb40 0000000000000038 V vtable for std::_Sp_counted_ptr_inplace<ServiceSession::IHipcControlService, std::allocator<ServiceSession::IHipcControlService>, (__gnu_cxx::_Lock_policy)2>
000000000004cb78 0000000000000078 V RelocatableObjectsService::s_DispatchTable
000000000004cbf0 0000000000000060 V ShellService::s_DispatchTable
000000000004cc50 0000000000000048 V DebugMonitorService::s_DispatchTable
000000000004cc98 0000000000000060 V ProcessManagerService::s_DispatchTable
000000000004ccf8 0000000000000078 V ServiceSession::IHipcControlService::s_DispatchTable
000000000004cd70 0000000000000008 d currentConsole
000000000004cd78 00000000000000e0 d dotab_null
000000000004ce58 00000000000000e0 d dotab_stdout
000000000004cf38 00000000000000e0 d dotab_svc
000000000004d018 0000000000000401 d __cwd
000000000004d41c 0000000000000004 d fsdev_fsdevice_cwd
000000000004d420 0000000000000004 d fsdev_fsdevice_default
000000000004d428 00000000000000e0 d fsdev_devoptab
000000000004d508 0000000000000008 V __nx_exception_stack_size
000000000004d510 0000000000000018 V typeinfo for std::bad_alloc
000000000004d528 0000000000000028 V vtable for std::bad_alloc
000000000004d550 0000000000000010 V typeinfo for std::exception
000000000004d560 0000000000000018 V typeinfo for std::bad_exception
000000000004d578 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
000000000004d588 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
000000000004d598 0000000000000028 V vtable for std::bad_exception
000000000004d5c0 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
000000000004d5d8 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
000000000004d5f0 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
000000000004d618 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
000000000004d640 0000000000000008 V DW.ref.__gxx_personality_v0
000000000004d648 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
000000000004d660 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
000000000004d6b8 0000000000000010 V typeinfo for std::type_info
000000000004d6c8 0000000000000008 D __cxxabiv1::__terminate_handler
000000000004d6d0 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
000000000004d6e8 0000000000000058 V vtable for __cxxabiv1::__class_type_info
000000000004d740 0000000000000018 V typeinfo for std::logic_error
000000000004d758 0000000000000018 V typeinfo for std::length_error
000000000004d770 0000000000000028 V vtable for std::logic_error
000000000004d798 0000000000000028 V vtable for std::length_error
000000000004d7c0 0000000000000008 D __cxxabiv1::__unexpected_handler
000000000004d7c8 0000000000000008 D _impure_ptr
000000000004d7d0 0000000000000768 d impure_data
000000000004df38 0000000000000008 D _global_impure_ptr
000000000004df40 0000000000000008 D __malloc_sbrk_base
000000000004df48 0000000000000008 D __malloc_trim_threshold
000000000004df50 0000000000000810 D __malloc_av_
000000000004e760 00000000000001a8 D __global_locale
000000000004e908 0000000000000002 d numempty
000000000004e910 0000000000000018 D _C_numeric_locale
000000000004e928 0000000000000004 d defaultDevice
000000000004e930 0000000000000080 D devoptab_list
000000000004e9b0 00000000000000e0 D dotab_stdnull
000000000004ea90 0000000000000400 d _current_working_directory
000000000004ee90 0000000000000010 d __stderr_handle
000000000004eea0 0000000000000010 d __stdin_handle
000000000004eeb0 0000000000000010 d __stdout_handle
000000000004eec0 0000000000002000 d handles
0000000000050ec0 D __TMC_END__
0000000000050ec0 D __bss_start__
0000000000050ec0 b completed.7870
0000000000050ec8 b object.7875
0000000000050ef8 0000000000000301 b g_npdm_path
0000000000051200 0000000000008050 b g_original_npdm_cache
0000000000059250 0000000000008050 b g_npdm_cache
00000000000612a0 00000000000b4e08 b g_registration_list
00000000001160a8 0000000000000301 b g_nso_path
00000000001163b0 000000000000000d b g_nso_present
00000000001163c0 0000000000000d00 b g_nso_headers
00000000001170c0 0000000000000001 b g_has_initialized_fs_dev
00000000001170c1 0000000000000001 b g_mounted_hbl_nsp
00000000001170c8 000000000000000c b g_HblFileSystem
00000000001170d8 000000000000000c b g_CodeFileSystem
00000000001170e8 0000000000000018 b g_created_titles
0000000000117100 0000000000000800 b g_config_ini_data
0000000000117900 0000000000000030 b g_external_content_sources
0000000000117930 0000000000000001 b g_has_initialized
0000000000117938 0000000000000010 b g_random_state
0000000000117948 00000000000500a0 b g_launch_queue
00000000001679e8 0000000000030000 B nx_inner_heap
00000000001979e8 0000000000000001 b g_HasCached
00000000001979ec 0000000000000004 b g_Mutex
00000000001979f0 0000000000000004 b g_firmware_version
00000000001979f4 0000000000000004 b g_Version
00000000001979f8 0000000000000001 b g_VersionCached
00000000001979fc 0000000000000004 b g_VersionMutex
0000000000197a00 0000000000000008 b g_threadList
0000000000197a08 0000000000000004 b g_threadMutex
0000000000197a10 00000000000000e0 b g_tlsDestructors
0000000000197af0 0000000000000008 b g_tlsUsageMask
0000000000197af8 0000000000000050 b g_controllerDown
0000000000197b48 00000000000001e0 b g_controllerEntries
0000000000197d28 0000000000000190 b g_controllerHeaders
0000000000197eb8 0000000000000050 b g_controllerHeld
0000000000197f08 0000000000000028 b g_controllerLayout
0000000000197f30 0000000000000050 b g_controllerOld
0000000000197f80 0000000000000004 b g_controllerP1AutoID
0000000000197f88 0000000000000050 b g_controllerTimestamps
0000000000197fd8 0000000000000050 b g_controllerUp
0000000000198028 000000000000000c b g_hidIAppletResource
0000000000198038 0000000000000010 b g_hidLock
0000000000198048 0000000000000020 b g_hidSharedmem
0000000000198068 000000000000000c b g_hidSrv
0000000000198078 0000000000000020 b g_keyboardDown
0000000000198098 0000000000000038 b g_keyboardEntry
00000000001980d0 0000000000000020 b g_keyboardHeld
00000000001980f0 0000000000000008 b g_keyboardModDown
00000000001980f8 0000000000000008 b g_keyboardModHeld
0000000000198100 0000000000000008 b g_keyboardModOld
0000000000198108 0000000000000008 b g_keyboardModUp
0000000000198110 0000000000000020 b g_keyboardOld
0000000000198130 0000000000000008 b g_keyboardTimestamp
0000000000198138 0000000000000020 b g_keyboardUp
0000000000198158 0000000000000400 b g_mouse
0000000000198558 0000000000000008 b g_mouseDown
0000000000198560 0000000000000008 b g_mouseEntry
0000000000198568 0000000000000008 b g_mouseHeld
0000000000198570 0000000000000008 b g_mouseOld
0000000000198578 0000000000000008 b g_mouseTimestamp
0000000000198580 0000000000000008 b g_mouseUp
0000000000198588 0000000000000008 b g_refCnt
0000000000198590 000000000000000a b g_sixaxisEnabled
00000000001985a0 0000000000004650 b g_sixaxisLayouts
000000000019cbf0 0000000000000298 b g_touchEntry
000000000019ce88 0000000000000008 b g_touchTimestamp
000000000019ce90 0000000000000008 b g_fsldrRefCnt
000000000019ce98 000000000000000c b g_fsldrSrv
000000000019cea8 0000000000000008 b g_refCnt
000000000019ceb0 0000000000000004 b g_smHandle
000000000019ceb8 0000000000000200 b g_smOverrides
000000000019d0b8 0000000000000008 b g_smOverridesNum
000000000019d0c0 0000000000000008 b g_managerRefCnt
000000000019d0c8 000000000000000c b g_managerSrv
000000000019d0d8 000000000000000c b g_fsSrv
000000000019d0e8 0000000000000008 b g_refCnt
000000000019d0f0 0000000000000004 b g_hosVersion
000000000019d0f8 0000000000000058 b currentCopy
000000000019d150 0000000000002300 b fsdev_fsdevices
000000000019f450 0000000000000001 b fsdev_initialised
000000000019f458 0000000000000010 b g_AddressSpace
000000000019f468 0000000000000008 b g_CurrentAddr
000000000019f470 0000000000000030 b g_Region
000000000019f4a0 0000000000000004 b g_VirtMemMutex
000000000019f4a8 0000000000000008 b g_appletResourceUserId
000000000019f4b0 000000000000000c b g_appletSrv
000000000019f4bc 0000000000000001 b g_hasRandomSeed
000000000019f4bd 0000000000000001 b g_isNso
000000000019f4c0 0000000000000004 b g_lastLoadResult
000000000019f4c8 0000000000000008 b g_loaderRetAddr
000000000019f4d0 0000000000000004 b g_mainThreadHandle
000000000019f4d8 0000000000000008 b g_nextLoadArgv
000000000019f4e0 0000000000000008 b g_nextLoadPath
000000000019f4e8 0000000000000008 b g_overrideArgv
000000000019f4f0 0000000000000008 b g_overrideHeapAddr
000000000019f4f8 0000000000000008 b g_overrideHeapSize
000000000019f500 0000000000000004 b g_processHandle
000000000019f508 0000000000000010 b g_randomSeed
000000000019f518 0000000000000010 b g_syscallHints
000000000019f528 0000000000000004 V __nx_exception_ignoredebug
000000000019f530 0000000000000400 V __nx_exception_stack
000000000019f930 0000000000000008 b g_argv_empty
000000000019f938 0000000000000008 b (anonymous namespace)::__new_handler
000000000019f940 0000000000000028 b (anonymous namespace)::emergency_pool
000000000019f968 0000000000000010 b eh_globals
000000000019f978 0000000000000008 b init
000000000019f980 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
000000000019f9a0 0000000000000062 b dwarf_reg_size_table
000000000019fa08 0000000000000004 b once_regsizes.9756
000000000019fa10 0000000000000008 b marker.9297
000000000019fa18 0000000000000010 b object_mutex
000000000019fa28 0000000000000008 b seen_objects
000000000019fa30 0000000000000008 b unseen_objects
000000000019fa38 000000000000000c b __sfp_recursive_mutex
000000000019fa48 000000000000000c b __sinit_recursive_mutex
000000000019fa58 0000000000000028 B __malloc_current_mallinfo
000000000019fa80 0000000000000008 B __malloc_max_sbrked_mem
000000000019fa88 0000000000000008 B __malloc_max_total_mem
000000000019fa90 0000000000000008 B __malloc_top_pad
000000000019fa98 000000000000000c b __malloc_recursive_mutex
000000000019faa8 000000000000000c B __atexit_recursive_mutex
000000000019fab8 0000000000000008 b heap_start.5295
000000000019fac0 0000000000000008 B fake_heap_end
000000000019fac8 0000000000000008 B fake_heap_start
000000000019fad0 0000000000000400 b temp_cwd
000000000019fed0 0000000000000004 b __hndl_lock
000000000019fed4 0000000000000004 b __pthread_once_cv
000000000019fed8 0000000000000004 b __pthread_once_lock
000000000019fee0 0000000000000340 B __nx_exceptiondump
00000000001a0220 0000000000000008 B __stack_top
00000000001a0228 0000000000000008 B __system_argv
00000000001a0230 0000000000000004 B __system_argc
00000000001a0238 0000000000000004 B __nxlink_host
00000000001a0240 B __tls_start
00000000001a4648 B __bss_end__
00000000001a4648 A __end__
00000000001a4648 B __tls_end
00000000001a5000 A __argdata__
